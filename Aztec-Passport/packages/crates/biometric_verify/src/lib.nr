pub mod utils;

pub global THRESHOLD: u32 = 550;

use utils::{Descriptor, get_euclidean_distance};

pub fn verify_biometric(actual: Descriptor, given: Descriptor) -> (u32, bool) {
    let distance = get_euclidean_distance(actual, given);
    (distance, distance <= THRESHOLD)
}

#[test]
fn test_valid() {
    let mut actual: [u32; 128] = [
        443, 603, 546, 453, 476, 401, 522, 420, 621, 425, 706, 532, 234, 431, 558, 619, 406, 375, 344, 425, 554, 414, 667, 495, 325, 173, 382, 430, 541, 397, 502, 496, 346, 406, 458, 562, 443, 484, 754, 523, 315, 591, 537, 751, 820, 527, 590, 469, 527, 228, 581, 602, 624, 591, 588, 441, 526, 598, 320, 559, 627, 413, 453, 482, 688, 615, 369, 422, 634, 337, 487, 531, 390, 361, 166, 573, 824, 681, 409, 527, 367, 552, 503, 461, 386, 491, 405, 606, 632, 457, 429, 675, 502, 607, 559, 635, 351, 492, 351, 566, 572, 373, 574, 593, 407, 652, 454, 493, 487, 581, 350, 462, 622, 298, 725, 816, 487, 564, 685, 529, 474, 592, 369, 472, 521, 542, 634, 591
    ];

    let mut given : [u32; 128] = [
        421, 653, 568, 460, 476, 472, 522, 422, 614, 451, 713, 589, 247, 462, 520, 596, 393, 369, 357, 414, 635, 463, 635, 432, 234, 206, 381, 404, 517, 419, 565, 467, 379, 489, 490, 541, 422, 494, 777, 551, 303, 583, 551, 784, 808, 524, 601, 465, 514, 243, 637, 622, 615, 602, 622, 405, 520, 632, 281, 553, 601, 365, 455, 505, 671, 638, 362, 419, 690, 347, 476, 511, 386, 342, 152, 572, 855, 684, 410, 548, 413, 544, 518, 520, 351, 520, 438, 610, 631, 463, 431, 719, 510, 539, 581, 594, 357, 467, 369, 543, 514, 363, 578, 631, 370, 638, 463, 464, 427, 514, 369, 474, 635, 275, 689, 800, 498, 608, 716, 501, 512, 573, 319, 513, 519, 526, 615, 605
    ];

    let (distance, valid) = verify_biometric(actual, given);
    println(f"Distance: {distance}");
    println(f"Valid: {valid}");
}
