{"transpiled":true,"noir_version":"0.35.0+b848cc128d2dc2b461581f21a35509a1af9065a7-aarch64","name":"XModule","functions":[{"name":"is_admin","is_unconstrained":true,"custom_attributes":["public"],"abi":{"error_types":{},"parameters":[],"return_type":{"abi_type":{"kind":"boolean"},"visibility":"public"}},"bytecode":"JAAEAQIlAAQIRAAAJAAEAAMkAAQABB8AAAAABAAAAAMAAAhDIgAAAAgrAAADCEM5AAAACEMAAAABHgAAAAQeAAAABTAAAAAABAAAAAUAAAAGJAACAQUKAAIGBQQhAAAPAAQ6AQAAKgAABiQABAIFAAAEAAUAJAEEAQYAAAQGAgUqAAUEJAAHAAcqAgcEKgEGBQAABAUCBSoCBQYqAAAFAAAEAAIAKgIGBSQABAEHJAAEAAYkAAcBBCoABgMgACIKAAQDBgghAAAtAAggACUqAQUEAAAEBAIDAAAEAwYHKgEHBR4AAgAGCgAHBQYEKgAEAyMqAQUIHAAHAwkAAAcECQosAAAAAAoAAAAJJAAEAQsMAAQDCwwhAAA1AAw6AQAAKwAACAgDJQAEAAIIBCIAAABDKwAIBQAKAAAECgIMAAAEDAMLKgIJCwAABAMHCQ4ABAMJCCEAAEAACDoBAAAqAgoFKgAJAyAAIisBCAMIBgsABAgGAAIIByEAAEcIByAASSsACAMIBSAAVysAAAAIBQEABAAACAQAACUABAAACAkNAAQICQgECAoXAAgKCAohAABVCAoBAAQIAwgJCAsrAQgLCAgBAAQIBQgJCAsrAggICAsBAAQICQACCAkgAEwlAQQAAQgFIABXIysAGMoYyg==","debug_symbols":"1ZrdbsIwDIXfJddcxM6PY15lmqaywVSpKhOwSRPi3Ve2JnSlSy82pvgGETiyv0R2T131qJ7Wq9fnh7rdbPdqeXdUzfaxOtTbtlsdTwu12tVNUz8/DH9W+vwRPuX7l6o9r/aHandQSyC0C7Vun85fje0CbOpmrZYEp8WVmA31WnaUpODshNYicC+2iCGp2UyIfQDTi31AHorvF4p/DQ4aklgPxDdHB/37Q6cYn3nu0AFtFAMy58lDF6MXBxiE7snhD8m7Q/+Ofk6At05gbp3A3jqBm0xgbGxDMN7NVT6FKO5SXDIQTagd+1j5jlnn68eRgSgmg+P68YLZSTB7EMzOctlRC2YHwewomN0IZreC2QX7Kgr2VRTsqyjYV03hvepCYnfjCcoUXjNkE3vQY/b/r5k00nmtXZ4dNPtL6IvYaPqEZ8HwVkuG/+F2jCDBB87DWxMwPsIwc0Xs2Sd2pnED2vkbLNIzNBi3az1c7bZwM85dnGzZZhwgmUJAGLMXfmFNLTLFXrgZB3Nhx7yYu1aNz/csXW208Ik4536u8Ik4y174RJxlL3wizrIXPhFn2a1g9sJNOMte+EScZRc83bjCTTjLLthXvWBf9YJ91Qv2VS/YV71YXz11q7dqV1erZt2/nrF5bR8Hb2sc3l++/unEHw==","brillig_names":["is_admin"],"assert_messages":{"52":"Array index out of bounds","14":"Not initialized","63":"attempt to add with overflow"}},{"name":"constructor","is_unconstrained":true,"custom_attributes":["public","initializer"],"abi":{"error_types":{},"parameters":[{"name":"_admin","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"},"visibility":"private"}],"return_type":null},"bytecode":"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","debug_symbols":"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","brillig_names":["constructor"],"assert_messages":{"128":"attempt to add with overflow","448":"Array index out of bounds","698":"Array index out of bounds","110":"Array index out of bounds","366":"Array index out of bounds","616":"Array index out of bounds","430":"Array index out of bounds","415":"attempt to add with overflow","598":"Array index out of bounds","592":"attempt to add with overflow","394":"Array index out of bounds","522":"Array index out of bounds","510":"attempt to add with overflow","571":"Array index out of bounds","117":"Array index out of bounds","690":"Array index out of bounds","678":"attempt to add with overflow","538":"Array index out of bounds","340":"Initializer address is not the contract deployer","334":"Initialization hash does not match","462":"attempt to add with overflow","72":"attempt to add with overflow","386":"Array index out of bounds","706":"Array index out of bounds","374":"attempt to add with overflow","563":"Array index out of bounds","630":"attempt to add with overflow","106":"attempt to add with overflow","551":"attempt to add with overflow","344":"Aztec Passport: Invalid Address","402":"Array index out of bounds","530":"Array index out of bounds","719":"attempt to add with overflow","579":"Array index out of bounds"}},{"name":"get_admin_public","is_unconstrained":true,"custom_attributes":["public","view"],"abi":{"error_types":{},"parameters":[],"return_type":{"abi_type":{"kind":"field"},"visibility":"public"}},"bytecode":"JAAEAQIlAAQIRAAAJAAEAAMkAAQABB8AAAAABAAAAAMAAAhDIgAAAAgrAAADCEM5AAAACEMAAAABHgAAAAQeAAAABTAAAAAABAAAAAUAAAAGJAACAQUKAAIGBQQhAAAPAAQ6AQAAHgALAAYkAAcBBQoABwYFBCEAABQABDoBAAAqAAAGJAAEAgQAAAQABAAkAQQBBgAABAYCBCoABAckAAcACCoCCAcqAQYEAAAEBAIEKgIEBioAAAQAAAQAAgAqAgYEJAAEAQgkAAQABioABgMgACYKAAQDBgchAAAvAAcgACkqAQQFAAAEBQIDAAAEAwYHKgEHBCoABAMjKgEEBxwABwMJAAAHBQkKLAAAAAAKAAAACSQABAELDAAEAwsMIQAANwAMOgEAACsAAAcIAyUABAACCAQiAAAARSsACAUACgAABAoCDAAABAwDCyoCCQsAAAQDCAkOAAQDCQchAABCAAc6AQAAKgIKBCoACQMgACYrAQgDCAYLAAQIBgACCAchAABJCAcgAEsrAAgDCAUgAFkrAAAACAUBAAQAAAgEAAAlAAQAAAgJDQAECAkIBAgKFwAICggKIQAAVwgKAQAECAMICQgLKwEICwgIAQAECAUICQgLKwIICAgLAQAECAkAAggJIABOJQEEAAEIBSAAWSMrABjKGMo=","debug_symbols":"1ZrdbsIwDIXfJddcxHESx7zKNE1lg6lSVSZgkybEu6/d2tCVKggYU3yDGjiJP/Lj41bdq5fl4v31qaxX662aP+xVtX4uduW6blr7w0wtNmVVla9Pw6+Vbj/Ct3z7VtRta7srNjs1BzJ2ppb1S3uJthlgVVZLNSc4zE7EjNRp2VGUgrMTWmuAO7E1JkQ144TYB8BO7IPhofhxpvhmcNAQxXogvjs66Nsnnfrxmc9NOhjbi8Ewp8lDM0YnDjAYuiOHPyRvJv03ehvA3DsA3juAvXcAd3MA57iP4Lw+syMoGNeJKdgw3hH+Qpq2D13RJ1zRhy/vY6bPpnEhHiHy5/IKRXGzgMf1I5paC/Z9XnHMOr0WjhB6MaEZrYUBwexGMDsKZreC2Z1gdi+YnQSzB8HsLJcdBfsqCvZVFOyrKNhXMfM8Ezmay/H9qc18v5ON7EGP2f9/v8cbZq+1S7ODZn8c+ihGTd/wKBneSobPvKRJHte8U02AmCaDgTF75iVN3DQT7C7zkibgkd2kxWyx52BLJ39UsB+4zOufJHvm9U+S3Qpmz/y5QpI98+cKSfbMTTjJnnm9n2TP3IRT7D5zE06yC/ZVL9hXvWBf9YJ91Qv2VS/WVw9N66PYlMWiWnavg6ze6+fB2yG7z7efXxrxFw==","brillig_names":["get_admin_public"],"assert_messages":{"14":"Not initialized","65":"attempt to add with overflow","54":"Array index out of bounds","19":"Function get_admin_public can only be called statically"}},{"name":"public_dispatch","is_unconstrained":true,"custom_attributes":["public"],"abi":{"error_types":{"3715688037512703171":{"error_kind":"fmtstring","item_types":[],"length":16}},"parameters":[{"name":"selector","type":{"kind":"field"},"visibility":"private"}],"return_type":null},"bytecode":"","debug_symbols":"","brillig_names":["public_dispatch"],"assert_messages":{"512":"Function get_admin_public can only be called statically","3072":"attempt to add with overflow","3273":"attempt to add with overflow","3450":"attempt to add with overflow","2804":"Array index out of bounds","2194":"Array index out of bounds","2962":"Array index out of bounds","1579":"Array index out of bounds","2603":"attempt to add with overflow","1701":"Array index out of bounds","3170":"Array index out of bounds","457":"attempt to add with overflow","2182":"attempt to add with overflow","2371":"attempt to add with overflow","2134":"Array index out of bounds","2701":"Array index out of bounds","3029":"Array index out of bounds","1543":"Array index out of bounds","2689":"attempt to add with overflow","1964":"attempt to add with overflow","3244":"Array index out of bounds","3232":"attempt to add with overflow","471":"Not initialized","2007":"Array index out of bounds","2519":"Array index out of bounds","2574":"Array index out of bounds","203":"attempt to add with overflow","2641":"attempt to add with overflow","1861":"Array index out of bounds","2952":"attempt to add with overflow","3019":"attempt to add with overflow","2550":"Array index out of bounds","2739":"attempt to add with overflow","2995":"attempt to add with overflow","1837":"attempt to add with overflow","490":"Aztec Passport: Unauthorized Admin Change","3050":"attempt to add with overflow","3184":"attempt to add with overflow","1057":"attempt to add with overflow","2337":"Array index out of bounds","2849":"Array index out of bounds","2392":"Array index out of bounds","3428":"Array index out of bounds","1935":"Array index out of bounds","2825":"attempt to add with overflow","1923":"attempt to add with overflow","1722":"attempt to add with overflow","3124":"Array index out of bounds","1777":"Array index out of bounds","2155":"attempt to add with overflow","2923":"Array index out of bounds","3301":"Array index out of bounds","2210":"Array index out of bounds","2911":"attempt to add with overflow","1619":"Array index out of bounds","1808":"Array index out of bounds","1875":"attempt to add with overflow","3088":"Array index out of bounds","2052":"Array index out of bounds","1729":"attempt to add with overflow","2174":"Array index out of bounds","3454":"Array index out of bounds","1784":"Array index out of bounds","181":"attempt to add with overflow","2229":"Array index out of bounds","2863":"attempt to add with overflow","2028":"attempt to add with overflow","2540":"attempt to add with overflow","2796":"Array index out of bounds","547":"Not initialized","1571":"Array index out of bounds","1693":"Array index out of bounds","2717":"Array index out of bounds","2973":"attempt to add with overflow","2772":"Array index out of bounds","401":"Initializer address is not the contract deployer","1681":"attempt to add with overflow","2126":"Array index out of bounds","3040":"attempt to add with overflow","2437":"Array index out of bounds","1346":"attempt to add with overflow","2114":"attempt to add with overflow","3260":"Array index out of bounds","3461":"Array index out of bounds","3320":"Array index out of bounds","2413":"attempt to add with overflow","1633":"attempt to add with overflow","2590":"Array index out of bounds","987":"call to assert_max_bit_size","2066":"attempt to add with overflow","2511":"Array index out of bounds","1999":"Array index out of bounds","2499":"attempt to add with overflow","1987":"attempt to add with overflow","3011":"Array index out of bounds","2743":"Array index out of bounds","2609":"Array index out of bounds","3054":"Array index out of bounds","1951":"Array index out of bounds","604":"Not initialized","2329":"Array index out of bounds","1238":"attempt to add with overflow","147":"attempt to add with overflow","2384":"Array index out of bounds","2451":"attempt to add with overflow","3152":"Array index out of bounds","3420":"Array index out of bounds","769":"attempt to add with overflow","2561":"attempt to add with overflow","2750":"Array index out of bounds","1592":"attempt to add with overflow","2360":"Array index out of bounds","2939":"Array index out of bounds","3061":"Array index out of bounds","3116":"Array index out of bounds","1824":"Array index out of bounds","3293":"Array index out of bounds","2202":"Array index out of bounds","508":"Not initialized","185":"Array index out of bounds","2812":"Array index out of bounds","1843":"Array index out of bounds","1709":"Array index out of bounds","2142":"Array index out of bounds","1563":"Array index out of bounds","405":"Aztec Passport: Invalid Address","82":"attempt to add with overflow","783":"Not initialized","1740":"Array index out of bounds","1551":"attempt to add with overflow","1350":"attempt to add with overflow","1795":"attempt to add with overflow","192":"Array index out of bounds","2709":"Array index out of bounds","1338":"attempt to add with overflow","2831":"Array index out of bounds","3252":"Array index out of bounds","3441":"attempt to add with overflow","2350":"attempt to add with overflow","2984":"Array index out of bounds","1759":"attempt to add with overflow","2015":"Array index out of bounds","2527":"Array index out of bounds","2582":"Array index out of bounds","1747":"Array index out of bounds","2783":"attempt to add with overflow","3472":"attempt to add with overflow","3338":"Array index out of bounds","2247":"Array index out of bounds","1601":"Array index out of bounds","3137":"attempt to add with overflow","1979":"Array index out of bounds","1333":"attempt to multiply with overflow","2034":"Array index out of bounds","2223":"attempt to add with overflow","3314":"attempt to add with overflow","2400":"Array index out of bounds","1242":"attempt to add with overflow","1943":"Array index out of bounds","3412":"Array index out of bounds","2321":"Array index out of bounds","1230":"attempt to add with overflow","395":"Initialization hash does not match","3400":"attempt to add with overflow","2309":"attempt to add with overflow","2419":"Array index out of bounds","2931":"Array index out of bounds","2730":"attempt to add with overflow","3108":"Array index out of bounds","3096":"attempt to add with overflow","3352":"attempt to add with overflow","3285":"Array index out of bounds","1816":"Array index out of bounds","2261":"attempt to add with overflow","1225":"attempt to multiply with overflow","2761":"attempt to add with overflow","2627":"Array index out of bounds"}},{"name":"compute_note_hash_and_optionally_a_nullifier","is_unconstrained":true,"custom_attributes":[],"abi":{"error_types":{"12265343917440897559":{"error_kind":"fmtstring","item_types":[],"length":20}},"parameters":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"},"visibility":"private"},{"name":"nonce","type":{"kind":"field"},"visibility":"private"},{"name":"storage_slot","type":{"kind":"field"},"visibility":"private"},{"name":"note_type_id","type":{"kind":"field"},"visibility":"private"},{"name":"compute_nullifier","type":{"kind":"boolean"},"visibility":"private"},{"name":"serialized_note","type":{"kind":"array","length":6,"type":{"kind":"field"}},"visibility":"private"}],"return_type":{"abi_type":{"kind":"array","length":4,"type":{"kind":"field"}},"visibility":"public"}},"bytecode":"","debug_symbols":"","brillig_names":["compute_note_hash_and_optionally_a_nullifier"]},{"name":"verify","is_unconstrained":false,"custom_attributes":["private"],"abi":{"error_types":{},"parameters":[{"name":"inputs","type":{"fields":[{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext"}},{"name":"historical_header","type":{"fields":[{"name":"last_archive","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"content_commitment","type":{"fields":[{"name":"num_txs","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment"}},{"name":"state","type":{"fields":[{"name":"l1_to_l2_message_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"partial","type":{"fields":[{"name":"note_hash_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"nullifier_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"public_data_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}}],"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference"}}],"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference"}},{"name":"global_variables","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"slot_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"fee_recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"gas_fees","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees"}}],"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables"}},{"name":"total_fees","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::header::Header"}},{"name":"tx_context","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"gas_settings","type":{"fields":[{"name":"gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas"}},{"name":"teardown_gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas"}},{"name":"max_fees_per_gas","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees"}},{"name":"inclusion_fee","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings"}}],"kind":"struct","path":"aztec::protocol_types::transaction::tx_context::TxContext"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::context::inputs::private_context_inputs::PrivateContextInputs"},"visibility":"private"},{"name":"address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"},"visibility":"private"},{"name":"header_array","type":{"kind":"array","length":576,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"header_length","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"body_array","type":{"kind":"array","length":16384,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"body_length","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"pubkey_modulus","type":{"kind":"array","length":18,"type":{"kind":"field"}},"visibility":"private"},{"name":"pubkey_redc","type":{"kind":"array","length":18,"type":{"kind":"field"}},"visibility":"private"},{"name":"signature","type":{"kind":"array","length":18,"type":{"kind":"field"}},"visibility":"private"},{"name":"body_hash_index","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"dkim_header_sequence_index","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"dkim_header_sequence_length","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"from_header_sequence_index","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"from_header_sequence_length","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"from_address_sequence_index","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"from_address_sequence_length","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"username_array","type":{"kind":"array","length":64,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"username_length","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"}],"return_type":{"abi_type":{"fields":[{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"min_revertible_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"is_fee_payer","type":{"kind":"boolean"}},{"name":"max_block_number","type":{"fields":[{"name":"_opt","type":{"fields":[{"name":"_is_some","type":{"kind":"boolean"}},{"name":"_value","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"std::option::Option"}}],"kind":"struct","path":"aztec::protocol_types::abis::max_block_number::MaxBlockNumber"}},{"name":"note_hash_read_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest"}}},{"name":"nullifier_read_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest"}}},{"name":"key_validation_requests_and_generators","type":{"kind":"array","length":16,"type":{"fields":[{"name":"request","type":{"fields":[{"name":"pk_m","type":{"fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}],"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint"}},{"name":"sk_app","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::validation_requests::key_validation_request::KeyValidationRequest"}},{"name":"sk_app_generator","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::validation_requests::key_validation_request_and_generator::KeyValidationRequestAndGenerator"}}},{"name":"note_hashes","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::note_hash::NoteHash"}}},{"name":"nullifiers","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"note_hash","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::nullifier::Nullifier"}}},{"name":"private_call_requests","type":{"kind":"array","length":4,"type":{"fields":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::private_call_request::PrivateCallRequest"}}},{"name":"public_call_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::public_call_request::PublicCallRequest"}}},{"name":"public_teardown_call_request","type":{"fields":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::public_call_request::PublicCallRequest"}},{"name":"l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"fields":[{"name":"recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"content","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message"}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"note_encrypted_logs_hashes","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}},{"name":"note_hash_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::log_hash::NoteLogHash"}}},{"name":"encrypted_logs_hashes","type":{"kind":"array","length":4,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}},{"name":"randomness","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::log_hash::EncryptedLogHash"}}},{"name":"unencrypted_logs_hashes","type":{"kind":"array","length":4,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::log_hash::LogHash"}}},{"name":"historical_header","type":{"fields":[{"name":"last_archive","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"content_commitment","type":{"fields":[{"name":"num_txs","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment"}},{"name":"state","type":{"fields":[{"name":"l1_to_l2_message_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"partial","type":{"fields":[{"name":"note_hash_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"nullifier_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"public_data_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}}],"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference"}}],"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference"}},{"name":"global_variables","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"slot_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"fee_recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"gas_fees","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees"}}],"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables"}},{"name":"total_fees","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::header::Header"}},{"name":"tx_context","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"gas_settings","type":{"fields":[{"name":"gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas"}},{"name":"teardown_gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas"}},{"name":"max_fees_per_gas","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees"}},{"name":"inclusion_fee","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings"}}],"kind":"struct","path":"aztec::protocol_types::transaction::tx_context::TxContext"}}],"kind":"struct","path":"aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs"},"visibility":"public"}},"bytecode":"H4sIAAAAAAAA/2zdAw8gSLQw2Gnbtm1z2rZt27Zt27Zt27Ztu/d7i2Tz5lRykZNb/6BSN8A//8+Z8DfAP7kXBPi/+//Jgf7fGvD/RPz/Zf9f/f/3gWFBcTc0LCwsPCwiLNr/iXz/y+JhLj4sASwhLCks+f+J4P/LUsBSwlLBUsPSwNLC0sHSwzLAMsIywTLDssCywrLBssNywHLCcsFyw/6F5YHlheWD5YcVgBWEFYIVhhWBFYUVgxWHlYCVhJWClYaVgZWFlYOVh1WAVYRVglWGVYFVhVWDVYfVgNWE1YLVhtWB1YXVg9WHNYA1hDWCNYY1gTWFNYM1h7WAtYS1grWGtYG1hbWDtYd1gHWEdYJ1hnWBdYV1g3WH9YD1hPWC9Yb1gfWF9YP1hw2ADYQNgg2GDYENhQ2DDYeNgI2EjYKNho2BjYWNg42HTYBNhE2CTYZNgU2FTYNNh82AzYTNgs2GzYHNhc2DzYctgC2ELYIthi2BLYUtgy2HrYCthK2CrYatga2FrYOth22AbYRtgm2GbYFthW2DbYftgO2E7YLthu2B7YXtg+2HHYAdhB2CHYYdgR2FHYMdh52AnYSdgp2GnYGdhZ2DnYddgF2EXYJdhl2BXYVdg12H3YDdhN2C3Ybdgd2F3YPdhz2APYQ9gj2GPYE9hT2DPYe9gL2EvYK9hr2BvYW9g72HfYB9hH2CfYZ9gX2FfYN9h/2A/YT9gv2G/YH9hf1P+t8WABYQFggWGBYEFhQWDBYcFgIWEhYKFhoWBhYWFg4WHhYBFhEWCRYZFgUWFRYNFh0WAxYTFgsWGxYHFhcWDxYflgCWEJYIlhiWBJYUlgyWHJYClhKWCpYalgaWFpYOlh6WAZYRlgmWGZYFlhWWDZYdlgOWE5YLlhv2LywPLC8sHyw/rACsIKwQrDCsCKworBisOKwErCSsFKw0rAysLKwcrDysAqwirBKsMqwKrCqsGqw6rAasJqwWrDasDqwurB6sPqwBrCGsEawxrAmsKawZrDmsBawlrBWsNawNrC2sHaw9rAOsI6wTrDOsC6wrrBusO6wHrCesF6w3rA+sL6wfrD9sAGwgbBBsMGwIbChsGGw4bARsJGwUbDRsDGwsbBxsPGwCbCJsEmwybApsKmwabDpsBmwmbBZsNmwObC5sHmw+bAFsIWwRbDFsCWwpbBlsOWwFbCVsFWw1bA1sLWwdbD1sA2wjbBNsM2wLbCtsG2w7bAdsJ2wXbDdsD2wvbB9sP+wA7CDsEOww7AjsKOwY7DjsBOwk7BTsNOwM7CzsHOw87ALsIuwS7DLsCuwq7BrsOuwG7CbsFuw27A7sLuwe7D7sAewh7BHsMewJ7CnsGew57AXsJewV7DXsDewt7B3sPewD7CPsE+wz7AvsK+wb7DvsB+wn7BfsN+wP7C/sfx5+/W8LAAsICwQLDAsCCwoLBgsOCwELCQsFCw0LAwsLCwcLD4sAiwiLBIsMiwKLCosGiw6LAYsJiwWLDYsDiwuLB4sPSwBLCEsESwxLAksKSwZLDksBSwlLBUsNSwNLC0sHSw/LAMsIywTLDMsCywrLBssOywHLCcsFyw37F5YHlheWD5YfVgBWEFYIVhhWBFYUVgxWHFYCVhJWClYaVgZWFlYOVh5WAVYRVglWGVYFVhVWDVYdVgNWE1YLVhtWB1YXVg9WH9YA1hDWCNYY1gTWFNbs/1j8/2XNMdcC1hLWCtYa1gbWFtYO1h7WAdYR1gnWGdYF1hXWDdYd1gPWE9YL1hvWB9YX1g/WHzYANhA2CDYYNgQ2FDYMNhw2AjYSNgo2GjYGNhY2DjYeNgE2ETYJNhk2BTYVNg02HTYDNhM2CzYbNgc2FzYPNh+2ALYQtgi2GLYEthS2DLYctgK2ErYKthq2BrYWtg62HrYBthG2CbYZtgW2FbYNth22A7YTtgu2G7YHthe2D7YfdgB2EHYIdhh2BHYUdgx2HHYCdhJ2CnYadgZ2FnYOdh52AXYRdgl2GXYFdhV2DXYddgN2E3YLdht2B3YXdg92H/YA9hD2CPYY9gT2FPYM9hz2AvYS9gr2GvYG9hb2DvYe9gH2EfYJ9hn2BfYV9g32HfYD9hP2C/Yb9gf2F/Y/zf+2ALCAsECwwLAgsKCwYLDgsBCwkLBQsNCwMLCwsHCw8LAIsIiwSLDIsCiwqLBosOiwGLCYsFiw2LA4sLiweLD4sASwhLBEsMSwJLCksGSw5LAUsJSwVLDUsDSwtLB0sPSwDLCMsEywzLAssKywbLDssBywnLBcsNywf2F5YHlh+WD5YQVgBWGFYIVhRWBFYcVgxWElYCVhpWClYWVgZWHlYOVhFWAVYZVglWFVYFVh1WDVYTVgNWG1YLVhdWB1YfVg9WENYA1hjWCNYU1gTWHNYM1hLWAtYa1grWFtYG1h7WDtYR1gHWGdYJ1hXWBdYd1g3WE9YD1hvWC9YX1gfWH9YP1hA2ADYYNgg2FDYENhw2DDYSNgI2GjYKNhY2BjYeNg42ETYBNhk2CTYVNgU2HTYNNhM2AzYbNgs2FzYHNh82DzYQtgC2GLYIthS2BLYctgy2ErYCthq2CrYWtga2HrYOthG2AbYZtgm2FbYFth22DbYTtgO2G7YLthe2B7Yftg+2EHYAdhh2CHYUdgR2HHYMdhJ2AnYadgp2FnYGdh52DnYRdgF2GXYJdhV2BXYddg12E3YDdht2C3YXdgd2H3YPdhD2APYY9gj2FPYE9hz2DPYS9gL2GvYK9hb2BvYe9g72EfYB9hn2CfYV9gX2HfYN9hP2A/Yb9gv2F/YH9h//Oh2/+2ALCAsECwwLAgsKCwYLDgsBCwkLBQsNCwMLCwsHCw8LAIsIiwSLDIsCiwqLBosOiwGLCYsFiw2LA4sLiweLD4sASwhLBEsMSwJLCksGSw5LAUsJSwVLDUsDSwtLB0sPSwDLCMsEywzLAssKywbLDssBywnLBcsNywf2F5YHlh+WD5YQVgBWGFYIVhRWBFYcVgxWElYCVhpWClYWVgZWHlYOVhFWAVYZVglWFVYFVh1WDVYTVgNWG1YLVhdWB1YfVg9WENYA1hjWCNYU1gTWHNYM1hLWAtYa1grWFtYG1h7WDtYR1gHWGdYJ1hXWBdYd1g3WE9YD1hvWC9YX1gfWH9YP1hA2ADYYNgg2FDYENhw2DDYSNgI2GjYKNhY2BjYeNg42ETYBNhk2CTYVNgU2HTYNNhM2AzYbNgs2FzYHNh82DzYQtgC2GLYIthS2BLYctgy2ErYCthq2CrYWtga2HrYOthG2AbYZtgm2FbYFth22DbYTtgO2G7YLthe2B7Yftg+2EHYAdhh2CHYUdgR2HHYMdhJ2AnYadgp2FnYGdh52DnYRdgF2GXYJdhV2BXYddg12E3YDdht2C3YXdgd2H3YPdhD2APYY9gj2FPYE9hz2DPYS9gL2GvYK9hb2BvYe9g72EfYB9hn2CfYV9gX2HfYN9hP2A/Yb9gv2F/YH9h/wT5rwWABYQFggWGBYEFhQWDBYeFgIWEhYKFhoWBhYWFg4WHRYBFhEWCRYZFgUWFRYNFh8WAxYTFgsWGxYHFhcWDxYclgCWEJYIlhiWBJYUlgyWHpYClhKWCpYalgaWFpYOlh2WAZYRlgmWGZYFlhWWDZYflgOWE5YLlhv0LywPLC8sHyw8rACsIKwQrDCsCKworBisOKwErCSsFKw0rAysLKwcrD6sAqwirBKsMqwKrCqsGqw6rAasJqwWrDasDqwurB6sPawBrCGsEawxrAmsKawZrDmsBawlrBWsNawNrC2sHaw/rAOsI6wTrDOsC6wrrBusO6wHrCesF6w3rA+sL6wfrDxsAGwgbBBsMGwIbChsGGw4bARsJGwUbDRsDGwsbBxsPmwCbCJsEmwybApsKmwabDpsBmwmbBZsNmwObC5sHmw9bAFsIWwRbDFsCWwpbBlsOWwFbCVsFWw1bA1sLWwdbD9sA2wjbBNsM2wLbCtsG2w7bAdsJ2wXbDdsD2wvbB9sPOwA7CDsEOww7AjsKOwY7DjsBOwk7BTsNOwM7CzsHOw+7ALsIuwS7DLsCuwq7BrsOuwG7CbsFuw27A7sLuwe7D3sAewh7BHsMewJ7CnsGew57AXsJewV7DXsDewt7B3sP+wD7CPsE+wz7AvsK+wb7DvsB+wn7BfsN+wP7C/uf5a3/2wLAAsICwQLDgsCCwoLBgsNCwELCQsFCw8LAwsLCwcLDIsAiwiLBIsOiwKLCosGiw2LAYsJiwWLD4sDiwuLB4sMSwBLCEsESw5LAksKSwZLDUsBSwlLBUsPSwNLC0sHSwzLAMsIywTLDssCywrLBssNywHLCcsFyw/6F5YHlheWD5YcVgBWEFYIVhhWBFYUVgxWHlYCVhJWClYaVgZWFlYOVh1WAVYRVglWGVYFVhVWDVYfVgNWE1YLVhtWB1YXVg9WHNYA1hDWCNYY1gTWFNYM1h7WAtYS1grWGtYG1hbWDtYd1gHWEdYJ1hnWBdYV1g3WH9YD1hPWC9Yb1gfWF9YP1hw2ADYQNgg2GDYENhQ2DDYeNgI2EjYKNho2BjYWNg42HTYBNhE2CTYZNgU2FTYNNh82AzYTNgs2GzYHNhc2DzYctgC2ELYIthi2BLYUtgy2HrYCthK2CrYatga2FrYOth22AbYRtgm2GbYFthW2DbYftgO2E7YLthu2B7YXtg+2HHYAdhB2CHYYdgR2FHYMdh52AnYSdgp2GnYGdhZ2DnYddgF2EXYJdhl2BXYVdg12H3YDdhN2C3Ybdgd2F3YPdhz2APYQ9gj2GPYE9hT2DPYe9gL2EvYK9hr2BvYW9g72HfYB9hH2CfYZ9gX2FfYN9h/2A/YT9gv2G/YH9hf0T7L8WABYQFggWGBYEFhQWDBYcFgIWEhYKFhoWBhYWFg4WHhYBFhEWCRYZFgUWFRYNFh0WAxYTFgsWGxYHFhcWDxYflgCWEJYIlhiWBJYUlgyWHJYClhKWCpYalgaWFpYOlh6WAZYRlgmWGZYFlhWWDZYdlgOWE5YLlhv2LywPLC8sHyw/rACsIKwQrDCsCKworBisOKwErCSsFKw0rAysLKwcrDysAqwirBKsMqwKrCqsGqw6rAasJqwWrDasDqwurB6sPqwBrCGsEawxrAmsKawZrDmsBawlrBWsNawNrC2sHaw9rAOsI6wTrDOsC6wrrBusO6wHrCesF6w3rA+sL6wfrD9sAGwgbBBsMGwIbChsGGw4bARsJGwUbDRsDGwsbBxsPGwCbCJsEmwybApsKmwabDpsBmwmbBZsNmwObC5sHmw+bAFsIWwRbDFsCWwpbBlsOWwFbCVsFWw1bA1sLWwdbD1sA2wjbBNsM2wLbCtsG2w7bAdsJ2wXbDdsD2wvbB9sP+wA7CDsEOww7AjsKOwY7DjsBOwk7BTsNOwM7CzsHOw87ALsIuwS7DLsCuwq7BrsOuwG7CbsFuw27A7sLuwe7D7sAewh7BHsMewJ7CnsGew57AXsJewV7DXsDewt7B3sPewD7CPsE+wz7AvsK+wb7DvsB+wn7BfsN+wP7C/sf+B/WwBYQFggWGBYEFhQWDBYcFgIWEhYKFhoWBhYWFg4WHhYBFhEWCRYZFgUWFRYNFh0WAxYTFgsWGxYHFhcWDxYfFgCWEJYIlhiWBJYUlgyWHJYClhKWCpYalgaWFpYOlh6WAZYRlgmWGZYFlhWWDZYdlgOWE5YLlhu2L+wPLC8sHyw/LACsIKwQrDCsCKworBisOKwErCSsFKw0rAysLKwcrDysAqwirBKsMqwKrCqsGqw6rAasJqwWrDasDqwurB6sPqwBrCGsEawxrAmsKawZrDmsBawlrBWsNawNrC2sHaw9rAOsI6wTrDOsC6wrrBusO6wHrCesF6w3rA+sL6wfrD+sAGwgbBBsMGwIbChsGGw4bARsJGwUbDRsDGwsbBxsPGwCbCJsEmwybApsKmwabDpsBmwmbBZsNmwObC5sHmw+bAFsIWwRbDFsCWwpbBlsOWwFbCVsFWw1bA1sLWwdbD1sA2wjbBNsM2wLbCtsG2w7bAdsJ2wXbDdsD2wvbB9sP2wA7CDsEOww7AjsKOwY7DjsBOwk7BTsNOwM7CzsHOw87ALsIuwS7DLsCuwq7BrsOuwG7CbsFuw27A7sLuwe7D7sAewh7BHsMewJ7CnsGew57AXsJewV7DXsDewt7B3sPewD7CPsE+wz7AvsK+wb7DvsB+wn7BfsN+wP7C/sH9C/NcCwALCAsECw4LAgsKCwYLDQsBCwkLBQsPCwMLCwsHCwyLAIsIiwSLDosCiwqLBosNiwGLCYsFiw+LA4sLiweLDEsASwhLBEsOSwJLCksGSw1LAUsJSwVLD0sDSwtLB0sMywDLCMsEyw7LAssKywbLDcsBywnLBcsP+heWB5YXlg+WHFYAVhBWCFYYVgRWFFYMVh5WAlYSVgpWGlYGVhZWDlYdVgFWEVYJVhlWBVYVVg1WH1YDVhNWC1YbVgdWF1YPVhzWANYQ1gjWGNYE1hTWDNYe1gLWEtYK1hrWBtYW1g7WHdYB1hHWCdYZ1gXWFdYN1h/WA9YT1gvWG9YH1hfWD9YcNgA2EDYINhg2BDYUNgw2HjYCNhI2CjYaNgY2FjYONh02ATYRNgk2GTYFNhU2DTYfNgM2EzYLNhs2BzYXNg82HLYAthC2CLYYtgS2FLYMth62ArYStgq2GrYGtha2DrYdtgG2EbYJthm2BbYVtg22H7YDthO2C7Ybtge2F7YPthx2AHYQdgh2GHYEdhR2DHYedgJ2EnYKdhp2BnYWdg52HXYBdhF2CXYZdgV2FXYNdh92A3YTdgt2G3YHdhd2D3Yc9gD2EPYI9hj2BPYU9gz2HvYC9hL2CvYa9gb2FvYO9h32AfYR9gn2GfYF9hX2DfYf9gP2E/YL9hv2B/YX9E/K/FgAWEBYIFhgWBBYUFgwWHBYCFhIWChYaFgYWFhYOFh4WARYRFgkWGRYFFhUWDRYdFgMWExYLFhsWBxYXFg8WH5YAlhCWCJYYlgSWFJYMlhyWApYSlgqWGpYGlhaWDpYelgGWEZYJlhmWBZYVlg2WHZYDlhOWC5Yb9i8sDywvLB8sP6wArCCsEKwwrAisKKwYrDisBKwkrBSsNKwMrCysHKw8rAKsIqwSrDKsCqwqrBqsOqwGrCasFqw2rA6sLqwerD6sAawhrBGsMawJrCmsGaw5rAWsJawVrDWsDawtrB2sPawDrCOsE6wzrAusK6wbrDusB6wnrBesN6wPrC+sH6w/bABsIGwQbDBsCGwobBhsOGwEbCRsFGw0bAxsLGwcbDxsAmwibBJsMmwKbCpsGmw6bAZsJmwWbDZsDmwubB5sPmwBbCFsEWwxbAlsKWwZbDlsBWwlbBVsNWwNbC1sHWw9bANsI2wTbDNsC2wrbBtsO2wHbCdsF2w3bA9sL2wfbD/sAOwg7BDsMOwI7CjsGOw47ATsJOwU7DTsDOws7BzsPOwC7CLsEuwy7ArsKuwa7DrsBuwm7BbsNuwO7C7sHuw+7AHsIewR7DHsCewp7BnsOewF7CXsFew17A3sLewd7D3sA+wj7BPsM+wL7CvsG+w77AfsJ+wX7DfsD+wv7J9Q/7UAsICwQLDAsCCwoLBgsOCwELCQsFCw0LAwsLCwcLDwsAiwiLBIsMiwKLCosGiw6LAYsJiwWLDYsDiwuLB4sPiwBLCEsESwxLAksKSwZLDksBSwlLBUsNSwNLC0sHSw9LAMsIywTLDMsCywrLBssOywHLCcsFyw3LB/YXlgeWH5YPlhBWAFYYVghWFFYEVhxWDFYSVgJWGlYKVhZWBlYeVg5WEVYBVhlWCVYVVgVWHVYNVhNWA1YbVgtWF1YHVh9WD1YQ1gDWGNYI1hTWBNYc1gzWEtYC1hrWCtYW1gbWHtYO1hHWAdYZ1gnWFdYF1h3WDdYT1gPWG9YL1hfWB9Yf1g/WEDYANhg2CDYUNgQ2HDYMNhI2AjYaNgo2FjYGNh42DjYRNgE2GTYJNhU2BTYdNg02EzYDNhs2CzYXNgc2HzYPNhC2ALYYtgi2FLYEthy2DLYStgK2GrYKtha2BrYetg62EbYBthm2CbYVtgW2HbYNthO2A7Ybtgu2F7YHth+2D7YQdgB2GHYIdhR2BHYcdgx2EnYCdhp2CnYWdgZ2HnYOdhF2AXYZdgl2FXYFdh12DXYTdgN2G3YLdhd2B3Yfdg92EPYA9hj2CPYU9gT2HPYM9hL2AvYa9gr2FvYG9h72DvYR9gH2GfYJ9hX2BfYd9g32E/YD9hv2C/YX9gf2H/hP6vBYAFhAWCBYYFgQWFBYMFh4WAhYSFgoWGhYGFhYWDhYdFgEWERYJFhkWBRYVFg0WHxYDFhMWCxYbFgcWFxYPFhyWAJYQlgiWGJYElhSWDJYelgKWEpYKlhqWBpYWlg6WHZYBlhGWCZYZlgWWFZYNlh+WA5YTlguWG/QvLA8sLywfLDysAKwgrBCsMKwIrCisGKw4rASsJKwUrDSsDKwsrBysPqwCrCKsEqwyrAqsKqwarDqsBqwmrBasNqwOrC6sHqw9rAGsIawRrDGsCawprBmsOawFrCWsFaw1rA2sLawdrD+sA6wjrBOsM6wLrCusG6w7rAesJ6wXrDesD6wvrB+sPGwAbCBsEGwwbAhsKGwYbDhsBGwkbBRsNGwMbCxsHGw+bAJsImwSbDJsCmwqbBpsOmwGbCZsFmw2bA5sLmwebD1sAWwhbBFsMWwJbClsGWw5bAVsJWwVbDVsDWwtbB1sP2wDbCNsE2wzbAtsK2wbbDtsB2wnbBdsN2wPbC9sH2w87ADsIOwQ7DDsCOwo7BjsOOwE7CTsFOw07AzsLOwc7D7sAuwi7BLsMuwK7CrsGuw67AbsJuwW7DbsDuwu7B7sPewB7CHsEewx7AnsKewZ7DnsBewl7BXsNewN7C3sHew/7APsI+wT7DPsC+wr7BvsO+wH7CfsF+w37A/sL+yfMfy0ALCAsECwwLAgsKCwYLDgsBCwkLBQsNCwMLCwsHCw8LAIsIiwSLDIsCiwqLBosOiwGLCYsFiw2LA4sLiweLD4sASwhLBEsMSwJLCksGSw5LAUsJSwVLDUsDSwtLB0sPSwDLCMsEywzLAssKywbLDssBywnLBcsN+xfWB5YXlg+WH5YAVhBWCFYYVgRWFFYMVhxWAlYSVgpWGlYGVhZWDlYeVgFWEVYJVhlWBVYVVg1WHVYDVhNWC1YbVgdWF1YPVh9WANYQ1gjWGNYE1hTWDNYc1gLWEtYK1hrWBtYW1g7WHtYB1hHWCdYZ1gXWFdYN1h3WA9YT1gvWG9YH1hfWD9Yf9gA2EDYINhg2BDYUNgw2HDYCNhI2CjYaNgY2FjYONh42ATYRNgk2GTYFNhU2DTYdNgM2EzYLNhs2BzYXNg82HzYAthC2CLYYtgS2FLYMthy2ArYStgq2GrYGtha2DrYetgG2EbYJthm2BbYVtg22HbYDthO2C7Ybtge2F7YPth+2AHYQdgh2GHYEdhR2DHYcdgJ2EnYKdhp2BnYWdg52HnYBdhF2CXYZdgV2FXYNdh12A3YTdgt2G3YHdhd2D3YfdgD2EPYI9hj2BPYU9gz2HPYC9hL2CvYa9gb2FvYO9h72AfYR9gn2GfYF9hX2DfYd9gP2E/YL9hv2B/YX9g/Yf9rAWABYYFggWFBYEFhwWDBYSFgIWGhYKFhYWBhYeFg4WERYBFhkWCRYVFgUWHRYNFhMWAxYbFgsWFxYHFh8WDxYQlgCWGJYIlhSWBJYclgyWEpYClhqWCpYWlgaWHpYOlhGWAZYZlgmWFZYFlh2WDZYTlgOWG5YLlh/8LywPLC8sHywwrACsIKwQrDisCKworBisNKwErCSsFKw8rAysLKwcrDKsAqwirBKsOqwKrCqsGqw2rAasJqwWrD6sDqwurB6sMawBrCGsEaw5rAmsKawZrDWsBawlrBWsPawNrC2sHawzrAOsI6wTrDusC6wrrBusN6wHrCesF6w/rA+sL6wfrDBsAGwgbBBsOGwIbChsGGw0bARsJGwUbDxsDGwsbBxsMmwCbCJsEmw6bApsKmwabDZsBmwmbBZsPmwObC5sHmwxbAFsIWwRbDlsCWwpbBlsNWwFbCVsFWw9bA1sLWwdbDNsA2wjbBNsO2wLbCtsG2w3bAdsJ2wXbD9sD2wvbB9sMOwA7CDsEOw47AjsKOwY7DTsBOwk7BTsPOwM7CzsHOwy7ALsIuwS7DrsCuwq7BrsNuwG7CbsFuw+7A7sLuwe7DHsAewh7BHsOewJ7CnsGew17AXsJewV7D3sDewt7B3sM+wD7CPsE+w77AvsK+wb7DfsB+wn7BfsP+wP7C/gn3XwsACwgLBAsMCwILCgsGCw4LAQsJCwULDQsDCwsLBwsPiwCLCIsEiwyLAosKiwaLDosBiwmLBYsNiwOLC4sHiw9LAEsISwRLDEsCSwpLBksOSwFLCUsFSw1LA0sLSwdLD8sAywjLBMsMywLLCssGyw7LAcsJywXLDfsXlgeWF5YPlh9WAFYQVghWGFYEVhRWDFYcVgJWElYKVhpWBlYWVg5WHlYBVhFWCVYZVgVWFVYNVh1WA1YTVgtWG1YHVhdWD1Yf1gDWENYI1hjWBNYU1gzWHNYC1hLWCtYa1gbWFtYO1h7WAdYR1gnWGdYF1hXWDdYd1gPWE9YL1hvWB9YX1g/WHzYANhA2CDYYNgQ2FDYMNhw2AjYSNgo2GjYGNhY2DjYeNgE2ETYJNhk2BTYVNg02HTYDNhM2CzYbNgc2FzYPNh+2ALYQtgi2GLYEthS2DLYctgK2ErYKthq2BrYWtg62HrYBthG2CbYZtgW2FbYNth22A7YTtgu2G7YHthe2D7YfdgB2EHYIdhh2BHYUdgx2HHYCdhJ2CnYadgZ2FnYOdh52AXYRdgl2GXYFdhV2DXYddgN2E3YLdht2B3YXdg92H/YA9hD2CPYY9gT2FPYM9hz2AvYS9gr2GvYG9hb2DvYe9gH2EfYJ9hn2BfYV9g32HfYD9hP2C/Yb9gf2F/ZP+P9aAFhAWCBYYFgQWFBYMFhwWAhYSFgoWGhYGFhYWDhYeFgEWERYJFhkWBRYVFg0WHRYDFhMWCxYbFgcWFxYPFh8WAJYQlgiWGJYElhSWDJYclgKWEpYKlhqWBpYWlg6WHpYBlhGWCZYZlgWWFZYNlh2WA5YTlguWG7Yv7A8sLywfLD8sAKwgrBCsMKwIrCisGKw4rASsJKwUrDSsDKwsrBysPKwCrCKsEqwyrAqsKqwarDqsBqwmrBasNqwOrC6sHqw+rAGsIawRrDGsCawprBmsOawFrCWsFaw1rA2sLawdrD2sA6wjrBOsM6wLrCusG6w7rAesJ6wXrDesD6wvrB+sP6wAbCBsEGwwbAhsKGwYbDhsBGwkbBRsNGwMbCxsHGw8bAJsImwSbDJsCmwqbBpsOmwGbCZsFmw2bA5sLmwebD5sAWwhbBFsMWwJbClsGWw5bAVsJWwVbDVsDWwtbB1sPWwDbCNsE2wzbAtsK2wbbDtsB2wnbBdsN2wPbC9sH2w/bADsIOwQ7DDsCOwo7BjsOOwE7CTsFOw07AzsLOwc7DzsAuwi7BLsMuwK7CrsGuw67AbsJuwW7DbsDuwu7B7sPuwB7CHsEewx7AnsKewZ7DnsBewl7BXsNewN7C3sHew97APsI+wT7DPsC+wr7BvsO+wH7CfsF+w37A/sL+wfyL81wLAAsICwQLDgsCCwoLBgsNCwELCQsFCw8LAwsLCwcLDIsAiwiLBIsOiwKLCosGiw2LAYsJiwWLD4sDiwuLB4sMSwBLCEsESw5LAksKSwZLDUsBSwlLBUsPSwNLC0sHSwzLAMsIywTLDssCywrLBssNywHLCcsFyw/6F5YHlheWD5YcVgBWEFYIVhhWBFYUVgxWHlYCVhJWClYaVgZWFlYOVh1WAVYRVglWGVYFVhVWDVYfVgNWE1YLVhtWB1YXVg9WHNYA1hDWCNYY1gTWFNYM1h7WAtYS1grWGtYG1hbWDtYd1gHWEdYJ1hnWBdYV1g3WH9YD1hPWC9Yb1gfWF9YP1hw2ADYQNgg2GDYENhQ2DDYeNgI2EjYKNho2BjYWNg42HTYBNhE2CTYZNgU2FTYNNh82AzYTNgs2GzYHNhc2DzYctgC2ELYIthi2BLYUtgy2HrYCthK2CrYatga2FrYOth22AbYRtgm2GbYFthW2DbYftgO2E7YLthu2B7YXtg+2HHYAdhB2CHYYdgR2FHYMdh52AnYSdgp2GnYGdhZ2DnYddgF2EXYJdhl2BXYVdg12H3YDdhN2C3Ybdgd2F3YPdhz2APYQ9gj2GPYE9hT2DPYe9gL2EvYK9hr2BvYW9g72HfYB9hH2CfYZ9gX2FfYN9h/2A/YT9gv2G/YH9hf0T8b8WABYQFggWGBYEFhQWDBYcFgIWEhYKFhoWBhYWFg4WHhYBFhEWCRYZFgUWFRYNFh0WAxYTFgsWGxYHFhcWDxYflgCWEJYIlhiWBJYUlgyWHJYClhKWCpYalgaWFpYOlh6WAZYRlgmWGZYFlhWWDZYdlgOWE5YLlhv2LywPLC8sHyw/rACsIKwQrDCsCKworBisOKwErCSsFKw0rAysLKwcrDysAqwirBKsMqwKrCqsGqw6rAasJqwWrDasDqwurB6sPqwBrCGsEawxrAmsKawZrDmsBawlrBWsNawNrC2sHaw9rAOsI6wTrDOsC6wrrBusO6wHrCesF6w3rA+sL6wfrD9sAGwgbBBsMGwIbChsGGw4bARsJGwUbDRsDGwsbBxsPGwCbCJsEmwybApsKmwabDpsBmwmbBZsNmwObC5sHmw+bAFsIWwRbDFsCWwpbBlsOWwFbCVsFWw1bA1sLWwdbD1sA2wjbBNsM2wLbCtsG2w7bAdsJ2wXbDdsD2wvbB9sP+wA7CDsEOww7AjsKOwY7DjsBOwk7BTsNOwM7CzsHOw87ALsIuwS7DLsCuwq7BrsOuwG7CbsFuw27A7sLuwe7D7sAewh7BHsMewJ7CnsGew57AXsJewV7DXsDewt7B3sPewD7CPsE+wz7AvsK+wb7DvsB+wn7BfsN+wP7C/sn0j/tQCwgLBAsMCwILCgsGCw4LAQsJCwULDQsDCwsLBwsPCwCLCIsEiwyLAosKiwaLDosBiwmLBYsNiwOLC4sHiw+LAEsISwRLDEsCSwpLBksOSwFLCUsFSw1LA0sLSwdLD0sAywjLBMsMywLLCssGyw7LAcsJywXLDcsH9heWB5Yflg+WEFYAVhhWCFYUVgRWHFYMVhJWAlYaVgpWFlYGVh5WDlYRVgFWGVYJVhVWBVYdVg1WE1YDVhtWC1YXVgdWH1YPVhDWANYY1gjWFNYE1hzWDNYS1gLWGtYK1hbWBtYe1g7WEdYB1hnWCdYV1gXWHdYN1hPWA9Yb1gvWF9YH1h/WD9YQNgA2GDYINhQ2BDYcNgw2EjYCNho2CjYWNgY2HjYONhE2ATYZNgk2FTYFNh02DTYTNgM2GzYLNhc2BzYfNg82ELYAthi2CLYUtgS2HLYMthK2ArYatgq2FrYGth62DrYRtgG2GbYJthW2BbYdtg22E7YDthu2C7YXtge2H7YPthB2AHYYdgh2FHYEdhx2DHYSdgJ2GnYKdhZ2BnYedg52EXYBdhl2CXYVdgV2HXYNdhN2A3Ybdgt2F3YHdh92D3YQ9gD2GPYI9hT2BPYc9gz2EvYC9hr2CvYW9gb2HvYO9hH2AfYZ9gn2FfYF9h32DfYT9gP2G/YL9hf2B/Yf9E/q8FgAWEBYIFhgWBBYUFgwWHhYCFhIWChYaFgYWFhYOFh0WARYRFgkWGRYFFhUWDRYfFgMWExYLFhsWBxYXFg8WHJYAlhCWCJYYlgSWFJYMlh6WApYSlgqWGpYGlhaWDpYdlgGWEZYJlhmWBZYVlg2WH5YDlhOWC5Yb9C8sDywvLB8sPKwArCCsEKwwrAisKKwYrDisBKwkrBSsNKwMrCysHKw+rAKsIqwSrDKsCqwqrBqsOqwGrCasFqw2rA6sLqwerD2sAawhrBGsMawJrCmsGaw5rAWsJawVrDWsDawtrB2sP6wDrCOsE6wzrAusK6wbrDusB6wnrBesN6wPrC+sH6w8bABsIGwQbDBsCGwobBhsOGwEbCRsFGw0bAxsLGwcbD5sAmwibBJsMmwKbCpsGmw6bAZsJmwWbDZsDmwubB5sPWwBbCFsEWwxbAlsKWwZbDlsBWwlbBVsNWwNbC1sHWw/bANsI2wTbDNsC2wrbBtsO2wHbCdsF2w3bA9sL2wfbDzsAOwg7BDsMOwI7CjsGOw47ATsJOwU7DTsDOws7BzsPuwC7CLsEuwy7ArsKuwa7DrsBuwm7BbsNuwO7C7sHuw97AHsIewR7DHsCewp7BnsOewF7CXsFew17A3sLewd7D/sA+wj7BPsM+wL7CvsG+w77AfsJ+wX7DfsD+wv7J8p/LQAsICwQLDAsCCwoLBgsOCwELCQsFCw0LAwsLCwcLDwsAiwiLBIsMiwKLCosGiw6LAYsJiwWLDYsDiwuLB4sPiwBLCEsESwxLAksKSwZLDksBSwlLBUsNSwNLC0sHSw9LAMsIywTLDMsCywrLBssOywHLCcsFyw37F9YHlheWD5YflgBWEFYIVhhWBFYUVgxWHFYCVhJWClYaVgZWFlYOVh5WAVYRVglWGVYFVhVWDVYdVgNWE1YLVhtWB1YXVg9WH1YA1hDWCNYY1gTWFNYM1hzWAtYS1grWGtYG1hbWDtYe1gHWEdYJ1hnWBdYV1g3WHdYD1hPWC9Yb1gfWF9YP1h/2ADYQNgg2GDYENhQ2DDYcNgI2EjYKNho2BjYWNg42HjYBNhE2CTYZNgU2FTYNNh02AzYTNgs2GzYHNhc2DzYfNgC2ELYIthi2BLYUtgy2HLYCthK2CrYatga2FrYOth62AbYRtgm2GbYFthW2DbYdtgO2E7YLthu2B7YXtg+2H7YAdhB2CHYYdgR2FHYMdhx2AnYSdgp2GnYGdhZ2DnYedgF2EXYJdhl2BXYVdg12HXYDdhN2C3Ybdgd2F3YPdh92APYQ9gj2GPYE9hT2DPYc9gL2EvYK9hr2BvYW9g72HvYB9hH2CfYZ9gX2FfYN9h32A/YT9gv2G/YH9hf2D9R/2sBYAFhgWCBYUFgQWHBYMFhIWAhYaFgoWFhYGFh4WDhYRFgEWGRYJFhUWBRYdFg0WExYDFhsWCxYXFgcWHxYPFhCWAJYYlgiWFJYElhyWDJYSlgKWGpYKlhaWBpYelg6WEZYBlhmWCZYVlgWWHZYNlhOWA5YblguWH/wvLA8sLywfLDCsAKwgrBCsOKwIrCisGKw0rASsJKwUrDysDKwsrBysMqwCrCKsEqw6rAqsKqwarDasBqwmrBasPqwOrC6sHqwxrAGsIawRrDmsCawprBmsNawFrCWsFaw9rA2sLawdrDOsA6wjrBOsO6wLrCusG6w3rAesJ6wXrD+sD6wvrB+sMGwAbCBsEGw4bAhsKGwYbDRsBGwkbBRsPGwMbCxsHGwybAJsImwSbDpsCmwqbBpsNmwGbCZsFmw+bA5sLmwebDFsAWwhbBFsOWwJbClsGWw1bAVsJWwVbD1sDWwtbB1sM2wDbCNsE2w7bAtsK2wbbDdsB2wnbBdsP2wPbC9sH2ww7ADsIOwQ7DjsCOwo7BjsNOwE7CTsFOw87AzsLOwc7DLsAuwi7BLsOuwK7CrsGuw27AbsJuwW7D7sDuwu7B7sMewB7CHsEew57AnsKewZ7DXsBewl7BXsPewN7C3sHewz7APsI+wT7DvsC+wr7BvsN+wH7CfsF+w/7A/sL+ifZfCwALCAsECwwLAgsKCwYLDgsBCwkLBQsNCwMLCwsHCw+LAIsIiwSLDIsCiwqLBosOiwGLCYsFiw2LA4sLiweLD0sASwhLBEsMSwJLCksGSw5LAUsJSwVLDUsDSwtLB0sPywDLCMsEywzLAssKywbLDssBywnLBcsN+xeWB5YXlg+WH1YAVhBWCFYYVgRWFFYMVhxWAlYSVgpWGlYGVhZWDlYeVgFWEVYJVhlWBVYVVg1WHVYDVhNWC1YbVgdWF1YPVh/WANYQ1gjWGNYE1hTWDNYc1gLWEtYK1hrWBtYW1g7WHtYB1hHWCdYZ1gXWFdYN1h3WA9YT1gvWG9YH1hfWD9YfNgA2EDYINhg2BDYUNgw2HDYCNhI2CjYaNgY2FjYONh42ATYRNgk2GTYFNhU2DTYdNgM2EzYLNhs2BzYXNg82H7YAthC2CLYYtgS2FLYMthy2ArYStgq2GrYGtha2DrYetgG2EbYJthm2BbYVtg22HbYDthO2C7Ybtge2F7YPth92AHYQdgh2GHYEdhR2DHYcdgJ2EnYKdhp2BnYWdg52HnYBdhF2CXYZdgV2FXYNdh12A3YTdgt2G3YHdhd2D3Yf9gD2EPYI9hj2BPYU9gz2HPYC9hL2CvYa9gb2FvYO9h72AfYR9gn2GfYF9hX2DfYd9gP2E/YL9hv2B/YX9k/0/1oAWEBYIFhgWBBYUFgwWHBYCFhIWChYaFgYWFhYOFh4WARYRFgkWGRYFFhUWDRYdFgMWExYLFhsWBxYXFg8WHxYAlhCWCJYYlgSWFJYMlhyWApYSlgqWGpYGlhaWDpYelgGWEZYJlhmWBZYVlg2WHZYDlhOWC5Ybti/sDywvLB8sPywArCCsEKwwrAisKKwYrDisBKwkrBSsNKwMrCysHKw8rAKsIqwSrDKsCqwqrBqsOqwGrCasFqw2rA6sLqwerD6sAawhrBGsMawJrCmsGaw5rAWsJawVrDWsDawtrB2sPawDrCOsE6wzrAusK6wbrDusB6wnrBesN6wPrC+sH6w/rABsIGwQbDBsCGwobBhsOGwEbCRsFGw0bAxsLGwcbDxsAmwibBJsMmwKbCpsGmw6bAZsJmwWbDZsDmwubB5sPmwBbCFsEWwxbAlsKWwZbDlsBWwlbBVsNWwNbC1sHWw9bANsI2wTbDNsC2wrbBtsO2wHbCdsF2w3bA9sL2wfbD9sAOwg7BDsMOwI7CjsGOw47ATsJOwU7DTsDOws7BzsPOwC7CLsEuwy7ArsKuwa7DrsBuwm7BbsNuwO7C7sHuw+7AHsIewR7DHsCewp7BnsOewF7CXsFew17A3sLewd7D3sA+wj7BPsM+wL7CvsG+w77AfsJ+wX7DfsD+wv7B/YvzXAsACwgLBAsOCwILCgsGCw0LAQsJCwULDwsDCwsLBwsMiwCLCIsEiw6LAosKiwaLDYsBiwmLBYsPiwOLC4sHiwxLAEsISwRLDksCSwpLBksNSwFLCUsFSw9LA0sLSwdLDMsAywjLBMsOywLLCssGyw3LAcsJywXLD/oXlgeWF5YPlhxWAFYQVghWGFYEVhRWDFYeVgJWElYKVhpWBlYWVg5WHVYBVhFWCVYZVgVWFVYNVh9WA1YTVgtWG1YHVhdWD1Yc1gDWENYI1hjWBNYU1gzWHtYC1hLWCtYa1gbWFtYO1h3WAdYR1gnWGdYF1hXWDdYf1gPWE9YL1hvWB9YX1g/WHDYANhA2CDYYNgQ2FDYMNh42AjYSNgo2GjYGNhY2DjYdNgE2ETYJNhk2BTYVNg02HzYDNhM2CzYbNgc2FzYPNhy2ALYQtgi2GLYEthS2DLYetgK2ErYKthq2BrYWtg62HbYBthG2CbYZtgW2FbYNth+2A7YTtgu2G7YHthe2D7YcdgB2EHYIdhh2BHYUdgx2HnYCdhJ2CnYadgZ2FnYOdh12AXYRdgl2GXYFdhV2DXYfdgN2E3YLdht2B3YXdg92HPYA9hD2CPYY9gT2FPYM9h72AvYS9gr2GvYG9hb2DvYd9gH2EfYJ9hn2BfYV9g32H/YD9hP2C/Yb9gf2F/RPzvxYAFhAWCBYYFgQWFBYMFhwWAhYSFgoWGhYGFhYWDhYeFgEWERYJFhkWBRYVFg0WHRYDFhMWCxYbFgcWFxYPFh+WAJYQlgiWGJYElhSWDJYclgKWEpYKlhqWBpYWlg6WHpYBlhGWCZYZlgWWFZYNlh2WA5YTlguWG/YvLA8sLywfLD+sAKwgrBCsMKwIrCisGKw4rASsJKwUrDSsDKwsrBysPKwCrCKsEqwyrAqsKqwarDqsBqwmrBasNqwOrC6sHqw+rAGsIawRrDGsCawprBmsOawFrCWsFaw1rA2sLawdrD2sA6wjrBOsM6wLrCusG6w7rAesJ6wXrDesD6wvrB+sP2wAbCBsEGwwbAhsKGwYbDhsBGwkbBRsNGwMbCxsHGw8bAJsImwSbDJsCmwqbBpsOmwGbCZsFmw2bA5sLmwebD5sAWwhbBFsMWwJbClsGWw5bAVsJWwVbDVsDWwtbB1sPWwDbCNsE2wzbAtsK2wbbDtsB2wnbBdsN2wPbC9sH2w/7ADsIOwQ7DDsCOwo7BjsOOwE7CTsFOw07AzsLOwc7DzsAuwi7BLsMuwK7CrsGuw67AbsJuwW7DbsDuwu7B7sPuwB7CHsEewx7AnsKewZ7DnsBewl7BXsNewN7C3sHew97APsI+wT7DPsC+wr7BvsO+wH7CfsF+w37A/sL+yfWP+1ALCAsECwwLAgsKCwYLDgsBCwkLBQsNCwMLCwsHCw8LAIsIiwSLDIsCiwqLBosOiwGLCYsFiw2LA4sLiweLD4sASwhLBEsMSwJLCksGSw5LAUsJSwVLDUsDSwtLB0sPSwDLCMsEywzLAssKywbLDssBywnLBcsNywf2F5YHlh+WD5YQVgBWGFYIVhRWBFYcVgxWElYCVhpWClYWVgZWHlYOVhFWAVYZVglWFVYFVh1WDVYTVgNWG1YLVhdWB1YfVg9WENYA1hjWCNYU1gTWHNYM1hLWAtYa1grWFtYG1h7WDtYR1gHWGdYJ1hXWBdYd1g3WE9YD1hvWC9YX1gfWH9YP1hA2ADYYNgg2FDYENhw2DDYSNgI2GjYKNhY2BjYeNg42ETYBNhk2CTYVNgU2HTYNNhM2AzYbNgs2FzYHNh82DzYQtgC2GLYIthS2BLYctgy2ErYCthq2CrYWtga2HrYOthG2AbYZtgm2FbYFth22DbYTtgO2G7YLthe2B7Yftg+2EHYAdhh2CHYUdgR2HHYMdhJ2AnYadgp2FnYGdh52DnYRdgF2GXYJdhV2BXYddg12E3YDdht2C3YXdgd2H3YPdhD2APYY9gj2FPYE9hz2DPYS9gL2GvYK9hb2BvYe9g72EfYB9hn2CfYV9gX2HfYN9hP2A/Yb9gv2F/YH9h/8T+rwWABYQFggWGBYEFhQWDBYeFgIWEhYKFhoWBhYWFg4WHRYBFhEWCRYZFgUWFRYNFh8WAxYTFgsWGxYHFhcWDxYclgCWEJYIlhiWBJYUlgyWHpYClhKWCpYalgaWFpYOlh2WAZYRlgmWGZYFlhWWDZYflgOWE5YLlhv0LywPLC8sHyw8rACsIKwQrDCsCKworBisOKwErCSsFKw0rAysLKwcrD6sAqwirBKsMqwKrCqsGqw6rAasJqwWrDasDqwurB6sPawBrCGsEawxrAmsKawZrDmsBawlrBWsNawNrC2sHaw/rAOsI6wTrDOsC6wrrBusO6wHrCesF6w3rA+sL6wfrDxsAGwgbBBsMGwIbChsGGw4bARsJGwUbDRsDGwsbBxsPmwCbCJsEmwybApsKmwabDpsBmwmbBZsNmwObC5sHmw9bAFsIWwRbDFsCWwpbBlsOWwFbCVsFWw1bA1sLWwdbD9sA2wjbBNsM2wLbCtsG2w7bAdsJ2wXbDdsD2wvbB9sPOwA7CDsEOww7AjsKOwY7DjsBOwk7BTsNOwM7CzsHOw+7ALsIuwS7DLsCuwq7BrsOuwG7CbsFuw27A7sLuwe7D3sAewh7BHsMewJ7CnsGew57AXsJewV7DXsDewt7B3sP+wD7CPsE+wz7AvsK+wb7DvsB+wn7BfsN+wP7C/snzn8tACwgLBAsMCwILCgsGCw4LAQsJCwULDQsDCwsLBwsPCwCLCIsEiwyLAosKiwaLDosBiwmLBYsNiwOLC4sHiw+LAEsISwRLDEsCSwpLBksOSwFLCUsFSw1LA0sLSwdLD0sAywjLBMsMywLLCssGyw7LAcsJywXLDfsX1geWF5YPlh+WAFYQVghWGFYEVhRWDFYcVgJWElYKVhpWBlYWVg5WHlYBVhFWCVYZVgVWFVYNVh1WA1YTVgtWG1YHVhdWD1YfVgDWENYI1hjWBNYU1gzWHNYC1hLWCtYa1gbWFtYO1h7WAdYR1gnWGdYF1hXWDdYd1gPWE9YL1hvWB9YX1g/WH/YANhA2CDYYNgQ2FDYMNhw2AjYSNgo2GjYGNhY2DjYeNgE2ETYJNhk2BTYVNg02HTYDNhM2CzYbNgc2FzYPNh82ALYQtgi2GLYEthS2DLYctgK2ErYKthq2BrYWtg62HrYBthG2CbYZtgW2FbYNth22A7YTtgu2G7YHthe2D7YftgB2EHYIdhh2BHYUdgx2HHYCdhJ2CnYadgZ2FnYOdh52AXYRdgl2GXYFdhV2DXYddgN2E3YLdht2B3YXdg92H3YA9hD2CPYY9gT2FPYM9hz2AvYS9gr2GvYG9hb2DvYe9gH2EfYJ9hn2BfYV9g32HfYD9hP2C/Yb9gf2F/YP3H/awFgAWGBYIFhQWBBYcFgwWEhYCFhoWChYWFgYWHhYOFhEWARYZFgkWFRYFFh0WDRYTFgMWGxYLFhcWBxYfFg8WEJYAlhiWCJYUlgSWHJYMlhKWApYalgqWFpYGlh6WDpYRlgGWGZYJlhWWBZYdlg2WE5YDlhuWC5Yf/C8sDywvLB8sMKwArCCsEKw4rAisKKwYrDSsBKwkrBSsPKwMrCysHKwyrAKsIqwSrDqsCqwqrBqsNqwGrCasFqw+rA6sLqwerDGsAawhrBGsOawJrCmsGaw1rAWsJawVrD2sDawtrB2sM6wDrCOsE6w7rAusK6wbrDesB6wnrBesP6wPrC+sH6wwbABsIGwQbDhsCGwobBhsNGwEbCRsFGw8bAxsLGwcbDJsAmwibBJsOmwKbCpsGmw2bAZsJmwWbD5sDmwubB5sMWwBbCFsEWw5bAlsKWwZbDVsBWwlbBVsPWwNbC1sHWwzbANsI2wTbDtsC2wrbBtsN2wHbCdsF2w/bA9sL2wfbDDsAOwg7BDsOOwI7CjsGOw07ATsJOwU7DzsDOws7BzsMuwC7CLsEuw67ArsKuwa7DbsBuwm7BbsPuwO7C7sHuwx7AHsIewR7DnsCewp7BnsNewF7CXsFew97A3sLewd7DPsA+wj7BPsO+wL7CvsG+w37AfsJ+wX7D/sD+wv6J918LAAsICwQLDAsCCwoLBgsOCwELCQsFCw0LAwsLCwcLD4sAiwiLBIsMiwKLCosGiw6LAYsJiwWLDYsDiwuLB4sPSwBLCEsESwxLAksKSwZLDksBSwlLBUsNSwNLC0sHSw/LAMsIywTLDMsCywrLBssOywHLCcsFyw37F5YHlheWD5YfVgBWEFYIVhhWBFYUVgxWHFYCVhJWClYaVgZWFlYOVh5WAVYRVglWGVYFVhVWDVYdVgNWE1YLVhtWB1YXVg9WH9YA1hDWCNYY1gTWFNYM1hzWAtYS1grWGtYG1hbWDtYe1gHWEdYJ1hnWBdYV1g3WHdYD1hPWC9Yb1gfWF9YP1h82ADYQNgg2GDYENhQ2DDYcNgI2EjYKNho2BjYWNg42HjYBNhE2CTYZNgU2FTYNNh02AzYTNgs2GzYHNhc2DzYftgC2ELYIthi2BLYUtgy2HLYCthK2CrYatga2FrYOth62AbYRtgm2GbYFthW2DbYdtgO2E7YLthu2B7YXtg+2H3YAdhB2CHYYdgR2FHYMdhx2AnYSdgp2GnYGdhZ2DnYedgF2EXYJdhl2BXYVdg12HXYDdhN2C3Ybdgd2F3YPdh/2APYQ9gj2GPYE9hT2DPYc9gL2EvYK9hr2BvYW9g72HvYB9hH2CfYZ9gX2FfYN9h32A/YT9gv2G/YH9hf2T/z/WgBYQFggWGBYEFhQWDBYcFgIWEhYKFhoWBhYWFg4WHhYBFhEWCRYZFgUWFRYNFh0WAxYTFgsWGxYHFhcWDxYfFgCWEJYIlhiWBJYUlgyWHJYClhKWCpYalgaWFpYOlh6WAZYRlgmWGZYFlhWWDZYdlgOWE5YLlhu2L+wPLC8sHyw/LACsIKwQrDCsCKworBisOKwErCSsFKw0rAysLKwcrDysAqwirBKsMqwKrCqsGqw6rAasJqwWrDasDqwurB6sPqwBrCGsEawxrAmsKawZrDmsBawlrBWsNawNrC2sHaw9rAOsI6wTrDOsC6wrrBusO6wHrCesF6w3rA+sL6wfrD+sAGwgbBBsMGwIbChsGGw4bARsJGwUbDRsDGwsbBxsPGwCbCJsEmwybApsKmwabDpsBmwmbBZsNmwObC5sHmw+bAFsIWwRbDFsCWwpbBlsOWwFbCVsFWw1bA1sLWwdbD1sA2wjbBNsM2wLbCtsG2w7bAdsJ2wXbDdsD2wvbB9sP2wA7CDsEOww7AjsKOwY7DjsBOwk7BTsNOwM7CzsHOw87ALsIuwS7DLsCuwq7BrsOuwG7CbsFuw27A7sLuwe7D7sAewh7BHsMewJ7CnsGew57AXsJewV7DXsDewt7B3sPewD7CPsE+wz7AvsK+wb7DvsB+wn7BfsN+wP7C/sH8S/NcCwALCAsECw4LAgsKCwYLDQsBCwkLBQsPCwMLCwsHCwyLAIsIiwSLDosCiwqLBosNiwGLCYsFiw+LA4sLiweLDEsASwhLBEsOSwJLCksGSw1LAUsJSwVLD0sDSwtLB0sMywDLCMsEyw7LAssKywbLDcsBywnLBcsP+heWB5YXlg+WHFYAVhBWCFYYVgRWFFYMVh5WAlYSVgpWGlYGVhZWDlYdVgFWEVYJVhlWBVYVVg1WH1YDVhNWC1YbVgdWF1YPVhzWANYQ1gjWGNYE1hTWDNYe1gLWEtYK1hrWBtYW1g7WHdYB1hHWCdYZ1gXWFdYN1h/WA9YT1gvWG9YH1hfWD9YcNgA2EDYINhg2BDYUNgw2HjYCNhI2CjYaNgY2FjYONh02ATYRNgk2GTYFNhU2DTYfNgM2EzYLNhs2BzYXNg82HLYAthC2CLYYtgS2FLYMth62ArYStgq2GrYGtha2DrYdtgG2EbYJthm2BbYVtg22H7YDthO2C7Ybtge2F7YPthx2AHYQdgh2GHYEdhR2DHYedgJ2EnYKdhp2BnYWdg52HXYBdhF2CXYZdgV2FXYNdh92A3YTdgt2G3YHdhd2D3Yc9gD2EPYI9hj2BPYU9gz2HvYC9hL2CvYa9gb2FvYO9h32AfYR9gn2GfYF9hX2DfYf9gP2E/YL9hv2B/YX9k/C/FgAWEBYIFhgWBBYUFgwWHBYCFhIWChYaFgYWFhYOFh4WARYRFgkWGRYFFhUWDRYdFgMWExYLFhsWBxYXFg8WH5YAlhCWCJYYlgSWFJYMlhyWApYSlgqWGpYGlhaWDpYelgGWEZYJlhmWBZYVlg2WHZYDlhOWC5Yb9i8sDywvLB8sP6wArCCsEKwwrAisKKwYrDisBKwkrBSsNKwMrCysHKw8rAKsIqwSrDKsCqwqrBqsOqwGrCasFqw2rA6sLqwerD6sAawhrBGsMawJrCmsGaw5rAWsJawVrDWsDawtrB2sPawDrCOsE6wzrAusK6wbrDusB6wnrBesN6wPrC+sH6w/bABsIGwQbDBsCGwobBhsOGwEbCRsFGw0bAxsLGwcbDxsAmwibBJsMmwKbCpsGmw6bAZsJmwWbDZsDmwubB5sPmwBbCFsEWwxbAlsKWwZbDlsBWwlbBVsNWwNbC1sHWw9bANsI2wTbDNsC2wrbBtsO2wHbCdsF2w3bA9sL2wfbD/sAOwg7BDsMOwI7CjsGOw47ATsJOwU7DTsDOws7BzsPOwC7CLsEuwy7ArsKuwa7DrsBuwm7BbsNuwO7C7sHuw+7AHsIewR7DHsCewp7BnsOewF7CXsFew17A3sLewd7D3sA+wj7BPsM+wL7CvsG+w77AfsJ+wX7DfsD+wv7J9E/7UAsICwQLDAsCCwoLBgsOCwELCQsFCw0LAwsLCwcLDwsAiwiLBIsMiwKLCosGiw6LAYsJiwWLDYsDiwuLB4sPiwBLCEsESwxLAksKSwZLDksBSwlLBUsNSwNLC0sHSw9LAMsIywTLDMsCywrLBssOywHLCcsFyw3LB/YXlgeWH5YPlhBWAFYYVghWFFYEVhxWDFYSVgJWGlYKVhZWBlYeVg5WEVYBVhlWCVYVVgVWHVYNVhNWA1YbVgtWF1YHVh9WD1YQ1gDWGNYI1hTWBNYc1gzWEtYC1hrWCtYW1gbWHtYO1hHWAdYZ1gnWFdYF1h3WDdYT1gPWG9YL1hfWB9Yf1g/WEDYANhg2CDYUNgQ2HDYMNhI2AjYaNgo2FjYGNh42DjYRNgE2GTYJNhU2BTYdNg02EzYDNhs2CzYXNgc2HzYPNhC2ALYYtgi2FLYEthy2DLYStgK2GrYKtha2BrYetg62EbYBthm2CbYVtgW2HbYNthO2A7Ybtgu2F7YHth+2D7YQdgB2GHYIdhR2BHYcdgx2EnYCdhp2CnYWdgZ2HnYOdhF2AXYZdgl2FXYFdh12DXYTdgN2G3YLdhd2B3Yfdg92EPYA9hj2CPYU9gT2HPYM9hL2AvYa9gr2FvYG9h72DvYR9gH2GfYJ9hX2BfYd9g32E/YD9hv2C/YX9gf2H/JP6vBYAFhAWCBYYFgQWFBYMFh4WAhYSFgoWGhYGFhYWDhYdFgEWERYJFhkWBRYVFg0WHxYDFhMWCxYbFgcWFxYPFhyWAJYQlgiWGJYElhSWDJYelgKWEpYKlhqWBpYWlg6WHZYBlhGWCZYZlgWWFZYNlh+WA5YTlguWG/QvLA8sLywfLDysAKwgrBCsMKwIrCisGKw4rASsJKwUrDSsDKwsrBysPqwCrCKsEqwyrAqsKqwarDqsBqwmrBasNqwOrC6sHqw9rAGsIawRrDGsCawprBmsOawFrCWsFaw1rA2sLawdrD+sA6wjrBOsM6wLrCusG6w7rAesJ6wXrDesD6wvrB+sPGwAbCBsEGwwbAhsKGwYbDhsBGwkbBRsNGwMbCxsHGw+bAJsImwSbDJsCmwqbBpsOmwGbCZsFmw2bA5sLmwebD1sAWwhbBFsMWwJbClsGWw5bAVsJWwVbDVsDWwtbB1sP2wDbCNsE2wzbAtsK2wbbDtsB2wnbBdsN2wPbC9sH2w87ADsIOwQ7DDsCOwo7BjsOOwE7CTsFOw07AzsLOwc7D7sAuwi7BLsMuwK7CrsGuw67AbsJuwW7DbsDuwu7B7sPewB7CHsEewx7AnsKewZ7DnsBewl7BXsNewN7C3sHew/7APsI+wT7DPsC+wr7BvsO+wH7CfsF+w37A/sL+yfJfy0ALCAsECwwLAgsKCwYLDgsBCwkLBQsNCwMLCwsHCw8LAIsIiwSLDIsCiwqLBosOiwGLCYsFiw2LA4sLiweLD4sASwhLBEsMSwJLCksGSw5LAUsJSwVLDUsDSwtLB0sPSwDLCMsEywzLAssKywbLDssBywnLBcsN+xfWB5YXlg+WH5YAVhBWCFYYVgRWFFYMVhxWAlYSVgpWGlYGVhZWDlYeVgFWEVYJVhlWBVYVVg1WHVYDVhNWC1YbVgdWF1YPVh9WANYQ1gjWGNYE1hTWDNYc1gLWEtYK1hrWBtYW1g7WHtYB1hHWCdYZ1gXWFdYN1h3WA9YT1gvWG9YH1hfWD9Yf9gA2EDYINhg2BDYUNgw2HDYCNhI2CjYaNgY2FjYONh42ATYRNgk2GTYFNhU2DTYdNgM2EzYLNhs2BzYXNg82HzYAthC2CLYYtgS2FLYMthy2ArYStgq2GrYGtha2DrYetgG2EbYJthm2BbYVtg22HbYDthO2C7Ybtge2F7YPth+2AHYQdgh2GHYEdhR2DHYcdgJ2EnYKdhp2BnYWdg52HnYBdhF2CXYZdgV2FXYNdh12A3YTdgt2G3YHdhd2D3YfdgD2EPYI9hj2BPYU9gz2HPYC9hL2CvYa9gb2FvYO9h72AfYR9gn2GfYF9hX2DfYd9gP2E/YL9hv2B/YX9g/Sf9rAWABYYFggWFBYEFhwWDBYSFgIWGhYKFhYWBhYeFg4WERYBFhkWCRYVFgUWHRYNFhMWAxYbFgsWFxYHFh8WDxYQlgCWGJYIlhSWBJYclgyWEpYClhqWCpYWlgaWHpYOlhGWAZYZlgmWFZYFlh2WDZYTlgOWG5YLlh/8LywPLC8sHywwrACsIKwQrDisCKworBisNKwErCSsFKw8rAysLKwcrDKsAqwirBKsOqwKrCqsGqw2rAasJqwWrD6sDqwurB6sMawBrCGsEaw5rAmsKawZrDWsBawlrBWsPawNrC2sHawzrAOsI6wTrDusC6wrrBusN6wHrCesF6w/rA+sL6wfrDBsAGwgbBBsOGwIbChsGGw0bARsJGwUbDxsDGwsbBxsMmwCbCJsEmw6bApsKmwabDZsBmwmbBZsPmwObC5sHmwxbAFsIWwRbDlsCWwpbBlsNWwFbCVsFWw9bA1sLWwdbDNsA2wjbBNsO2wLbCtsG2w3bAdsJ2wXbD9sD2wvbB9sMOwA7CDsEOw47AjsKOwY7DTsBOwk7BTsPOwM7CzsHOwy7ALsIuwS7DrsCuwq7BrsNuwG7CbsFuw+7A7sLuwe7DHsAewh7BHsOewJ7CnsGew17AXsJewV7D3sDewt7B3sM+wD7CPsE+w77AvsK+wb7DfsB+wn7BfsP+wP7C/kn2XwsACwgLBAsMCwILCgsGCw4LAQsJCwULDQsDCwsLBwsPiwCLCIsEiwyLAosKiwaLDosBiwmLBYsNiwOLC4sHiw9LAEsISwRLDEsCSwpLBksOSwFLCUsFSw1LA0sLSwdLD8sAywjLBMsMywLLCssGyw7LAcsJywXLDfsXlgeWF5YPlh9WAFYQVghWGFYEVhRWDFYcVgJWElYKVhpWBlYWVg5WHlYBVhFWCVYZVgVWFVYNVh1WA1YTVgtWG1YHVhdWD1Yf1gDWENYI1hjWBNYU1gzWHNYC1hLWCtYa1gbWFtYO1h7WAdYR1gnWGdYF1hXWDdYd1gPWE9YL1hvWB9YX1g/WHzYANhA2CDYYNgQ2FDYMNhw2AjYSNgo2GjYGNhY2DjYeNgE2ETYJNhk2BTYVNg02HTYDNhM2CzYbNgc2FzYPNh+2ALYQtgi2GLYEthS2DLYctgK2ErYKthq2BrYWtg62HrYBthG2CbYZtgW2FbYNth22A7YTtgu2G7YHthe2D7YfdgB2EHYIdhh2BHYUdgx2HHYCdhJ2CnYadgZ2FnYOdh52AXYRdgl2GXYFdhV2DXYddgN2E3YLdht2B3YXdg92H/YA9hD2CPYY9gT2FPYM9hz2AvYS9gr2GvYG9hb2DvYe9gH2EfYJ9hn2BfYV9g32HfYD9hP2C/Yb9gf2F/ZP8v9aAFhAWCBYYFgQWFBYMFhwWAhYSFgoWGhYGFhYWDhYeFgEWERYJFhkWBRYVFg0WHRYDFhMWCxYbFgcWFxYPFh8WAJYQlgiWGJYElhSWDJYclgKWEpYKlhqWBpYWlg6WHpYBlhGWCZYZlgWWFZYNlh2WA5YTlguWG7Yv7A8sLywfLD8sAKwgrBCsMKwIrCisGKw4rASsJKwUrDSsDKwsrBysPKwCrCKsEqwyrAqsKqwarDqsBqwmrBasNqwOrC6sHqw+rAGsIawRrDGsCawprBmsOawFrCWsFaw1rA2sLawdrD2sA6wjrBOsM6wLrCusG6w7rAesJ6wXrDesD6wvrB+sP6wAbCBsEGwwbAhsKGwYbDhsBGwkbBRsNGwMbCxsHGw8bAJsImwSbDJsCmwqbBpsOmwGbCZsFmw2bA5sLmwebD5sAWwhbBFsMWwJbClsGWw5bAVsJWwVbDVsDWwtbB1sPWwDbCNsE2wzbAtsK2wbbDtsB2wnbBdsN2wPbC9sH2w/bADsIOwQ7DDsCOwo7BjsOOwE7CTsFOw07AzsLOwc7DzsAuwi7BLsMuwK7CrsGuw67AbsJuwW7DbsDuwu7B7sPuwB7CHsEewx7AnsKewZ7DnsBewl7BXsNewN7C3sHew97APsI+wT7DPsC+wr7BvsO+wH7CfsF+w37A/sL+wf1L81wLAAsICwQLDgsCCwoLBgsNCwELCQsFCw8LAwsLCwcLDIsAiwiLBIsOiwKLCosGiw2LAYsJiwWLD4sDiwuLB4sMSwBLCEsESw5LAksKSwZLDUsBSwlLBUsPSwNLC0sHSwzLAMsIywTLDssCywrLBssNywHLCcsFyw/6F5YHlheWD5YcVgBWEFYIVhhWBFYUVgxWHlYCVhJWClYaVgZWFlYOVh1WAVYRVglWGVYFVhVWDVYfVgNWE1YLVhtWB1YXVg9WHNYA1hDWCNYY1gTWFNYM1h7WAtYS1grWGtYG1hbWDtYd1gHWEdYJ1hnWBdYV1g3WH9YD1hPWC9Yb1gfWF9YP1hw2ADYQNgg2GDYENhQ2DDYeNgI2EjYKNho2BjYWNg42HTYBNhE2CTYZNgU2FTYNNh82AzYTNgs2GzYHNhc2DzYctgC2ELYIthi2BLYUtgy2HrYCthK2CrYatga2FrYOth22AbYRtgm2GbYFthW2DbYftgO2E7YLthu2B7YXtg+2HHYAdhB2CHYYdgR2FHYMdh52AnYSdgp2GnYGdhZ2DnYddgF2EXYJdhl2BXYVdg12H3YDdhN2C3Ybdgd2F3YPdhz2APYQ9gj2GPYE9hT2DPYe9gL2EvYK9hr2BvYW9g72HfYB9hH2CfYZ9gX2FfYN9h/2A/YT9gv2G/YH9hf2T8r8WABYQFggWGBYEFhQWDBYcFgIWEhYKFhoWBhYWFg4WHhYBFhEWCRYZFgUWFRYNFh0WAxYTFgsWGxYHFhcWDxYflgCWEJYIlhiWBJYUlgyWHJYClhKWCpYalgaWFpYOlh6WAZYRlgmWGZYFlhWWDZYdlgOWE5YLlhv2LywPLC8sHyw/rACsIKwQrDCsCKworBisOKwErCSsFKw0rAysLKwcrDysAqwirBKsMqwKrCqsGqw6rAasJqwWrDasDqwurB6sPqwBrCGsEawxrAmsKawZrDmsBawlrBWsNawNrC2sHaw9rAOsI6wTrDOsC6wrrBusO6wHrCesF6w3rA+sL6wfrD9sAGwgbBBsMGwIbChsGGw4bARsJGwUbDRsDGwsbBxsPGwCbCJsEmwybApsKmwabDpsBmwmbBZsNmwObC5sHmw+bAFsIWwRbDFsCWwpbBlsOWwFbCVsFWw1bA1sLWwdbD1sA2wjbBNsM2wLbCtsG2w7bAdsJ2wXbDdsD2wvbB9sP+wA7CDsEOww7AjsKOwY7DjsBOwk7BTsNOwM7CzsHOw87ALsIuwS7DLsCuwq7BrsOuwG7CbsFuw27A7sLuwe7D7sAewh7BHsMewJ7CnsGew57AXsJewV7DXsDewt7B3sPewD7CPsE+wz7AvsK+wb7DvsB+wn7BfsN+wP7C/sn1T/tQCwgLBAsMCwILCgsGCw4LAQsJCwULDQsDCwsLBwsPCwCLCIsEiwyLAosKiwaLDosBiwmLBYsNiwOLC4sHiw+LAEsISwRLDEsCSwpLBksOSwFLCUsFSw1LA0sLSwdLD0sAywjLBMsMywLLCssGyw7LAcsJywXLDcsH9heWB5Yflg+WEFYAVhhWCFYUVgRWHFYMVhJWAlYaVgpWFlYGVh5WDlYRVgFWGVYJVhVWBVYdVg1WE1YDVhtWC1YXVgdWH1YPVhDWANYY1gjWFNYE1hzWDNYS1gLWGtYK1hbWBtYe1g7WEdYB1hnWCdYV1gXWHdYN1hPWA9Yb1gvWF9YH1h/WD9YQNgA2GDYINhQ2BDYcNgw2EjYCNho2CjYWNgY2HjYONhE2ATYZNgk2FTYFNh02DTYTNgM2GzYLNhc2BzYfNg82ELYAthi2CLYUtgS2HLYMthK2ArYatgq2FrYGth62DrYRtgG2GbYJthW2BbYdtg22E7YDthu2C7YXtge2H7YPthB2AHYYdgh2FHYEdhx2DHYSdgJ2GnYKdhZ2BnYedg52EXYBdhl2CXYVdgV2HXYNdhN2A3Ybdgt2F3YHdh92D3YQ9gD2GPYI9hT2BPYc9gz2EvYC9hr2CvYW9gb2HvYO9hH2AfYZ9gn2FfYF9h32DfYT9gP2G/YL9hf2B/Yf+k/q8FgAWEBYIFhgWBBYUFgwWHhYCFhIWChYaFgYWFhYOFh0WARYRFgkWGRYFFhUWDRYfFgMWExYLFhsWBxYXFg8WHJYAlhCWCJYYlgSWFJYMlh6WApYSlgqWGpYGlhaWDpYdlgGWEZYJlhmWBZYVlg2WH5YDlhOWC5Yb9C8sDywvLB8sPKwArCCsEKwwrAisKKwYrDisBKwkrBSsNKwMrCysHKw+rAKsIqwSrDKsCqwqrBqsOqwGrCasFqw2rA6sLqwerD2sAawhrBGsMawJrCmsGaw5rAWsJawVrDWsDawtrB2sP6wDrCOsE6wzrAusK6wbrDusB6wnrBesN6wPrC+sH6w8bABsIGwQbDBsCGwobBhsOGwEbCRsFGw0bAxsLGwcbD5sAmwibBJsMmwKbCpsGmw6bAZsJmwWbDZsDmwubB5sPWwBbCFsEWwxbAlsKWwZbDlsBWwlbBVsNWwNbC1sHWw/bANsI2wTbDNsC2wrbBtsO2wHbCdsF2w3bA9sL2wfbDzsAOwg7BDsMOwI7CjsGOw47ATsJOwU7DTsDOws7BzsPuwC7CLsEuwy7ArsKuwa7DrsBuwm7BbsNuwO7C7sHuw97AHsIewR7DHsCewp7BnsOewF7CXsFew17A3sLewd7D/sA+wj7BPsM+wL7CvsG+w77AfsJ+wX7DfsD+wv7J81/LQAsICwQLDAsCCwoLBgsOCwELCQsFCw0LAwsLCwcLDwsAiwiLBIsMiwKLCosGiw6LAYsJiwWLDYsDiwuLB4sPiwBLCEsESwxLAksKSwZLDksBSwlLBUsNSwNLC0sHSw9LAMsIywTLDMsCywrLBssOywHLCcsFyw37F9YHlheWD5YflgBWEFYIVhhWBFYUVgxWHFYCVhJWClYaVgZWFlYOVh5WAVYRVglWGVYFVhVWDVYdVgNWE1YLVhtWB1YXVg9WH1YA1hDWCNYY1gTWFNYM1hzWAtYS1grWGtYG1hbWDtYe1gHWEdYJ1hnWBdYV1g3WHdYD1hPWC9Yb1gfWF9YP1h/2ADYQNgg2GDYENhQ2DDYcNgI2EjYKNho2BjYWNg42HjYBNhE2CTYZNgU2FTYNNh02AzYTNgs2GzYHNhc2DzYfNgC2ELYIthi2BLYUtgy2HLYCthK2CrYatga2FrYOth62AbYRtgm2GbYFthW2DbYdtgO2E7YLthu2B7YXtg+2H7YAdhB2CHYYdgR2FHYMdhx2AnYSdgp2GnYGdhZ2DnYedgF2EXYJdhl2BXYVdg12HXYDdhN2C3Ybdgd2F3YPdh92APYQ9gj2GPYE9hT2DPYc9gL2EvYK9hr2BvYW9g72HvYB9hH2CfYZ9gX2FfYN9h32A/YT9gv2G/YH9hf2D9p/2sBYAFhgWCBYUFgQWHBYMFhIWAhYaFgoWFhYGFh4WDhYRFgEWGRYJFhUWBRYdFg0WExYDFhsWCxYXFgcWHxYPFhCWAJYYlgiWFJYElhyWDJYSlgKWGpYKlhaWBpYelg6WEZYBlhmWCZYVlgWWHZYNlhOWA5YblguWH/wvLA8sLywfLDCsAKwgrBCsOKwIrCisGKw0rASsJKwUrDysDKwsrBysMqwCrCKsEqw6rAqsKqwarDasBqwmrBasPqwOrC6sHqwxrAGsIawRrDmsCawprBmsNawFrCWsFaw9rA2sLawdrDOsA6wjrBOsO6wLrCusG6w3rAesJ6wXrD+sD6wvrB+sMGwAbCBsEGw4bAhsKGwYbDRsBGwkbBRsPGwMbCxsHGwybAJsImwSbDpsCmwqbBpsNmwGbCZsFmw+bA5sLmwebDFsAWwhbBFsOWwJbClsGWw1bAVsJWwVbD1sDWwtbB1sM2wDbCNsE2w7bAtsK2wbbDdsB2wnbBdsP2wPbC9sH2ww7ADsIOwQ7DjsCOwo7BjsNOwE7CTsFOw87AzsLOwc7DLsAuwi7BLsOuwK7CrsGuw27AbsJuwW7D7sDuwu7B7sMewB7CHsEew57AnsKewZ7DXsBewl7BXsPewN7C3sHewz7APsI+wT7DvsC+wr7BvsN+wH7CfsF+w/7A/sL+SfdfCwALCAsECwwLAgsKCwYLDgsBCwkLBQsNCwMLCwsHCw+LAIsIiwSLDIsCiwqLBosOiwGLCYsFiw2LA4sLiweLD0sASwhLBEsMSwJLCksGSw5LAUsJSwVLDUsDSwtLB0sPywDLCMsEywzLAssKywbLDssBywnLBcsN+xeWB5YXlg+WH1YAVhBWCFYYVgRWFFYMVhxWAlYSVgpWGlYGVhZWDlYeVgFWEVYJVhlWBVYVVg1WHVYDVhNWC1YbVgdWF1YPVh/WANYQ1gjWGNYE1hTWDNYc1gLWEtYK1hrWBtYW1g7WHtYB1hHWCdYZ1gXWFdYN1h3WA9YT1gvWG9YH1hfWD9YfNgA2EDYINhg2BDYUNgw2HDYCNhI2CjYaNgY2FjYONh42ATYRNgk2GTYFNhU2DTYdNgM2EzYLNhs2BzYXNg82H7YAthC2CLYYtgS2FLYMthy2ArYStgq2GrYGtha2DrYetgG2EbYJthm2BbYVtg22HbYDthO2C7Ybtge2F7YPth92AHYQdgh2GHYEdhR2DHYcdgJ2EnYKdhp2BnYWdg52HnYBdhF2CXYZdgV2FXYNdh12A3YTdgt2G3YHdhd2D3Yf9gD2EPYI9hj2BPYU9gz2HPYC9hL2CvYa9gb2FvYO9h72AfYR9gn2GfYF9hX2DfYd9gP2E/YL9hv2B/YX9k/6/1oAWEBYIFhgWBBYUFgwWHBYCFhIWChYaFgYWFhYOFh4WARYRFgkWGRYFFhUWDRYdFgMWExYLFhsWBxYXFg8WHxYAlhCWCJYYlgSWFJYMlhyWApYSlgqWGpYGlhaWDpYelgGWEZYJlhmWBZYVlg2WHZYDlhOWC5Ybti/sDywvLB8sPywArCCsEKwwrAisKKwYrDisBKwkrBSsNKwMrCysHKw8rAKsIqwSrDKsCqwqrBqsOqwGrCasFqw2rA6sLqwerD6sAawhrBGsMawJrCmsGaw5rAWsJawVrDWsDawtrB2sPawDrCOsE6wzrAusK6wbrDusB6wnrBesN6wPrC+sH6w/rABsIGwQbDBsCGwobBhsOGwEbCRsFGw0bAxsLGwcbDxsAmwibBJsMmwKbCpsGmw6bAZsJmwWbDZsDmwubB5sPmwBbCFsEWwxbAlsKWwZbDlsBWwlbBVsNWwNbC1sHWw9bANsI2wTbDNsC2wrbBtsO2wHbCdsF2w3bA9sL2wfbD9sAOwg7BDsMOwI7CjsGOw47ATsJOwU7DTsDOws7BzsPOwC7CLsEuwy7ArsKuwa7DrsBuwm7BbsNuwO7C7sHuw+7AHsIewR7DHsCewp7BnsOewF7CXsFew17A3sLewd7D3sA+wj7BPsM+wL7CvsG+w77AfsJ+wX7DfsD+wv7B/MvzXAsACwgLBAsOCwILCgsGCw0LAQsJCwULDwsDCwsLBwsMiwCLCIsEiw6LAosKiwaLDYsBiwmLBYsPiwOLC4sHiwxLAEsISwRLDksCSwpLBksNSwFLCUsFSw9LA0sLSwdLDMsAywjLBMsOywLLCssGyw3LAcsJywXLD/oXlgeWF5YPlhxWAFYQVghWGFYEVhRWDFYeVgJWElYKVhpWBlYWVg5WHVYBVhFWCVYZVgVWFVYNVh9WA1YTVgtWG1YHVhdWD1Yc1gDWENYI1hjWBNYU1gzWHtYC1hLWCtYa1gbWFtYO1h3WAdYR1gnWGdYF1hXWDdYf1gPWE9YL1hvWB9YX1g/WHDYANhA2CDYYNgQ2FDYMNh42AjYSNgo2GjYGNhY2DjYdNgE2ETYJNhk2BTYVNg02HzYDNhM2CzYbNgc2FzYPNhy2ALYQtgi2GLYEthS2DLYetgK2ErYKthq2BrYWtg62HbYBthG2CbYZtgW2FbYNth+2A7YTtgu2G7YHthe2D7YcdgB2EHYIdhh2BHYUdgx2HnYCdhJ2CnYadgZ2FnYOdh12AXYRdgl2GXYFdhV2DXYfdgN2E3YLdht2B3YXdg92HPYA9hD2CPYY9gT2FPYM9h72AvYS9gr2GvYG9hb2DvYd9gH2EfYJ9hn2BfYV9g32H/YD9hP2C/Yb9gf2F/ZPxvxYAFhAWCBYYFgQWFBYMFhwWAhYSFgoWGhYGFhYWDhYeFgEWERYJFhkWBRYVFg0WHRYDFhMWCxYbFgcWFxYPFh+WAJYQlgiWGJYElhSWDJYclgKWEpYKlhqWBpYWlg6WHpYBlhGWCZYZlgWWFZYNlh2WA5YTlguWG/YvLA8sLywfLD+sAKwgrBCsMKwIrCisGKw4rASsJKwUrDSsDKwsrBysPKwCrCKsEqwyrAqsKqwarDqsBqwmrBasNqwOrC6sHqw+rAGsIawRrDGsCawprBmsOawFrCWsFaw1rA2sLawdrD2sA6wjrBOsM6wLrCusG6w7rAesJ6wXrDesD6wvrB+sP2wAbCBsEGwwbAhsKGwYbDhsBGwkbBRsNGwMbCxsHGw8bAJsImwSbDJsCmwqbBpsOmwGbCZsFmw2bA5sLmwebD5sAWwhbBFsMWwJbClsGWw5bAVsJWwVbDVsDWwtbB1sPWwDbCNsE2wzbAtsK2wbbDtsB2wnbBdsN2wPbC9sH2w/7ADsIOwQ7DDsCOwo7BjsOOwE7CTsFOw07AzsLOwc7DzsAuwi7BLsMuwK7CrsGuw67AbsJuwW7DbsDuwu7B7sPuwB7CHsEewx7AnsKewZ7DnsBewl7BXsNewN7C3sHew97APsI+wT7DPsC+wr7BvsO+wH7CfsF+w37A/sL+yfTP+1ALCAsECwwLAgsKCwYLDgsBCwkLBQsNCwMLCwsHCw8LAIsIiwSLDIsCiwqLBosOiwGLCYsFiw2LA4sLiweLD4sASwhLBEsMSwJLCksGSw5LAUsJSwVLDUsDSwtLB0sPSwDLCMsEywzLAssKywbLDssBywnLBcsNywf2F5YHlh+WD5YQVgBWGFYIVhRWBFYcVgxWElYCVhpWClYWVgZWHlYOVhFWAVYZVglWFVYFVh1WDVYTVgNWG1YLVhdWB1YfVg9WENYA1hjWCNYU1gTWHNYM1hLWAtYa1grWFtYG1h7WDtYR1gHWGdYJ1hXWBdYd1g3WE9YD1hvWC9YX1gfWH9YP1hA2ADYYNgg2FDYENhw2DDYSNgI2GjYKNhY2BjYeNg42ETYBNhk2CTYVNgU2HTYNNhM2AzYbNgs2FzYHNh82DzYQtgC2GLYIthS2BLYctgy2ErYCthq2CrYWtga2HrYOthG2AbYZtgm2FbYFth22DbYTtgO2G7YLthe2B7Yftg+2EHYAdhh2CHYUdgR2HHYMdhJ2AnYadgp2FnYGdh52DnYRdgF2GXYJdhV2BXYddg12E3YDdht2C3YXdgd2H3YPdhD2APYY9gj2FPYE9hz2DPYS9gL2GvYK9hb2BvYe9g72EfYB9hn2CfYV9gX2HfYN9hP2A/Yb9gv2F/YH9h/2T+rwWABYQFggWGBYEFhQWDBYeFgIWEhYKFhoWBhYWFg4WHRYBFhEWCRYZFgUWFRYNFh8WAxYTFgsWGxYHFhcWDxYclgCWEJYIlhiWBJYUlgyWHpYClhKWCpYalgaWFpYOlh2WAZYRlgmWGZYFlhWWDZYflgOWE5YLlhv0LywPLC8sHyw8rACsIKwQrDCsCKworBisOKwErCSsFKw0rAysLKwcrD6sAqwirBKsMqwKrCqsGqw6rAasJqwWrDasDqwurB6sPawBrCGsEawxrAmsKawZrDmsBawlrBWsNawNrC2sHaw/rAOsI6wTrDOsC6wrrBusO6wHrCesF6w3rA+sL6wfrDxsAGwgbBBsMGwIbChsGGw4bARsJGwUbDRsDGwsbBxsPmwCbCJsEmwybApsKmwabDpsBmwmbBZsNmwObC5sHmw9bAFsIWwRbDFsCWwpbBlsOWwFbCVsFWw1bA1sLWwdbD9sA2wjbBNsM2wLbCtsG2w7bAdsJ2wXbDdsD2wvbB9sPOwA7CDsEOww7AjsKOwY7DjsBOwk7BTsNOwM7CzsHOw+7ALsIuwS7DLsCuwq7BrsOuwG7CbsFuw27A7sLuwe7D3sAewh7BHsMewJ7CnsGew57AXsJewV7DXsDewt7B3sP+wD7CPsE+wz7AvsK+wb7DvsB+wn7BfsN+wP7C/sny38tACwgLBAsMCwILCgsGCw4LAQsJCwULDQsDCwsLBwsPCwCLCIsEiwyLAosKiwaLDosBiwmLBYsNiwOLC4sHiw+LAEsISwRLDEsCSwpLBksOSwFLCUsFSw1LA0sLSwdLD0sAywjLBMsMywLLCssGyw7LAcsJywXLDfsX1geWF5YPlh+WAFYQVghWGFYEVhRWDFYcVgJWElYKVhpWBlYWVg5WHlYBVhFWCVYZVgVWFVYNVh1WA1YTVgtWG1YHVhdWD1YfVgDWENYI1hjWBNYU1gzWHNYC1hLWCtYa1gbWFtYO1h7WAdYR1gnWGdYF1hXWDdYd1gPWE9YL1hvWB9YX1g/WH/YANhA2CDYYNgQ2FDYMNhw2AjYSNgo2GjYGNhY2DjYeNgE2ETYJNhk2BTYVNg02HTYDNhM2CzYbNgc2FzYPNh82ALYQtgi2GLYEthS2DLYctgK2ErYKthq2BrYWtg62HrYBthG2CbYZtgW2FbYNth22A7YTtgu2G7YHthe2D7YftgB2EHYIdhh2BHYUdgx2HHYCdhJ2CnYadgZ2FnYOdh52AXYRdgl2GXYFdhV2DXYddgN2E3YLdht2B3YXdg92H3YA9hD2CPYY9gT2FPYM9hz2AvYS9gr2GvYG9hb2DvYe9gH2EfYJ9hn2BfYV9g32HfYD9hP2C/Yb9gf2F/YP1n/awFgAWGBYIFhQWBBYcFgwWEhYCFhoWChYWFgYWHhYOFhEWARYZFgkWFRYFFh0WDRYTFgMWGxYLFhcWBxYfFg8WEJYAlhiWCJYUlgSWHJYMlhKWApYalgqWFpYGlh6WDpYRlgGWGZYJlhWWBZYdlg2WE5YDlhuWC5Yf/C8sDywvLB8sMKwArCCsEKw4rAisKKwYrDSsBKwkrBSsPKwMrCysHKwyrAKsIqwSrDqsCqwqrBqsNqwGrCasFqw+rA6sLqwerDGsAawhrBGsOawJrCmsGaw1rAWsJawVrD2sDawtrB2sM6wDrCOsE6w7rAusK6wbrDesB6wnrBesP6wPrC+sH6wwbABsIGwQbDhsCGwobBhsNGwEbCRsFGw8bAxsLGwcbDJsAmwibBJsOmwKbCpsGmw2bAZsJmwWbD5sDmwubB5sMWwBbCFsEWw5bAlsKWwZbDVsBWwlbBVsPWwNbC1sHWwzbANsI2wTbDtsC2wrbBtsN2wHbCdsF2w/bA9sL2wfbDDsAOwg7BDsOOwI7CjsGOw07ATsJOwU7DzsDOws7BzsMuwC7CLsEuw67ArsKuwa7DbsBuwm7BbsPuwO7C7sHuwx7AHsIewR7DnsCewp7BnsNewF7CXsFew97A3sLewd7DPsA+wj7BPsO+wL7CvsG+w37AfsJ+wX7D/sD+wv7J9l8LAAsICwQLDAsCCwoLBgsOCwELCQsFCw0LAwsLCwcLD4sAiwiLBIsMiwKLCosGiw6LAYsJiwWLDYsDiwuLB4sPSwBLCEsESwxLAksKSwZLDksBSwlLBUsNSwNLC0sHSw/LAMsIywTLDMsCywrLBssOywHLCcsFyw37F5YHlheWD5YfVgBWEFYIVhhWBFYUVgxWHFYCVhJWClYaVgZWFlYOVh5WAVYRVglWGVYFVhVWDVYdVgNWE1YLVhtWB1YXVg9WH9YA1hDWCNYY1gTWFNYM1hzWAtYS1grWGtYG1hbWDtYe1gHWEdYJ1hnWBdYV1g3WHdYD1hPWC9Yb1gfWF9YP1h82ADYQNgg2GDYENhQ2DDYcNgI2EjYKNho2BjYWNg42HjYBNhE2CTYZNgU2FTYNNh02AzYTNgs2GzYHNhc2DzYftgC2ELYIthi2BLYUtgy2HLYCthK2CrYatga2FrYOth62AbYRtgm2GbYFthW2DbYdtgO2E7YLthu2B7YXtg+2H3YAdhB2CHYYdgR2FHYMdhx2AnYSdgp2GnYGdhZ2DnYedgF2EXYJdhl2BXYVdg12HXYDdhN2C3Ybdgd2F3YPdh/2APYQ9gj2GPYE9hT2DPYc9gL2EvYK9hr2BvYW9g72HvYB9hH2CfYZ9gX2FfYN9h32A/YT9gv2G/YH9hf2T/b/WgBYQFggWGBYEFhQWDBYcFgIWEhYKFhoWBhYWFg4WHhYBFhEWCRYZFgUWFRYNFh0WAxYTFgsWGxYHFhcWDxYfFgCWEJYIlhiWBJYUlgyWHJYClhKWCpYalgaWFpYOlh6WAZYRlgmWGZYFlhWWDZYdlgOWE5YLlhu2L+wPLC8sHyw/LACsIKwQrDCsCKworBisOKwErCSsFKw0rAysLKwcrDysAqwirBKsMqwKrCqsGqw6rAasJqwWrDasDqwurB6sPqwBrCGsEawxrAmsKawZrDmsBawlrBWsNawNrC2sHaw9rAOsI6wTrDOsC6wrrBusO6wHrCesF6w3rA+sL6wfrD+sAGwgbBBsMGwIbChsGGw4bARsJGwUbDRsDGwsbBxsPGwCbCJsEmwybApsKmwabDpsBmwmbBZsNmwObC5sHmw+bAFsIWwRbDFsCWwpbBlsOWwFbCVsFWw1bA1sLWwdbD1sA2wjbBNsM2wLbCtsG2w7bAdsJ2wXbDdsD2wvbB9sP2wA7CDsEOww7AjsKOwY7DjsBOwk7BTsNOwM7CzsHOw87ALsIuwS7DLsCuwq7BrsOuwG7CbsFuw27A7sLuwe7D7sAewh7BHsMewJ7CnsGew57AXsJewV7DXsDewt7B3sPewD7CPsE+wz7AvsK+wb7DvsB+wn7BfsN+wP7C/sH9y/NcCwALCAsECw4LAgsKCwYLDQsBCwkLBQsPCwMLCwsHCwyLAIsIiwSLDosCiwqLBosNiwGLCYsFiw+LA4sLiweLDEsASwhLBEsOSwJLCksGSw1LAUsJSwVLD0sDSwtLB0sMywDLCMsEyw7LAssKywbLDcsBywnLBcsP+heWB5YXlg+WHFYAVhBWCFYYVgRWFFYMVh5WAlYSVgpWGlYGVhZWDlYdVgFWEVYJVhlWBVYVVg1WH1YDVhNWC1YbVgdWF1YPVhzWANYQ1gjWGNYE1hTWDNYe1gLWEtYK1hrWBtYW1g7WHdYB1hHWCdYZ1gXWFdYN1h/WA9YT1gvWG9YH1hfWD9YcNgA2EDYINhg2BDYUNgw2HjYCNhI2CjYaNgY2FjYONh02ATYRNgk2GTYFNhU2DTYfNgM2EzYLNhs2BzYXNg82HLYAthC2CLYYtgS2FLYMth62ArYStgq2GrYGtha2DrYdtgG2EbYJthm2BbYVtg22H7YDthO2C7Ybtge2F7YPthx2AHYQdgh2GHYEdhR2DHYedgJ2EnYKdhp2BnYWdg52HXYBdhF2CXYZdgV2FXYNdh92A3YTdgt2G3YHdhd2D3Yc9gD2EPYI9hj2BPYU9gz2HvYC9hL2CvYa9gb2FvYO9h32AfYR9gn2GfYF9hX2DfYf9gP2E/YL9hv2B/YX9k/O/FgAWEBYIFhgWBBYUFgwWHBYCFhIWChYaFgYWFhYOFh4WARYRFgkWGRYFFhUWDRYdFgMWExYLFhsWBxYXFg8WH5YAlhCWCJYYlgSWFJYMlhyWApYSlgqWGpYGlhaWDpYelgGWEZYJlhmWBZYVlg2WHZYDlhOWC5Yb9i8sDywvLB8sP6wArCCsEKwwrAisKKwYrDisBKwkrBSsNKwMrCysHKw8rAKsIqwSrDKsCqwqrBqsOqwGrCasFqw2rA6sLqwerD6sAawhrBGsMawJrCmsGaw5rAWsJawVrDWsDawtrB2sPawDrCOsE6wzrAusK6wbrDusB6wnrBesN6wPrC+sH6w/bABsIGwQbDBsCGwobBhsOGwEbCRsFGw0bAxsLGwcbDxsAmwibBJsMmwKbCpsGmw6bAZsJmwWbDZsDmwubB5sPmwBbCFsEWwxbAlsKWwZbDlsBWwlbBVsNWwNbC1sHWw9bANsI2wTbDNsC2wrbBtsO2wHbCdsF2w3bA9sL2wfbD/sAOwg7BDsMOwI7CjsGOw47ATsJOwU7DTsDOws7BzsPOwC7CLsEuwy7ArsKuwa7DrsBuwm7BbsNuwO7C7sHuw+7AHsIewR7DHsCewp7BnsOewF7CXsFew17A3sLewd7D3sA+wj7BPsM+wL7CvsG+w77AfsJ+wX7DfsD+wv7J9c/7UAsICwQLDAsCCwoLBgsOCwELCQsFCw0LAwsLCwcLDwsAiwiLBIsMiwKLCosGiw6LAYsJiwWLDYsDiwuLB4sPiwBLCEsESwxLAksKSwZLDksBSwlLBUsNSwNLC0sHSw9LAMsIywTLDMsCywrLBssOywHLCcsFyw3LB/YXlgeWH5YPlhBWAFYYVghWFFYEVhxWDFYSVgJWGlYKVhZWBlYeVg5WEVYBVhlWCVYVVgVWHVYNVhNWA1YbVgtWF1YHVh9WD1YQ1gDWGNYI1h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","debug_symbols":"","brillig_names":["get_public_storage_hints","get_public_data_witness","lt_32_hint","decompose_hint","lte_16_hint","build_msg_block_iter","pad_msg_block","attach_len_to_msg_block","split_60_bits","__mul_impl","__compute_quadratic_expression_with_borrow_flags","search","get_lt_predicate_f","pack_arguments_oracle_wrapper","call_private_function_internal","unpack_returns","pack_arguments_oracle_wrapper","directive_integer_quotient","directive_invert"]},{"name":"get_passport_address","is_unconstrained":true,"custom_attributes":["public"],"abi":{"error_types":{},"parameters":[],"return_type":{"abi_type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"},"visibility":"public"}},"bytecode":"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","debug_symbols":"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","brillig_names":["get_passport_address"],"assert_messages":{"256":"Array index out of bounds","346":"Array index out of bounds","14":"Not initialized","203":"Array index out of bounds","232":"attempt to add with overflow","238":"Array index out of bounds","270":"attempt to add with overflow","211":"Array index out of bounds","179":"Array index out of bounds","330":"Array index out of bounds","359":"attempt to add with overflow","190":"attempt to add with overflow","219":"Array index out of bounds","318":"attempt to add with overflow","338":"Array index out of bounds"}},{"name":"set_admin","is_unconstrained":true,"custom_attributes":["public"],"abi":{"error_types":{},"parameters":[{"name":"new_admin","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"},"visibility":"private"}],"return_type":null},"bytecode":"JAAEAQIlAAQIRAAAJAAEAQQkAAQABR8AAAAABQAAAAQAAAhDKwAIQwADIgAAAAg5AAAACEQAAAAAHgAAAAUeAAAABjAAAAAABQAAAAYAAAAHJAACAQUKAAIHBQYhAAAPAAY6AQAAKgAABSQABAIHAAAEAAcAJAEEAQUAAAQFAgcqAAcGJAAHAAgqAggGKgEFBwAABAcCByoCBwUqAAAHAAAEAAIAKgIFByQABAAFJAAHAQgkAAQBBioABQQgACIKAAQEBQkhAABKAAkgACUqAQcJAAAECQIKAAAECgULKgELBx4AAgAJCgAHBwkKIQAALQAKOgEAACoABQQgAC8KAAQEBQchAAAzAAcgADIjHAAHBAcAAAcIBwkqAAAHJAAEAgoAAAQACgAkAQQBBwAABAcCCioACgsqAgMLJAAEAQsMAAQECwwhAABAAAw6AQAAAAAEBwIMAAAEDAQLKgELCi0AAAAACgAAAAkAAAQEBgkOAAQECQohAABIAAo6AQAAKgAJBCAALyoBBwkcAAcECgAABwgKCywAAAAACwAAAAokAAQBDAwABAQMDSEAAFIADToBAAArAAAJCAMlAAQAAggEIgAAAGArAAgFAAsAAAQLAg0AAAQNBAwqAgoMAAAEBAYJDgAEBAkKIQAAXQAKOgEAACoCCwcqAAkEIAAiKwEIAwgGCwAECAYAAggHIQAAZAgHIABmKwAIAwgFIAB0KwAAAAgFAQAEAAAIBAAAJQAEAAAICQ0ABAgJCAQIChcACAoICiEAAHIICgEABAgDCAkICysBCAsICAEABAgFCAkICysCCAgICwEABAgJAAIICSAAaSUBBAABCAUgAHQjKwAYyhjK","debug_symbols":"1ZvdbqMwEIXfhetceMZ/M3mV1apK2qRCikiVpCutorz7mi4YllIjtZtq5iYKybHnAwYOHptr9bTbvj4/1M3+eK7WP67V4fi4udTHJm1db6tqe6oPh/r5YfxzZdoPepOfXzZNu3W+bE6Xag0R3araNU/tV+tSB/v6sKvWEW6rd2K2sdOyj1kK3s1oHQJ3YodIWc12RhwIbCcOhDwW/1xV/GVwMJDFZiS+OzqYrx/02PfPvHTQAV0vBmQuk1PqoxMTjLruyOE/kqeD/i96GwDvHcDeO4C7dwA/G8C4mBsFv5T5kXpxCjFEiHFG7Tn0me+ZTTl/fLTQi6PFaf4ExexRMTspZme97GgUs4NidlTMbhWzO8Xsin0VFfsqKvZVVOyrVvi16imz++kIygrPmegyO5kp+/fnTB7SBWN8mR0Mh6HrQWxNfINnxfDOaIb/4HEsQoYnLsM7S9iXMOxSEgcOmZ3j9AJ0yw9YjGOato39RBv3iTbzNwdww5kLceE0Y8BcMiFaOM3BQo8TrF0osITUdy8GnBZYPMhmz9kWgGDKjrLZfSiwW9nslMuJwFMj904xu1fMHhSzC79HFtlJMTvrZQ9GMbtwXy2yC/fVIrtiXw2KfTUo9tWg2FeDcF91OLDbsjiNXYeJfaLpjgo34Q93tGUXbsIl9ijchIvswk24yO70Vkuj7JkNglylJpwOzKPwmY1cs5tjF16lzkaW2HHBDFLtsDcDF9/tqPBpkFI5PgpfXlBiJ+HLC4rswpcXFNmFLy8osgtfXlBkF27CRXbhywuK7MJNuMiueKqYFPsqKfZVVuyrrNhXWbGvslpfvaWtX5tTvdkedt37IvvX5nH0+sjl98vff5L4Dw==","brillig_names":["set_admin"],"assert_messages":{"81":"Array index out of bounds","63":"Array index out of bounds","92":"attempt to add with overflow","44":"Aztec Passport: Unauthorized Admin Change","71":"attempt to add with overflow","14":"Not initialized"}},{"name":"set_passport_address","is_unconstrained":true,"custom_attributes":["public"],"abi":{"error_types":{},"parameters":[{"name":"_passport_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"},"visibility":"private"}],"return_type":null},"bytecode":"","debug_symbols":"","brillig_names":["set_passport_address"],"assert_messages":{"1152":"Array index out of bounds","1609":"Array index out of bounds","890":"attempt to add with overflow","1335":"Array index out of bounds","1530":"Array index out of bounds","518":"attempt to add with overflow","1518":"attempt to add with overflow","1323":"attempt to add with overflow","1646":"Array index out of bounds","902":"Array index out of bounds","1628":"Array index out of bounds","1622":"attempt to add with overflow","1939":"attempt to add with overflow","842":"attempt to add with overflow","1799":"Array index out of bounds","1025":"Array index out of bounds","1470":"attempt to add with overflow","1275":"attempt to add with overflow","1208":"Array index out of bounds","1403":"Array index out of bounds","1720":"Array index out of bounds","1391":"attempt to add with overflow","1196":"attempt to add with overflow","1580":"attempt to add with overflow","1708":"attempt to add with overflow","1836":"Array index out of bounds","1818":"Array index out of bounds","788":"Array index out of bounds","337":"attempt to add with overflow","14":"Not initialized","910":"Array index out of bounds","1160":"Array index out of bounds","1812":"attempt to add with overflow","1538":"Array index out of bounds","1343":"Array index out of bounds","1660":"attempt to add with overflow","1593":"Array index out of bounds","630":"attempt to add with overflow","1910":"Array index out of bounds","752":"Array index out of bounds","618":"attempt to add with overflow","1770":"attempt to add with overflow","1898":"attempt to add with overflow","801":"attempt to add with overflow","1569":"Array index out of bounds","1173":"attempt to add with overflow","1033":"Array index out of bounds","1411":"Array index out of bounds","1216":"Array index out of bounds","1728":"Array index out of bounds","1850":"attempt to add with overflow","1783":"Array index out of bounds","1070":"Array index out of bounds","613":"attempt to multiply with overflow","1759":"Array index out of bounds","1052":"Array index out of bounds","918":"Array index out of bounds","1046":"attempt to add with overflow","522":"attempt to add with overflow","1351":"Array index out of bounds","772":"Array index out of bounds","1546":"Array index out of bounds","510":"attempt to add with overflow","1601":"Array index out of bounds","760":"attempt to add with overflow","949":"Array index out of bounds","626":"attempt to add with overflow","1144":"Array index out of bounds","1004":"attempt to add with overflow","1132":"attempt to add with overflow","1918":"Array index out of bounds","931":"attempt to add with overflow","986":"Array index out of bounds","1559":"attempt to add with overflow","1364":"attempt to add with overflow","267":"call to assert_max_bit_size","968":"attempt to add with overflow","1224":"Array index out of bounds","1419":"Array index out of bounds","1791":"Array index out of bounds","1736":"Array index out of bounds","828":"Array index out of bounds","505":"attempt to multiply with overflow","956":"Array index out of bounds","1017":"Array index out of bounds","1084":"attempt to add with overflow","1261":"Array index out of bounds","810":"Array index out of bounds","938":"attempt to add with overflow","1188":"Array index out of bounds","993":"Array index out of bounds","1383":"Array index out of bounds","1243":"Array index out of bounds","1749":"attempt to add with overflow","1432":"attempt to add with overflow","1237":"attempt to add with overflow","1438":"Array index out of bounds","1456":"Array index out of bounds","1926":"Array index out of bounds","780":"Array index out of bounds"}}],"outputs":{"globals":{"notes":[{"fields":[{"kind":"integer","sign":false,"value":"00000000000000000000000000000000000000000000000000000000850bb34d"},{"kind":"string","value":"AddressNote"},{"fields":[{"name":"address","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000000"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"npk_m_hash","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000001"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"randomness","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000002"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}}],"kind":"struct"}],"kind":"tuple"},{"fields":[{"kind":"integer","sign":false,"value":"000000000000000000000000000000000000000000000000000000003de78269"},{"kind":"string","value":"ValueNote"},{"fields":[{"name":"value","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000000"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"npk_m_hash","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000001"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"randomness","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000002"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}}],"kind":"struct"}],"kind":"tuple"},{"fields":[{"kind":"integer","sign":false,"value":"00000000000000000000000000000000000000000000000000000000850bb34d"},{"kind":"string","value":"AddressNote"},{"fields":[{"name":"address","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000000"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"npk_m_hash","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000001"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"randomness","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000002"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}}],"kind":"struct"}],"kind":"tuple"},{"fields":[{"kind":"integer","sign":false,"value":"000000000000000000000000000000000000000000000000000000003de78269"},{"kind":"string","value":"ValueNote"},{"fields":[{"name":"value","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000000"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"npk_m_hash","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000001"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}},{"name":"randomness","value":{"fields":[{"name":"index","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000002"}},{"name":"nullable","value":{"kind":"boolean","value":false}}],"kind":"struct"}}],"kind":"struct"}],"kind":"tuple"}],"storage":[{"fields":[{"name":"contract_name","value":{"kind":"string","value":"AztecPassport"}},{"name":"fields","value":{"fields":[{"name":"admin","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000001"}}],"kind":"struct"}},{"name":"total_services","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000002"}}],"kind":"struct"}},{"name":"services","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000003"}}],"kind":"struct"}},{"name":"service_indexes","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000004"}}],"kind":"struct"}},{"name":"scores","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000005"}}],"kind":"struct"}}],"kind":"struct"}}],"kind":"struct"},{"fields":[{"name":"contract_name","value":{"kind":"string","value":"XModule"}},{"name":"fields","value":{"fields":[{"name":"admin","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000001"}}],"kind":"struct"}},{"name":"passport_address","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000002"}}],"kind":"struct"}}],"kind":"struct"}}],"kind":"struct"}]},"structs":{"functions":[{"fields":[{"name":"parameters","type":{"fields":[],"kind":"struct","path":"XModule::is_admin_parameters"}},{"name":"return_type","type":{"kind":"boolean"}}],"kind":"struct","path":"XModule::is_admin_abi"},{"fields":[{"name":"parameters","type":{"fields":[],"kind":"struct","path":"XModule::get_admin_public_parameters"}},{"name":"return_type","type":{"kind":"field"}}],"kind":"struct","path":"XModule::get_admin_public_abi"},{"fields":[{"name":"parameters","type":{"fields":[{"name":"_admin","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}}],"kind":"struct","path":"XModule::constructor_parameters"}}],"kind":"struct","path":"XModule::constructor_abi"},{"fields":[{"name":"parameters","type":{"fields":[],"kind":"struct","path":"XModule::get_passport_address_parameters"}},{"name":"return_type","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}}],"kind":"struct","path":"XModule::get_passport_address_abi"},{"fields":[{"name":"parameters","type":{"fields":[{"name":"_passport_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}}],"kind":"struct","path":"XModule::set_passport_address_parameters"}}],"kind":"struct","path":"XModule::set_passport_address_abi"},{"fields":[{"name":"parameters","type":{"fields":[{"name":"address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"header_array","type":{"kind":"array","length":576,"type":{"kind":"integer","sign":"unsigned","width":8}}},{"name":"header_length","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"body_array","type":{"kind":"array","length":16384,"type":{"kind":"integer","sign":"unsigned","width":8}}},{"name":"body_length","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"pubkey_modulus","type":{"kind":"array","length":18,"type":{"kind":"field"}}},{"name":"pubkey_redc","type":{"kind":"array","length":18,"type":{"kind":"field"}}},{"name":"signature","type":{"kind":"array","length":18,"type":{"kind":"field"}}},{"name":"body_hash_index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"dkim_header_sequence_index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"dkim_header_sequence_length","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"from_header_sequence_index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"from_header_sequence_length","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"from_address_sequence_index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"from_address_sequence_length","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"username_array","type":{"kind":"array","length":64,"type":{"kind":"integer","sign":"unsigned","width":8}}},{"name":"username_length","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"XModule::verify_parameters"}}],"kind":"struct","path":"XModule::verify_abi"},{"fields":[{"name":"parameters","type":{"fields":[{"name":"new_admin","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}}],"kind":"struct","path":"XModule::set_admin_parameters"}}],"kind":"struct","path":"XModule::set_admin_abi"}]}},"file_map":{"115":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/oracle/key_validation_request.nr","source":"use dep::protocol_types::abis::validation_requests::{KeyValidationRequest, key_validation_request::KEY_VALIDATION_REQUEST_LENGTH};\n\n#[oracle(getKeyValidationRequest)]\nunconstrained fn get_key_validation_request_oracle(\n    _pk_m_hash: Field,\n    _key_index: Field\n) -> [Field; KEY_VALIDATION_REQUEST_LENGTH] {}\n\nunconstrained fn get_key_validation_request_internal(\n    npk_m_hash: Field,\n    key_index: Field\n) -> KeyValidationRequest {\n    let result = get_key_validation_request_oracle(npk_m_hash, key_index);\n    KeyValidationRequest::deserialize(result)\n}\n\nunconstrained pub fn get_key_validation_request(\n    pk_m_hash: Field,\n    key_index: Field\n) -> KeyValidationRequest {\n    get_key_validation_request_internal(pk_m_hash, key_index)\n}\n"},"116":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/oracle/call_private_function.nr","source":"use dep::protocol_types::{abis::function_selector::FunctionSelector, address::AztecAddress, utils::reader::Reader};\n\n#[oracle(callPrivateFunction)]\nunconstrained fn call_private_function_oracle(\n    _contract_address: AztecAddress,\n    _function_selector: FunctionSelector,\n    _args_hash: Field,\n    _start_side_effect_counter: u32,\n    _is_static_call: bool,\n    _is_delegate_call: bool\n) -> [Field; 2] {}\n\nunconstrained pub fn call_private_function_internal(\n    contract_address: AztecAddress,\n    function_selector: FunctionSelector,\n    args_hash: Field,\n    start_side_effect_counter: u32,\n    is_static_call: bool,\n    is_delegate_call: bool\n) -> (u32, Field) {\n    let fields = call_private_function_oracle(\n        contract_address,\n        function_selector,\n        args_hash,\n        start_side_effect_counter,\n        is_static_call,\n        is_delegate_call\n    );\n\n    let mut reader = Reader::new(fields);\n    let end_side_effect_counter = reader.read_u32();\n    let returns_hash = reader.read();\n\n    (end_side_effect_counter, returns_hash)\n}\n"},"119":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/oracle/returns.nr","source":"/// Notifies the simulator that `returns` will be later fetched once the function return is processed, referenced by\n/// their hash. This allows the simulator to know how to respond to this future request.\n///\n/// This is only used during private execution, since in public it is the VM itself that keeps track of return values.\npub fn pack_returns(returns: [Field]) {\n    // This oracle call returns nothing: we only call it for its side effects. It is therefore always safe to call. When\n    // unpacking however the caller must check that the returned value is indeed the preimage.\n    unsafe {\n        pack_returns_oracle_wrapper(returns)\n    };\n}\n\nunconstrained pub fn pack_returns_oracle_wrapper(returns: [Field]) {\n    let _ = pack_returns_oracle(returns);\n}\n\nunconstrained pub fn unpack_returns<let N: u32>(return_hash: Field) -> [Field; N] {\n    unpack_returns_oracle(return_hash)\n}\n\n#[oracle(packReturns)]\nunconstrained fn pack_returns_oracle(_returns: [Field]) -> Field {}\n\n#[oracle(unpackReturns)]\nunconstrained fn unpack_returns_oracle<let N: u32>(_return_hash: Field) -> [Field; N] {}\n"},"122":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/oracle/arguments.nr","source":"/// Notifies the simulator that `args` will later be used at some point during execution, referenced by their hash. This\n/// allows the simulator to know how to respond to this future request.\n///\n/// This is only used during private execution, since in public it is the VM itself that keeps track of arguments.\npub fn pack_arguments(args: [Field]) {\n    // This oracle call returns nothing: we only call it for its side effects. It is therefore always safe to call. When\n    // unpacking however the caller must check that the returned value is indeed the preimage.\n    unsafe {\n        pack_arguments_oracle_wrapper(args)\n    };\n}\n\n/// Same as `pack_arguments`, but using arrays instead of slices.\npub fn pack_arguments_array<let N: u32>(args: [Field; N]) {\n    // This oracle call returns nothing: we only call it for its side effects. It is therefore always safe to call. When\n    // unpacking however the caller must check that the returned value is indeed the preimage.\n    unsafe {\n        pack_arguments_array_oracle_wrapper(args)\n    };\n}\n\nunconstrained fn pack_arguments_oracle_wrapper(args: [Field]) {\n    let _ = pack_arguments_oracle(args);\n}\n\nunconstrained fn pack_arguments_array_oracle_wrapper<let N: u32>(args: [Field; N]) {\n    let _ = pack_arguments_array_oracle(args);\n}\n\n#[oracle(packArguments)]\nunconstrained fn pack_arguments_oracle(_args: [Field]) -> Field {}\n\n#[oracle(packArgumentsArray)]\nunconstrained fn pack_arguments_array_oracle<let N: u32>(_args: [Field; N]) -> Field {}\n"},"123":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/oracle/storage.nr","source":"use dep::protocol_types::{address::AztecAddress, traits::Deserialize};\n\n#[oracle(storageRead)]\nunconstrained fn storage_read_oracle<let N: u32>(address: Field, storage_slot: Field, block_number: Field, length: Field) -> [Field; N] {}\n\nunconstrained pub fn raw_storage_read<let N: u32>(\n    address: AztecAddress,\n    storage_slot: Field,\n    block_number: u32\n) -> [Field; N] {\n    storage_read_oracle(\n        address.to_field(),\n        storage_slot,\n        block_number as Field,\n        N as Field\n    )\n}\n\nunconstrained pub fn storage_read<T, let N: u32>(\n    address: AztecAddress,\n    storage_slot: Field,\n    block_number: u32\n) -> T where T: Deserialize<N> {\n    T::deserialize(raw_storage_read(address, storage_slot, block_number))\n}\n\nmod tests {\n    use crate::oracle::storage::{raw_storage_read, storage_read};\n    use dep::protocol_types::address::AztecAddress;\n\n    use std::test::OracleMock;\n    use crate::test::mocks::mock_struct::MockStruct;\n\n    global address = AztecAddress::from_field(29);\n    global slot = 7;\n    global block_number = 17;\n\n    #[test]\n    unconstrained fn test_raw_storage_read() {\n        let written = MockStruct { a: 13, b: 42 };\n\n        let _ = OracleMock::mock(\"storageRead\").returns(written.serialize());\n\n        let read: [Field; 2] = raw_storage_read(address, slot, block_number);\n        assert_eq(read[0], 13);\n        assert_eq(read[1], 42);\n    }\n\n    #[test]\n    unconstrained fn test_storage_read() {\n        let written = MockStruct { a: 13, b: 42 };\n\n        let _ = OracleMock::mock(\"storageRead\").returns(written.serialize());\n\n        let read: MockStruct = storage_read(address, slot, block_number);\n        assert_eq(read.a, 13);\n        assert_eq(read.b, 42);\n    }\n}\n"},"127":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/oracle/get_public_data_witness.nr","source":"use dep::protocol_types::{constants::PUBLIC_DATA_TREE_HEIGHT, data::PublicDataTreeLeafPreimage, utils::arr_copy_slice};\n\nglobal LEAF_PREIMAGE_LENGTH: u32 = 4;\nglobal PUBLIC_DATA_WITNESS: u32 = 45;\n\npub struct PublicDataWitness {\n    index: Field,\n    leaf_preimage: PublicDataTreeLeafPreimage,\n    path: [Field; PUBLIC_DATA_TREE_HEIGHT],\n}\n\n#[oracle(getPublicDataTreeWitness)]\nunconstrained fn get_public_data_witness_oracle(\n    _block_number: u32,\n    _public_data_tree_index: Field\n) -> [Field; PUBLIC_DATA_WITNESS] {}\n\nunconstrained pub fn get_public_data_witness(\n    block_number: u32,\n    public_data_tree_index: Field\n) -> PublicDataWitness {\n    let fields = get_public_data_witness_oracle(block_number, public_data_tree_index);\n    PublicDataWitness {\n        index: fields[0],\n        leaf_preimage: PublicDataTreeLeafPreimage { slot: fields[1], value: fields[2], next_index: fields[3] as u32, next_slot: fields[4] },\n        path: arr_copy_slice(fields, [0; PUBLIC_DATA_TREE_HEIGHT], 1 + LEAF_PREIMAGE_LENGTH)\n    }\n}\n"},"128":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/oracle/get_contract_instance.nr","source":"use dep::protocol_types::{\n    address::AztecAddress, contract_instance::ContractInstance, constants::CONTRACT_INSTANCE_LENGTH,\n    utils::reader::Reader\n};\n\n#[oracle(getContractInstance)]\nunconstrained fn get_contract_instance_oracle(_address: AztecAddress) -> [Field; CONTRACT_INSTANCE_LENGTH] {}\n\n// Returns a ContractInstance plus a boolean indicating whether the instance was found.\n#[oracle(avmOpcodeGetContractInstance)]\nunconstrained fn get_contract_instance_oracle_avm(_address: AztecAddress) -> [Field; CONTRACT_INSTANCE_LENGTH + 1] {}\n\nunconstrained fn get_contract_instance_internal(address: AztecAddress) -> [Field; CONTRACT_INSTANCE_LENGTH] {\n    get_contract_instance_oracle(address)\n}\n\nunconstrained pub fn get_contract_instance_internal_avm(address: AztecAddress) -> [Field; CONTRACT_INSTANCE_LENGTH + 1] {\n    get_contract_instance_oracle_avm(address)\n}\n\npub fn get_contract_instance(address: AztecAddress) -> ContractInstance {\n    let instance = unsafe {\n        ContractInstance::deserialize(get_contract_instance_internal(address))\n    };\n    // The to_address function combines all values in the instance object to produce an address, so by checking that we\n    // get the expected address we validate the entire struct.\n    assert_eq(instance.to_address(), address);\n\n    instance\n}\n\npub fn get_contract_instance_avm(address: AztecAddress) -> Option<ContractInstance> {\n    let mut reader = Reader::new(get_contract_instance_internal_avm(address));\n    let found = reader.read();\n    if found == 0 {\n        Option::none()\n    } else {\n        Option::some(reader.read_struct(ContractInstance::deserialize))\n    }\n}\n"},"149":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/history/public_storage.nr","source":"use dep::protocol_types::{\n    constants::GENERATOR_INDEX__PUBLIC_LEAF_INDEX, hash::poseidon2_hash_with_separator,\n    address::AztecAddress, header::Header, utils::field::full_field_less_than\n};\nuse dep::protocol_types::merkle_tree::root::root_from_sibling_path;\n\nuse crate::{oracle::get_public_data_witness::get_public_data_witness};\n\ntrait PublicStorageHistoricalRead {\n    fn public_storage_historical_read(header: Header, storage_slot: Field, contract_address: AztecAddress) -> Field;\n}\n\nimpl PublicStorageHistoricalRead for Header {\n    fn public_storage_historical_read(self, storage_slot: Field, contract_address: AztecAddress) -> Field {\n        // 1) Compute the leaf index by siloing the storage slot with the contract address\n        let public_data_tree_index = poseidon2_hash_with_separator(\n            [contract_address.to_field(), storage_slot],\n            GENERATOR_INDEX__PUBLIC_LEAF_INDEX\n        );\n\n        // 2) Get the membership witness for the tree index.\n        let witness = unsafe {\n            get_public_data_witness(\n                self.global_variables.block_number as u32,\n                public_data_tree_index\n            )\n        };\n\n        // 3) The witness is made up of two parts: the preimage of the leaf and the proof that it exists in the tree.\n        // We first prove that the witness is indeed valid for the public data tree, i.e. that the preimage is of a\n        // value present in the tree. Note that `hash` returns not just the hash of the value but also the metadata\n        // (slot, next index and next slot).\n        assert(\n            self.state.partial.public_data_tree.root\n            == root_from_sibling_path(witness.leaf_preimage.hash(), witness.index, witness.path), \"Proving public value inclusion failed\"\n        );\n\n        // 4) Now that we know the preimage is valid, we determine the value that's represented by this tree entry. Here\n        // we have two scenarios:\n        // 1. The tree entry is initialized, and the value is the same as the one in the witness\n        // 2. The entry was never initialized, and the value is default zero (the default)\n        // The code below is based on the same checks in `validate_public_data_reads` in `base_rollup_inputs`.\n        let preimage = witness.leaf_preimage;\n\n        let is_less_than_slot = full_field_less_than(preimage.slot, public_data_tree_index);\n        let is_next_greater_than = full_field_less_than(public_data_tree_index, preimage.next_slot);\n        let is_max = ((preimage.next_index == 0) & (preimage.next_slot == 0));\n        let is_in_range = is_less_than_slot & (is_next_greater_than | is_max);\n\n        let value = if is_in_range {\n            0\n        } else {\n            assert_eq(preimage.slot, public_data_tree_index, \"Public data tree index doesn't match witness\");\n            preimage.value\n        };\n\n        value\n    }\n}\n"},"154":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/initializer.nr","source":"use dep::protocol_types::{\n    address::AztecAddress, hash::poseidon2_hash_with_separator, constants::GENERATOR_INDEX__CONSTRUCTOR,\n    abis::function_selector::FunctionSelector\n};\n\nuse crate::{\n    context::{PrivateContext, PublicContext}, oracle::get_contract_instance::get_contract_instance,\n    oracle::get_contract_instance::get_contract_instance_avm\n};\n\npub fn mark_as_initialized_public(context: &mut PublicContext) {\n    let init_nullifier = compute_unsiloed_contract_initialization_nullifier((*context).this_address());\n    context.push_nullifier(init_nullifier);\n}\n\npub fn mark_as_initialized_private(context: &mut PrivateContext) {\n    let init_nullifier = compute_unsiloed_contract_initialization_nullifier((*context).this_address());\n    context.push_nullifier(init_nullifier);\n}\n\npub fn assert_is_initialized_public(context: &mut PublicContext) {\n    let init_nullifier = compute_unsiloed_contract_initialization_nullifier(context.this_address());\n    assert(context.nullifier_exists(init_nullifier, context.this_address()), \"Not initialized\");\n}\n\npub fn assert_is_initialized_private(context: &mut PrivateContext) {\n    let init_nullifier = compute_unsiloed_contract_initialization_nullifier(context.this_address());\n    context.push_nullifier_read_request(init_nullifier);\n}\n\nfn compute_unsiloed_contract_initialization_nullifier(address: AztecAddress) -> Field {\n    address.to_field()\n}\n\npub fn assert_initialization_matches_address_preimage_public(context: PublicContext) {\n    let address = context.this_address();\n    let instance = get_contract_instance_avm(address).unwrap();\n    let expected_init = compute_initialization_hash(context.selector(), context.get_args_hash());\n    assert(instance.initialization_hash == expected_init, \"Initialization hash does not match\");\n    assert(\n        (instance.deployer.is_zero()) | (instance.deployer == context.msg_sender()), \"Initializer address is not the contract deployer\"\n    );\n}\n\npub fn assert_initialization_matches_address_preimage_private(context: PrivateContext) {\n    let address = context.this_address();\n    let instance = get_contract_instance(address);\n    let expected_init = compute_initialization_hash(context.selector(), context.get_args_hash());\n    assert(instance.initialization_hash == expected_init, \"Initialization hash does not match\");\n    assert(\n        (instance.deployer.is_zero()) | (instance.deployer == context.msg_sender()), \"Initializer address is not the contract deployer\"\n    );\n}\n\npub fn compute_initialization_hash(init_selector: FunctionSelector, init_args_hash: Field) -> Field {\n    poseidon2_hash_with_separator(\n        [init_selector.to_field(), init_args_hash],\n        GENERATOR_INDEX__CONSTRUCTOR\n    )\n}\n"},"155":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/hash.nr","source":"use dep::protocol_types::{\n    address::{AztecAddress, EthAddress},\n    constants::{GENERATOR_INDEX__SECRET_HASH, GENERATOR_INDEX__MESSAGE_NULLIFIER, GENERATOR_INDEX__FUNCTION_ARGS},\n    point::Point, traits::Hash,\n    hash::{sha256_to_field, poseidon2_hash_with_separator, poseidon2_hash_with_separator_slice}\n};\nuse crate::utils::to_bytes::{arr_to_be_bytes_arr, str_to_be_bytes_arr};\n\npub use dep::protocol_types::hash::{compute_siloed_nullifier, pedersen_hash};\n\npub fn pedersen_commitment<let N: u32>(inputs: [Field; N], hash_index: u32) -> Point {\n    std::hash::pedersen_commitment_with_separator(inputs, hash_index)\n}\n\npub fn compute_secret_hash(secret: Field) -> Field {\n    poseidon2_hash_with_separator([secret], GENERATOR_INDEX__SECRET_HASH)\n}\n\npub fn compute_unencrypted_log_hash<let N: u32>(contract_address: AztecAddress, log: [u8; N]) -> Field {\n    let mut hash_bytes = [0; N + 36];\n    // Address is converted to 32 bytes in ts\n    let address_bytes: [u8; 32] = contract_address.to_field().to_be_bytes();\n    for i in 0..32 {\n        hash_bytes[i] = address_bytes[i];\n    }\n    let len_bytes: [u8; 4] = (N as Field).to_be_bytes();\n    for i in 0..4 {\n        hash_bytes[32 + i] = len_bytes[i];\n    }\n    for i in 0..N {\n        hash_bytes[36 + i] = log[i];\n    }\n\n    sha256_to_field(hash_bytes)\n}\n\npub fn compute_message_hash(\n    sender: EthAddress,\n    chain_id: Field,\n    recipient: AztecAddress,\n    version: Field,\n    content: Field,\n    secret_hash: Field\n) -> Field {\n    let mut hash_bytes = [0 as u8; 192];\n    let sender_bytes: [u8; 32] = sender.to_field().to_be_bytes();\n    let chain_id_bytes: [u8; 32] = chain_id.to_be_bytes();\n    let recipient_bytes: [u8; 32] = recipient.to_field().to_be_bytes();\n    let version_bytes: [u8; 32] = version.to_be_bytes();\n    let content_bytes: [u8; 32] = content.to_be_bytes();\n    let secret_hash_bytes: [u8; 32] = secret_hash.to_be_bytes();\n\n    for i in 0..32 {\n        hash_bytes[i] = sender_bytes[i];\n        hash_bytes[i + 32] = chain_id_bytes[i];\n        hash_bytes[i + 64] = recipient_bytes[i];\n        hash_bytes[i + 96] = version_bytes[i];\n        hash_bytes[i + 128] = content_bytes[i];\n        hash_bytes[i + 160] = secret_hash_bytes[i];\n    }\n\n    sha256_to_field(hash_bytes)\n}\n\n// The nullifier of a l1 to l2 message is the hash of the message salted with the secret and index of the message hash\n// in the L1 to L2 message tree\npub fn compute_message_nullifier(message_hash: Field, secret: Field, leaf_index: Field) -> Field {\n    poseidon2_hash_with_separator(\n        [message_hash, secret, leaf_index],\n        GENERATOR_INDEX__MESSAGE_NULLIFIER\n    )\n}\n\npub struct ArgsHasher {\n    fields: [Field],\n}\n\nimpl Hash for ArgsHasher {\n    fn hash(self) -> Field {\n        hash_args(self.fields)\n    }\n}\n\nimpl ArgsHasher {\n    pub fn new() -> Self {\n        Self { fields: [] }\n    }\n\n    pub fn add(&mut self, field: Field) {\n        self.fields = self.fields.push_back(field);\n    }\n\n    pub fn add_multiple<let N: u32>(&mut self, fields: [Field; N]) {\n        for i in 0..N {\n            self.fields = self.fields.push_back(fields[i]);\n        }\n    }\n}\n\npub fn hash_args_array<let N: u32>(args: [Field; N]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        poseidon2_hash_with_separator(args, GENERATOR_INDEX__FUNCTION_ARGS)\n    }\n}\n\npub fn hash_args(args: [Field]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        poseidon2_hash_with_separator_slice(args, GENERATOR_INDEX__FUNCTION_ARGS)\n    }\n}\n\n#[test]\nunconstrained fn compute_var_args_hash() {\n    let mut input = ArgsHasher::new();\n    for i in 0..100 {\n        input.add(i as Field);\n    }\n    let hash = input.hash();\n    dep::std::println(hash);\n    assert(hash == 0x19b0d74feb06ebde19edd85a28986c97063e84b3b351a8b666c7cac963ce655f);\n}\n\n#[test]\nunconstrained fn compute_unenc_log_hash_array() {\n    let contract_address = AztecAddress::from_field(0x233a3e0df23b2b15b324194cb4a151f26c0b7333250781d34cc269d85dc334c6);\n    let log = [\n        0x20660de09f35f876e3e69d227b2a35166ad05f09d82d06366ec9b6f65a51fec2,\n        0x1b52bfe3b8689761916f76dc3d38aa8810860db325cd39ca611eed980091f01c,\n        0x2e559c4045c378a56ad13b9edb1e8de4e7ad3b3aa35cc7ba9ec77f7a68fa43a4,\n        0x25d0f689c4a4178a29d59306f2675824d19be6d25e44fa03b03f49c263053dd2,\n        0x2d513a722d6f352dc0961f156afdc5e31495b9f0e35cb069261a8e55e2df67fd\n    ];\n    let serialized_log = arr_to_be_bytes_arr(log);\n    let hash = compute_unencrypted_log_hash(contract_address, serialized_log);\n    assert(hash == 0x0095b2d17ab72f4b27a341f7ac63e49ec73935ae8c9181a0ac02023eb12f3284);\n}\n\n#[test]\nunconstrained fn compute_unenc_log_hash_addr() {\n    let contract_address = AztecAddress::from_field(0x233a3e0df23b2b15b324194cb4a151f26c0b7333250781d34cc269d85dc334c6);\n    let log = AztecAddress::from_field(0x26aa302d4715fd8a687453cb26d616b0768027bd54bcae56b09d908ecd9f8303);\n    let serialized_log: [u8; 32] = log.to_field().to_be_bytes();\n    let hash = compute_unencrypted_log_hash(contract_address, serialized_log);\n    assert(hash == 0x0083ab647dfb26e7ddee90a0f4209d049d4660cab42000c544b986aaa84c55a3);\n}\n\n#[test]\nunconstrained fn compute_unenc_log_hash_str() {\n    let contract_address = AztecAddress::from_field(0x1b401e1146c5c507962287065c81f0ef7590adae3802c533d7549d6bf0a41bd8);\n    let log = \"dummy\";\n    let serialized_log = str_to_be_bytes_arr(log);\n    let hash = compute_unencrypted_log_hash(contract_address, serialized_log);\n    assert(hash == 0x00629e88ebd6374f44aa6cfe07e251ecf07213ebc7267e8f6b578ae57ffd6c20);\n}\n\n#[test]\nunconstrained fn compute_unenc_log_hash_longer_str() {\n    let contract_address = AztecAddress::from_field(0x1b401e1146c5c507962287065c81f0ef7590adae3802c533d7549d6bf0a41bd8);\n    let log = \"Hello this is a string\";\n    let serialized_log = str_to_be_bytes_arr(log);\n    let hash = compute_unencrypted_log_hash(contract_address, serialized_log);\n    assert(hash == 0x0098637962f7d34fa202b7ffad8a07a238c5d1fd897b82a108f7f467fa73b841);\n}\n"},"160":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/keys/getters/mod.nr","source":"use dep::protocol_types::address::AztecAddress;\nuse crate::{\n    oracle::{keys::get_public_keys_and_partial_address, key_validation_request::get_key_validation_request},\n    keys::{public_keys::PublicKeys, constants::{NULLIFIER_INDEX, OUTGOING_INDEX}}\n};\n\nmod test;\n\nunconstrained pub fn get_nsk_app(npk_m_hash: Field) -> Field {\n    get_key_validation_request(npk_m_hash, NULLIFIER_INDEX).sk_app\n}\n\n// A helper function that gets app-siloed outgoing viewing key for a given `ovpk_m_hash`. This function is used\n// in unconstrained contexts only - when computing unconstrained note logs. The safe alternative is `request_ovsk_app`\n// function defined on `PrivateContext`.\nunconstrained pub fn get_ovsk_app(ovpk_m_hash: Field) -> Field {\n    get_key_validation_request(ovpk_m_hash, OUTGOING_INDEX).sk_app\n}\n\n// Returns all public keys for a given account, applying proper constraints to the context. We read all\n// keys at once since the constraints for reading them all are actually fewer than if we read them one at a time - any\n// read keys that are not required by the caller can simply be discarded.\npub fn get_public_keys(account: AztecAddress) -> PublicKeys {\n    let (hinted_canonical_public_keys, partial_address) = unsafe {\n        get_public_keys_and_partial_address(account)\n    };\n    assert_eq(\n        account, AztecAddress::compute(hinted_canonical_public_keys.hash(), partial_address), \"Invalid public keys hint for address\"\n    );\n\n    hinted_canonical_public_keys\n}\n"},"170":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/state_vars/shared_mutable/scheduled_value_change.nr","source":"use dep::protocol_types::traits::{Serialize, Deserialize, FromField, ToField};\nuse std::cmp::min;\n\nmod test;\n\n// This data structure is used by SharedMutable to represent a value that changes from `pre` to `post` at some block\n// called the `block_of_change`. The value can only be made to change by scheduling a change event at some future block\n// of change after some minimum delay measured in blocks has elapsed. This means that at any given block number we know\n// both the current value and the smallest block number at which the value might change - this is called the\n// 'block horizon'.\npub struct ScheduledValueChange<T> {\n    pre: T,\n    post: T,\n    // Block at which `post` value is used instead of `pre`\n    block_of_change: u32,\n}\n\nimpl<T> ScheduledValueChange<T> {\n    pub fn new(pre: T, post: T, block_of_change: u32) -> Self {\n        Self { pre, post, block_of_change }\n    }\n\n    /// Returns the value stored in the data structure at a given block. This function can be called both in public\n    /// (where `block_number` is simply the current block number, i.e. the number of the block in which the current\n    /// transaction will be included) and in private (where `block_number` is the historical block number that is used\n    /// to construct the proof).\n    /// Reading in private is only safe if the transaction's `max_block_number` property is set to a value lower or\n    /// equal to the block horizon (see `get_block_horizon()`).\n    pub fn get_current_at(self, block_number: u32) -> T {\n        // The post value becomes the current one at the block of change. This means different things in each realm:\n        // - in public, any transaction that is included in the block of change will use the post value\n        // - in private, any transaction that includes the block of change as part of the historical state will use the\n        //   post value (barring any follow-up changes)\n\n        if block_number < self.block_of_change {\n            self.pre\n        } else {\n            self.post\n        }\n    }\n\n    /// Returns the scheduled change, i.e. the post-change value and the block at which it will become the current\n    /// value. Note that this block may be in the past if the change has already taken place.\n    /// Additionally, further changes might be later scheduled, potentially canceling the one returned by this function.\n    pub fn get_scheduled(self) -> (T, u32) {\n        (self.post, self.block_of_change)\n    }\n\n    /// Returns the largest block number at which the value returned by `get_current_at` is known to remain the current\n    /// value. This value is only meaningful in private when constructing a proof at some `historical_block_number`,\n    /// since due to its asynchronous nature private execution cannot know about any later scheduled changes.\n    /// The caller of this function must know how quickly the value can change due to a scheduled change in the form of\n    /// `minimum_delay`. If the delay itself is immutable, then this is just its duration. If the delay is mutable\n    /// however, then this value is the 'effective minimum delay' (obtained by calling\n    /// `ScheduledDelayChange.get_effective_minimum_delay_at`), which equals the minimum number of blocks that need to\n    /// elapse from the next block until the value changes, regardless of further delay changes.\n    /// The value returned by `get_current_at` in private when called with a historical block number is only safe to use\n    /// if the transaction's `max_block_number` property is set to a value lower or equal to the block horizon computed\n    /// using the same historical block number.\n    pub fn get_block_horizon(self, historical_block_number: u32, minimum_delay: u32) -> u32 {\n        // The block horizon is the very last block in which the current value is known. Any block past the horizon\n        // (i.e. with a block number larger than the block horizon) may have a different current value. Reading the\n        // current value in private typically requires constraining the maximum valid block number to be equal to the\n        // block horizon.\n\n        if historical_block_number >= self.block_of_change {\n            // Once the block of change has been mined, the current value (post) will not change unless a new value\n            // change is scheduled. This did not happen at the historical block number (or else it would not be\n            // greater or equal to the block of change), and therefore could only happen after the historical block\n            // number. The earliest would be the immediate next block, and so the smallest possible next block of change\n            // equals `historical_block_number + 1 + minimum_delay`. Our block horizon is simply the previous block to\n            // that one.\n            //\n            //      block of      historical\n            //       change         block            block horizon\n            //   =======|=============N===================H===========>\n            //                         ^                   ^\n            //                         ---------------------\n            //                             minimum delay\n\n            historical_block_number + minimum_delay\n        } else {\n            // If the block of change has not yet been mined however, then there are two possible scenarios.\n            //   a) It could be so far into the future that the block horizon is actually determined by the minimum\n            //      delay, because a new change could be scheduled and take place _before_ the currently scheduled one.\n            //      This is similar to the scenario where the block of change is in the past: the time horizon is the\n            //      block prior to the earliest one in which a new block of change might land.\n            //\n            //         historical\n            //           block                        block horizon      block of change\n            //        =====N=================================H=================|=========>\n            //              ^                                 ^\n            //              |                                 |\n            //              -----------------------------------\n            //                        minimum delay\n            //\n            //   b) It could be fewer than `minimum_delay` blocks away from the historical block number, in which case\n            //      the block of change would become the limiting factor for the time horizon, which would equal the\n            //      block right before the block of change (since by definition the value changes at the block of\n            //      change).\n            //\n            //           historical                         block horizon\n            //             block     block of change       if not scheduled\n            //        =======N=============|===================H=================>\n            //                ^           ^                     ^\n            //                |     actual horizon              |\n            //                -----------------------------------\n            //                          minimum delay\n            //\n            // Note that the current implementation does not allow the caller to set the block of change to an arbitrary\n            // value, and therefore scenario a) is not currently possible. However implementing #5501 would allow for\n            // this to happen.\n\n            // Because historical_block_number < self.block_of_change, then block_of_change > 0 and we can safely\n            // subtract 1.\n            min(\n                self.block_of_change - 1,\n                historical_block_number + minimum_delay\n            )\n        }\n    }\n\n    /// Mutates the value by scheduling a change at the current block number. This function is only meaningful when\n    /// called in public with the current block number.\n    pub fn schedule_change(\n        &mut self,\n        new_value: T,\n        current_block_number: u32,\n        minimum_delay: u32,\n        block_of_change: u32\n    ) {\n        assert(block_of_change >= current_block_number + minimum_delay);\n\n        self.pre = self.get_current_at(current_block_number);\n        self.post = new_value;\n        self.block_of_change = block_of_change;\n    }\n}\n\nimpl<T> Serialize<3> for ScheduledValueChange<T> where T: ToField {\n    fn serialize(self) -> [Field; 3] {\n        [self.pre.to_field(), self.post.to_field(), self.block_of_change.to_field()]\n    }\n}\n\nimpl<T> Deserialize<3> for ScheduledValueChange<T> where T: FromField {\n    fn deserialize(input: [Field; 3]) -> Self {\n        Self {\n            pre: FromField::from_field(input[0]),\n            post: FromField::from_field(input[1]),\n            block_of_change: FromField::from_field(input[2])\n        }\n    }\n}\n\nimpl<T> Eq for ScheduledValueChange<T> where T: Eq {\n    fn eq(self, other: Self) -> bool {\n        (self.pre == other.pre)\n            & (self.post == other.post)\n            & (self.block_of_change == other.block_of_change)\n    }\n}\n"},"171":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/state_vars/shared_mutable/scheduled_delay_change.nr","source":"use dep::protocol_types::traits::{Serialize, Deserialize};\nuse std::cmp::min;\n\nmod test;\n\n// This data structure is used by SharedMutable to store the minimum delay with which a ScheduledValueChange object can\n// schedule a change.\n// This delay is initally equal to INITIAL_DELAY, and can be safely mutated to any other value over time. This mutation\n// is performed via `schedule_change` in order to satisfy ScheduleValueChange constraints: if e.g. we allowed for the\n// delay to be decreased immediately then it'd be possible for the state variable to schedule a value change with a\n// reduced delay, invalidating prior private reads.\npub struct ScheduledDelayChange<let INITIAL_DELAY: u32> {\n    // Both pre and post are stored in public storage, so by default they are zeroed. By wrapping them in an Option,\n    // they default to Option::none(), which we detect and replace with INITIAL_DELAY. The end result is that a\n    // ScheduledDelayChange that has not been initialized has a delay equal to INITIAL_DELAY, which is the desired\n    // effect. Once initialized, the Option will never be none again.\n    pre: Option<u32>,\n    post: Option<u32>,\n    // Block at which `post` value is used instead of `pre`\n    block_of_change: u32,\n}\n\nimpl<let INITIAL_DELAY: u32> ScheduledDelayChange<INITIAL_DELAY> {\n    pub fn new(pre: Option<u32>, post: Option<u32>, block_of_change: u32) -> Self {\n        Self { pre, post, block_of_change }\n    }\n\n    /// Returns the current value of the delay stored in the data structure.\n    /// This function only returns a meaningful value when called in public with the current block number - for\n    /// historical private reads use `get_effective_minimum_delay_at` instead.\n    pub fn get_current(self, current_block_number: u32) -> u32 {\n        // The post value becomes the current one at the block of change, so any transaction that is included in the\n        // block of change will use the post value.\n\n        if current_block_number < self.block_of_change {\n            self.pre.unwrap_or(INITIAL_DELAY)\n        } else {\n            self.post.unwrap_or(INITIAL_DELAY)\n        }\n    }\n\n    /// Returns the scheduled change, i.e. the post-change delay and the block at which it will become the current\n    /// delay. Note that this block may be in the past if the change has already taken place.\n    /// Additionally, further changes might be later scheduled, potentially canceling the one returned by this function.\n    pub fn get_scheduled(self) -> (u32, u32) {\n        (self.post.unwrap_or(INITIAL_DELAY), self.block_of_change)\n    }\n\n    /// Mutates the delay change by scheduling a change at the current block number. This function is only meaningful\n    /// when called in public with the current block number.\n    /// The block at which the new delay will become effective is determined automatically:\n    ///  - when increasing the delay, the change is effective immediately\n    ///  - when reducing the delay, the change will take effect after a delay equal to the difference between old and\n    ///    new delay. For example, if reducing from 3 days to 1 day, the reduction will be scheduled to happen after 2\n    ///    days.\n    pub fn schedule_change(&mut self, new: u32, current_block_number: u32) {\n        let current = self.get_current(current_block_number);\n\n        // When changing the delay value we must ensure that it is not possible to produce a value change with a delay\n        // shorter than the current one.\n        let blocks_until_change = if new > current {\n            // Increasing the delay value can therefore be done immediately: this does not invalidate prior contraints\n            // about how quickly a value might be changed (indeed it strengthens them).\n            0\n        } else {\n            // Decreasing the delay requires waiting for the difference between current and new delay in order to ensure\n            // that overall the current delay is respected.\n            //\n            //      current                    delay              earliest value block of change\n            //       block                 block of change         if delay remained unchanged\n            //  =======N=========================|================================X=================>\n            //         ^                         ^                                ^\n            //         |-------------------------|--------------------------------|\n            //         |   blocks until change               new delay            |\n            //         ------------------------------------------------------------\n            //                            current delay\n            current - new\n        };\n\n        self.pre = Option::some(current);\n        self.post = Option::some(new);\n        self.block_of_change = current_block_number + blocks_until_change;\n    }\n\n    /// Returns the minimum delay before a value might mutate due to a scheduled change, from the perspective of some\n    /// historical block number. It only returns a meaningful value when called in private with historical blocks. This\n    /// function can be used alongside `ScheduledValueChange.get_block_horizon` to properly constrain the\n    /// `max_block_number` transaction property when reading mutable shared state.\n    /// This value typically equals the current delay at the block following the historical one (the earliest one in\n    /// which a value change could be scheduled), but it also considers scenarios in which a delay reduction is\n    /// scheduled to happen in the near future, resulting in a way to schedule a change with an overall delay lower than\n    /// the current one.\n    pub fn get_effective_minimum_delay_at(self, historical_block_number: u32) -> u32 {\n        if self.block_of_change <= historical_block_number {\n            // If no delay changes were scheduled, then the delay value at the historical block (post) is guaranteed to\n            // hold due to how further delay changes would be scheduled by `schedule_change`.\n            self.post.unwrap_or(INITIAL_DELAY)\n        } else {\n            // If a change is scheduled, then the effective delay might be lower than the current one (pre). At the\n            // block of change the current delay will be the scheduled one, with an overall delay from the historical\n            // block number equal to the number of blocks until the change plus the new delay. If this value is lower\n            // than the current delay, then that is the effective minimum delay.\n            //\n            //       historical\n            //         block                  delay                  actual earliest value\n            //           v                block of change              block of change\n            //  =========NS=====================|=============================X===========Y=====>\n            //            ^                     ^                             ^           ^\n            //     earliest block in            |                             |           |\n            //   which to schedule change       |                             |           |\n            //           |                      |                             |           |\n            //           |----------------------|------------------------------           |\n            //           |         blocks                  new delay                      |\n            //           |      until change                                              |\n            //           |                                                                |\n            //           |----------------------------------------------------------------|\n            //                        current delay at the earliest block in\n            //                             which to scheduled value change\n\n            let blocks_until_change = self.block_of_change - (historical_block_number + 1);\n\n            min(\n                self.pre.unwrap_or(INITIAL_DELAY),\n                blocks_until_change + self.post.unwrap_or(INITIAL_DELAY)\n            )\n        }\n    }\n}\n\nimpl<let INITIAL_DELAY: u32> Serialize<1> for ScheduledDelayChange<INITIAL_DELAY> {\n    fn serialize(self) -> [Field; 1] {\n        // We pack all three u32 values into a single U128, which is made up of two u64 limbs.\n        // Low limb: [ pre_inner: u32 | post_inner: u32 ]\n        // High limb: [ empty | pre_is_some: u8 |  post_is_some: u8 | block_of_change: u32 ]\n\n        let lo = ((self.pre.unwrap_unchecked() as u64) * (1 << 32)) + (self.post.unwrap_unchecked() as u64);\n\n        let hi = (self.pre.is_some() as u64) * (1 << 33)\n            + (self.post.is_some() as u64 * (1 << 32))\n            + self.block_of_change as u64;\n\n        let packed = U128::from_u64s_le(lo, hi);\n\n        [packed.to_integer()]\n    }\n}\n\nimpl<let INITIAL_DELAY: u32> Deserialize<1> for ScheduledDelayChange<INITIAL_DELAY> {\n    fn deserialize(input: [Field; 1]) -> Self {\n        let packed = U128::from_integer(input[0]);\n\n        // We use division and modulo to clear the bits that correspond to other values when unpacking.\n\n        let pre_is_some = ((packed.hi as u64) / (1 << 33)) as bool;\n        let pre_inner = ((packed.lo as u64) / (1 << 32)) as u32;\n\n        let post_is_some = (((packed.hi as u64) / (1 << 32)) % (1 << 1)) as bool;\n        let post_inner = ((packed.lo as u64) % (1 << 32)) as u32;\n\n        let block_of_change = ((packed.hi as u64) % (1 << 32)) as u32;\n\n        Self {\n            pre: if pre_is_some {\n                Option::some(pre_inner)\n            } else {\n                Option::none()\n            },\n            post: if post_is_some {\n                Option::some(post_inner)\n            } else {\n                Option::none()\n            },\n            block_of_change\n        }\n    }\n}\n\nimpl<let INITIAL_DELAY: u32> Eq for ScheduledDelayChange<INITIAL_DELAY> {\n    fn eq(self, other: Self) -> bool {\n        (self.pre == other.pre)\n            & (self.post == other.post)\n            & (self.block_of_change == other.block_of_change)\n    }\n}\n"},"175":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/state_vars/shared_mutable/shared_mutable.nr","source":"use dep::protocol_types::{\n    hash::{poseidon2_hash, poseidon2_hash_with_separator}, address::AztecAddress,\n    traits::{FromField, ToField}, utils::arrays::array_concat\n};\n\nuse crate::context::{PrivateContext, PublicContext, UnconstrainedContext};\nuse crate::state_vars::{\n    storage::Storage,\n    shared_mutable::{scheduled_value_change::ScheduledValueChange, scheduled_delay_change::ScheduledDelayChange}\n};\nuse crate::oracle::storage::storage_read;\nuse dep::std::mem::zeroed;\n\nmod test;\n\npub struct SharedMutable<T, let INITIAL_DELAY: u32, Context> {\n    context: Context,\n    storage_slot: Field,\n}\n\n// Separators separating storage slot of different values within the same state variable\nglobal VALUE_CHANGE_SEPARATOR: u32 = 0;\nglobal DELAY_CHANGE_SEPARATOR: u32 = 1;\nglobal HASH_SEPARATOR: u32 = 2;\n\n// This will make the Aztec macros require that T implements the Serialize<N> trait, and allocate N storage slots to\n// this state variable. This is incorrect, since what we actually store is:\n//  - a ScheduledValueChange<T>, which requires 1 + 2 * M storage slots, where M is the serialization length of T\n//  - a ScheduledDelayChange, which requires another storage slot\n//\n// TODO https://github.com/AztecProtocol/aztec-packages/issues/5736: change the storage allocation scheme so that we\n// can actually use it here\nimpl<T, let INITIAL_DELAY: u32, Context> Storage<T> for SharedMutable<T, INITIAL_DELAY, Context> {}\n\n// SharedMutable<T> stores a value of type T that is:\n//  - publicly known (i.e. unencrypted)\n//  - mutable in public\n//  - readable in private with no contention (i.e. multiple parties can all read the same value without blocking one\n//    another nor needing to coordinate)\n// This is famously a hard problem to solve. SharedMutable makes it work by introducing a delay to public mutation:\n// the value is not changed immediately but rather a value change is scheduled to happen in the future after some delay\n// measured in blocks. Reads in private are only valid as long as they are included in a block not too far into the\n// future, so that they can guarantee the value will not have possibly changed by then (because of the delay).\n// The delay for changing a value is initially equal to INITIAL_DELAY, but can be changed by calling\n// `schedule_delay_change`.\nimpl<T, let INITIAL_DELAY: u32, Context> SharedMutable<T, INITIAL_DELAY, Context> where T: ToField + FromField + Eq {\n    pub fn new(context: Context, storage_slot: Field) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Self { context, storage_slot }\n    }\n\n    // Since we can't rely on the native storage allocation scheme, we hash the storage slot to get a unique location in\n    // which we can safely store as much data as we need.\n    // See https://github.com/AztecProtocol/aztec-packages/issues/5492 and\n    // https://github.com/AztecProtocol/aztec-packages/issues/5736\n    // We store three things in public storage:\n    //  - a ScheduledValueChange\n    //  - a ScheduledDelaChange\n    //  - the hash of both of these (via `hash_scheduled_data`)\n    fn get_value_change_storage_slot(self) -> Field {\n        poseidon2_hash_with_separator([self.storage_slot], VALUE_CHANGE_SEPARATOR)\n    }\n\n    fn get_delay_change_storage_slot(self) -> Field {\n        poseidon2_hash_with_separator([self.storage_slot], DELAY_CHANGE_SEPARATOR)\n    }\n\n    fn get_hash_storage_slot(self) -> Field {\n        poseidon2_hash_with_separator([self.storage_slot], HASH_SEPARATOR)\n    }\n}\n\nimpl<T, let INITIAL_DELAY: u32> SharedMutable<T, INITIAL_DELAY, &mut PublicContext> where T: ToField + FromField + Eq {\n\n    pub fn schedule_value_change(self, new_value: T) {\n        let mut value_change = self.read_value_change();\n        let delay_change = self.read_delay_change();\n\n        let block_number = self.context.block_number() as u32;\n        let current_delay = delay_change.get_current(block_number);\n\n        // TODO: make this configurable\n        // https://github.com/AztecProtocol/aztec-packages/issues/5501\n        let block_of_change = block_number + current_delay;\n        value_change.schedule_change(new_value, block_number, current_delay, block_of_change);\n\n        self.write(value_change, delay_change);\n    }\n\n    pub fn schedule_delay_change(self, new_delay: u32) {\n        let mut delay_change = self.read_delay_change();\n\n        let block_number = self.context.block_number() as u32;\n\n        delay_change.schedule_change(new_delay, block_number);\n\n        self.write(self.read_value_change(), delay_change);\n    }\n\n    pub fn get_current_value_in_public(self) -> T {\n        let block_number = self.context.block_number() as u32;\n        self.read_value_change().get_current_at(block_number)\n    }\n\n    pub fn get_current_delay_in_public(self) -> u32 {\n        let block_number = self.context.block_number() as u32;\n        self.read_delay_change().get_current(block_number)\n    }\n\n    pub fn get_scheduled_value_in_public(self) -> (T, u32) {\n        self.read_value_change().get_scheduled()\n    }\n\n    pub fn get_scheduled_delay_in_public(self) -> (u32, u32) {\n        self.read_delay_change().get_scheduled()\n    }\n\n    fn read_value_change(self) -> ScheduledValueChange<T> {\n        self.context.storage_read(self.get_value_change_storage_slot())\n    }\n\n    fn read_delay_change(self) -> ScheduledDelayChange<INITIAL_DELAY> {\n        self.context.storage_read(self.get_delay_change_storage_slot())\n    }\n\n    fn write(\n        self,\n        value_change: ScheduledValueChange<T>,\n        delay_change: ScheduledDelayChange<INITIAL_DELAY>\n    ) {\n        // Whenever we write to public storage, we write both the value change and delay change as well as the hash of\n        // them both. This guarantees that the hash is always kept up to date.\n        // While this makes for more costly writes, it also makes private proofs much simpler because they only need to\n        // produce a historical proof for the hash, which results in a single inclusion proof (as opposed to 4 in the\n        // best case scenario in which T is a single field). Private shared mutable reads are assumed to be much more\n        // frequent than public writes, so this tradeoff makes sense.\n        self.context.storage_write(self.get_value_change_storage_slot(), value_change);\n        self.context.storage_write(self.get_delay_change_storage_slot(), delay_change);\n        self.context.storage_write(\n            self.get_hash_storage_slot(),\n            SharedMutable::hash_scheduled_data(value_change, delay_change)\n        );\n    }\n}\n\nimpl<T, let INITIAL_DELAY: u32> SharedMutable<T, INITIAL_DELAY, &mut PrivateContext> where T: ToField + FromField + Eq {\n    pub fn get_current_value_in_private(self) -> T {\n        // When reading the current value in private we construct a historical state proof for the public value.\n        // However, since this value might change, we must constrain the maximum transaction block number as this proof\n        // will only be valid for however many blocks we can ensure the value will not change, which will depend on the\n        // current delay and any scheduled delay changes.\n\n        let (value_change, delay_change, historical_block_number) = self.historical_read_from_public_storage();\n\n        // We use the effective minimum delay as opposed to the current delay at the historical block as this one also\n        // takes into consideration any scheduled delay changes.\n        // For example, consider a scenario in which at block 200 the current delay was 50. We may naively think that\n        // the earliest we could change the value would be at block 251 by scheduling immediately after the historical\n        // block, i.e. at block 201. But if there was a delay change scheduled for block 210 to reduce the delay to 20\n        // blocks, then if a value change was scheduled at block 210 it would go into effect at block 230, which is\n        // earlier than what we'd expect if we only considered the current delay.\n        let effective_minimum_delay = delay_change.get_effective_minimum_delay_at(historical_block_number);\n        let block_horizon = value_change.get_block_horizon(historical_block_number, effective_minimum_delay);\n\n        // We prevent this transaction from being included in any block after the block horizon, ensuring that the\n        // historical public value matches the current one, since it can only change after the horizon.\n        self.context.set_tx_max_block_number(block_horizon);\n        value_change.get_current_at(historical_block_number)\n    }\n\n    fn historical_read_from_public_storage(self) -> (ScheduledValueChange<T>, ScheduledDelayChange<INITIAL_DELAY>, u32) {\n        let header = self.context.get_header();\n        let address = self.context.this_address();\n\n        let historical_block_number = header.global_variables.block_number as u32;\n\n        // We could simply produce historical inclusion proofs for both the ScheduledValueChange and\n        // ScheduledDelayChange, but that'd require one full sibling path per storage slot (since due to kernel siloing\n        // the storage is not contiguous), and in the best case in which T is a single field that'd be 4 slots.\n        // Instead, we get an oracle to provide us the correct values for both the value and delay changes, and instead\n        // prove inclusion of their hash, which is both a much smaller proof (a single slot), and also independent of\n        // the size of T.\n        let (value_change_hint, delay_change_hint) = unsafe {\n            get_public_storage_hints(address, self.storage_slot, historical_block_number)\n        };\n\n        // Ideally the following would be simply public_storage::read_historical, but we can't implement that yet.\n        let hash = header.public_storage_historical_read(self.get_hash_storage_slot(), address);\n\n        if hash != 0 {\n            assert_eq(\n                hash, SharedMutable::hash_scheduled_data(value_change_hint, delay_change_hint), \"Hint values do not match hash\"\n            );\n        } else {\n            // The hash slot can only hold a zero if it is uninitialized, meaning no value or delay change was ever\n            // scheduled. Therefore, the hints must then correspond to uninitialized scheduled changes.\n            assert_eq(\n                value_change_hint, ScheduledValueChange::deserialize(zeroed()), \"Non-zero value change for zero hash\"\n            );\n            assert_eq(\n                delay_change_hint, ScheduledDelayChange::deserialize(zeroed()), \"Non-zero delay change for zero hash\"\n            );\n        };\n\n        (value_change_hint, delay_change_hint, historical_block_number)\n    }\n\n    fn hash_scheduled_data(\n        value_change: ScheduledValueChange<T>,\n        delay_change: ScheduledDelayChange<INITIAL_DELAY>\n    ) -> Field {\n        let concatenated: [Field; 4] = array_concat(value_change.serialize(), delay_change.serialize());\n        poseidon2_hash(concatenated)\n    }\n}\n\nimpl<T, let INITIAL_DELAY: u32> SharedMutable<T, INITIAL_DELAY, UnconstrainedContext> where T: ToField + FromField + Eq {\n    unconstrained pub fn get_current_value_in_unconstrained(self) -> T {\n        let block_number = self.context.block_number() as u32;\n        self.read_value_change().get_current_at(block_number)\n    }\n\n    unconstrained fn read_value_change(self) -> ScheduledValueChange<T> {\n        self.context.storage_read(self.get_value_change_storage_slot())\n    }\n}\n\nunconstrained fn get_public_storage_hints<T, let INITIAL_DELAY: u32>(\n    address: AztecAddress,\n    storage_slot: Field,\n    block_number: u32\n) -> (ScheduledValueChange<T>, ScheduledDelayChange<INITIAL_DELAY>) where T: ToField + FromField + Eq {\n    // This function cannot be part of the &mut PrivateContext impl because that'd mean that by passing `self` we'd also\n    // be passing a mutable reference to an unconstrained function, which is not allowed. We therefore create a dummy\n    // state variable here so that we can access the methods to compute storage slots. This will all be removed in the\n    // future once we do proper storage slot allocation (#5492).\n    let dummy: SharedMutable<T, INITIAL_DELAY, ()> = SharedMutable::new((), storage_slot);\n\n    (\n        storage_read(address, dummy.get_value_change_storage_slot(), block_number), storage_read(address, dummy.get_delay_change_storage_slot(), block_number)\n    )\n}\n"},"177":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/state_vars/public_mutable.nr","source":"use crate::context::{PublicContext, UnconstrainedContext};\nuse dep::protocol_types::traits::{Deserialize, Serialize};\nuse crate::state_vars::storage::Storage;\n\n// docs:start:public_mutable_struct\npub struct PublicMutable<T, Context> {\n    context: Context,\n    storage_slot: Field,\n}\n// docs:end:public_mutable_struct\n\nimpl<T, Context> Storage<T> for PublicMutable<T, Context> {}\n\nimpl<T, Context> PublicMutable<T, Context> {\n    // docs:start:public_mutable_struct_new\n    pub fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        context: Context,\n        storage_slot: Field\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PublicMutable { context, storage_slot }\n    }\n    // docs:end:public_mutable_struct_new\n}\n\nimpl<T, let T_SERIALIZED_LEN: u32> PublicMutable<T, &mut PublicContext> where T: Serialize<T_SERIALIZED_LEN> + Deserialize<T_SERIALIZED_LEN> {\n    // docs:start:public_mutable_struct_read\n    pub fn read(self) -> T {\n        self.context.storage_read(self.storage_slot)\n    }\n    // docs:end:public_mutable_struct_read\n\n    // docs:start:public_mutable_struct_write\n    pub fn write(self, value: T) {\n        self.context.storage_write(self.storage_slot, value);\n    }\n    // docs:end:public_mutable_struct_write\n}\n\nimpl<T, let T_SERIALIZED_LEN: u32> PublicMutable<T, UnconstrainedContext> where T: Deserialize<T_SERIALIZED_LEN> {\n    unconstrained pub fn read(self) -> T {\n        self.context.storage_read(self.storage_slot)\n    }\n}\n"},"222":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/abis/validation_requests/key_validation_request.nr","source":"use crate::{traits::{Empty, Serialize, Deserialize}, point::Point};\npub use crate::constants::KEY_VALIDATION_REQUEST_LENGTH;\n\npub struct KeyValidationRequest {\n    pk_m: Point,\n    sk_app: Field, // not a grumpkin scalar because it's output of poseidon2\n}\n\nimpl Eq for KeyValidationRequest {\n    fn eq(self, request: KeyValidationRequest) -> bool {\n        (request.pk_m.eq(self.pk_m)) & (request.sk_app.eq(self.sk_app))\n    }\n}\n\nimpl Empty for KeyValidationRequest {\n    fn empty() -> Self {\n        KeyValidationRequest { pk_m: Point::empty(), sk_app: 0 }\n    }\n}\n\nimpl Serialize<KEY_VALIDATION_REQUEST_LENGTH> for KeyValidationRequest {\n    fn serialize(self) -> [Field; KEY_VALIDATION_REQUEST_LENGTH] {\n        [\n            self.pk_m.x,\n            self.pk_m.y,\n            self.pk_m.is_infinite as Field,\n            self.sk_app\n        ]\n    }\n}\n\nimpl Deserialize<KEY_VALIDATION_REQUEST_LENGTH> for KeyValidationRequest {\n    fn deserialize(fields: [Field; KEY_VALIDATION_REQUEST_LENGTH]) -> Self {\n        Self { pk_m: Point { x: fields[0], y: fields[1], is_infinite: fields[2] as bool }, sk_app: fields[3] }\n    }\n}\n"},"231":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/abis/function_selector.nr","source":"use crate::utils::field::field_from_bytes;\nuse crate::traits::{Serialize, Deserialize, FromField, ToField, Empty};\n\nglobal SELECTOR_SIZE: u32 = 4;\n\npub struct FunctionSelector {\n    // 1st 4-bytes of abi-encoding of function.\n    inner: u32,\n}\n\nimpl Eq for FunctionSelector {\n    fn eq(self, function_selector: FunctionSelector) -> bool {\n        function_selector.inner == self.inner\n    }\n}\n\nimpl Serialize<1> for FunctionSelector {\n    fn serialize(self: Self) -> [Field; 1] {\n        [self.inner as Field]\n    }\n}\n\nimpl Deserialize<1> for FunctionSelector {\n    fn deserialize(fields: [Field; 1]) -> Self {\n        Self { inner: fields[0] as u32 }\n    }\n}\n\nimpl FromField for FunctionSelector {\n    fn from_field(field: Field) -> Self {\n        Self { inner: field as u32 }\n    }\n}\n\nimpl ToField for FunctionSelector {\n    fn to_field(self) -> Field {\n        self.inner as Field\n    }\n}\n\nimpl Empty for FunctionSelector {\n    fn empty() -> Self {\n        Self { inner: 0 as u32 }\n    }\n}\n\nimpl FunctionSelector {\n    pub fn from_u32(value: u32) -> Self {\n        Self { inner: value }\n    }\n\n    pub fn from_signature<let N: u32>(signature: str<N>) -> Self {\n        let bytes = signature.as_bytes();\n        let hash = crate::hash::poseidon2_hash_bytes(bytes);\n\n        // We choose the last SELECTOR_SIZE bytes of the hash to avoid getting the first byte that is not full\n        let hash_bytes = hash.to_be_bytes::<SELECTOR_SIZE>();\n\n        FunctionSelector::from_field(field_from_bytes(hash_bytes, true))\n    }\n\n    pub fn zero() -> Self {\n        Self { inner: 0 }\n    }\n}\n\n#[test]\nfn test_is_valid_selector() {\n    let selector = FunctionSelector::from_signature(\"IS_VALID()\");\n    assert_eq(selector.to_field(), 0x73cdda47);\n}\n\n#[test]\nfn test_long_selector() {\n    let selector = FunctionSelector::from_signature(\"foo_and_bar_and_baz_and_foo_bar_baz_and_bar_foo\");\n    assert_eq(selector.to_field(), 0x7590a997);\n}\n"},"24":{"path":"std/embedded_curve_ops.nr","source":"use crate::ops::arith::{Add, Sub, Neg};\nuse crate::cmp::Eq;\n\n/// A point on the embedded elliptic curve\n/// By definition, the base field of the embedded curve is the scalar field of the proof system curve, i.e the Noir Field.\n/// x and y denotes the Weierstrass coordinates of the point, if is_infinite is false.\npub struct EmbeddedCurvePoint {\n    x: Field,\n    y: Field,\n    is_infinite: bool\n}\n\nimpl EmbeddedCurvePoint {\n    /// Elliptic curve point doubling operation\n    /// returns the doubled point of a point P, i.e P+P\n    pub fn double(self) -> EmbeddedCurvePoint {\n        embedded_curve_add(self, self)\n    }\n\n    /// Returns the null element of the curve; 'the point at infinity'\n    pub fn point_at_infinity() -> EmbeddedCurvePoint {\n        EmbeddedCurvePoint { x: 0, y: 0, is_infinite: true }\n    }\n}\n\nimpl Add for EmbeddedCurvePoint {\n    /// Adds two points P+Q, using the curve addition formula, and also handles point at infinity\n    fn add(self, other: EmbeddedCurvePoint) -> EmbeddedCurvePoint {\n        embedded_curve_add(self, other)\n    }\n}\n\nimpl Sub for EmbeddedCurvePoint {\n    /// Points subtraction operation, using addition and negation\n    fn sub(self, other: EmbeddedCurvePoint) -> EmbeddedCurvePoint {\n        self + other.neg()\n    }\n}\n\nimpl Neg for EmbeddedCurvePoint {\n    /// Negates a point P, i.e returns -P, by negating the y coordinate.\n    /// If the point is at infinity, then the result is also at infinity.\n    fn neg(self) -> EmbeddedCurvePoint {\n        EmbeddedCurvePoint { x: self.x, y: -self.y, is_infinite: self.is_infinite }\n    }\n}\n\nimpl Eq for EmbeddedCurvePoint {\n    /// Checks whether two points are equal\n    fn eq(self: Self, b: EmbeddedCurvePoint) -> bool {\n        (self.is_infinite & b.is_infinite)\n            | ((self.is_infinite == b.is_infinite) & (self.x == b.x) & (self.y == b.y))\n    }\n}\n\n/// Scalar for the embedded curve represented as low and high limbs\n/// By definition, the scalar field of the embedded curve is base field of the proving system curve.\n/// It may not fit into a Field element, so it is represented with two Field elements; its low and high limbs.\npub struct EmbeddedCurveScalar {\n    lo: Field,\n    hi: Field,\n}\n\nimpl EmbeddedCurveScalar {\n    pub fn new(lo: Field, hi: Field) -> Self {\n        EmbeddedCurveScalar { lo, hi }\n    }\n\n    #[field(bn254)]\n    pub fn from_field(scalar: Field) -> EmbeddedCurveScalar {\n        let (a,b) = crate::field::bn254::decompose(scalar);\n        EmbeddedCurveScalar { lo: a, hi: b }\n    }\n\n    //Bytes to scalar: take the first (after the specified offset) 16 bytes of the input as the lo value, and the next 16 bytes as the hi value\n    #[field(bn254)]\n    pub(crate) fn from_bytes(bytes: [u8; 64], offset: u32) -> EmbeddedCurveScalar {\n        let mut v = 1;\n        let mut lo = 0 as Field;\n        let mut hi = 0 as Field;\n        for i in 0..16 {\n            lo = lo + (bytes[offset+31 - i] as Field) * v;\n            hi = hi + (bytes[offset+15 - i] as Field) * v;\n            v = v * 256;\n        }\n        let sig_s = crate::embedded_curve_ops::EmbeddedCurveScalar { lo, hi };\n        sig_s\n    }\n}\n\nimpl Eq for EmbeddedCurveScalar {\n    fn eq(self, other: Self) -> bool {\n        (other.hi == self.hi) & (other.lo == self.lo)\n    }\n}\n\n// Computes a multi scalar multiplication over the embedded curve.\n// For bn254, We have Grumpkin and Baby JubJub.\n// For bls12-381, we have JubJub and Bandersnatch.\n//\n// The embedded curve being used is decided by the \n// underlying proof system.\n// docs:start:multi_scalar_mul\npub fn multi_scalar_mul<let N: u32>(\n    points: [EmbeddedCurvePoint; N],\n    scalars: [EmbeddedCurveScalar; N]\n) -> EmbeddedCurvePoint\n// docs:end:multi_scalar_mul\n{\n    let point_array = multi_scalar_mul_array_return(points, scalars);\n    EmbeddedCurvePoint { x: point_array[0], y: point_array[1], is_infinite: point_array[2] as bool }\n}\n\n#[foreign(multi_scalar_mul)]\nfn multi_scalar_mul_array_return<let N: u32>(points: [EmbeddedCurvePoint; N], scalars: [EmbeddedCurveScalar; N]) -> [Field; 3] {}\n\n#[foreign(multi_scalar_mul)]\npub(crate) fn multi_scalar_mul_slice(points: [EmbeddedCurvePoint], scalars: [EmbeddedCurveScalar]) -> [Field; 3] {}\n\n// docs:start:fixed_base_scalar_mul\npub fn fixed_base_scalar_mul(scalar: EmbeddedCurveScalar) -> EmbeddedCurvePoint\n// docs:end:fixed_base_scalar_mul\n{\n    let g1 = EmbeddedCurvePoint { x: 1, y: 17631683881184975370165255887551781615748388533673675138860, is_infinite: false };\n    multi_scalar_mul([g1], [scalar])\n}\n\n/// This function only assumes that the points are on the curve\n/// It handles corner cases around the infinity point causing some overhead compared to embedded_curve_add_not_nul and embedded_curve_add_unsafe\n// This is a hack because returning an `EmbeddedCurvePoint` from a foreign function in brillig returns a [BrilligVariable::SingleAddr; 2] rather than BrilligVariable::BrilligArray\n// as is defined in the brillig bytecode format. This is a workaround which allows us to fix this without modifying the serialization format.\n// docs:start:embedded_curve_add\npub fn embedded_curve_add(point1: EmbeddedCurvePoint, point2: EmbeddedCurvePoint) -> EmbeddedCurvePoint {\n    // docs:end:embedded_curve_add\n    let x_coordinates_match = point1.x == point2.x;\n    let y_coordinates_match = point1.y == point2.y;\n    let double_predicate = (x_coordinates_match & y_coordinates_match);\n    let infinity_predicate = (x_coordinates_match & !y_coordinates_match);\n    let point1_1 = EmbeddedCurvePoint { x: point1.x + (x_coordinates_match as Field), y: point1.y, is_infinite: x_coordinates_match };\n    // point1_1 is guaranteed to have a different abscissa than point2\n    let mut result = embedded_curve_add_unsafe(point1_1, point2);\n    result.is_infinite = x_coordinates_match;\n\n    // dbl if x_match, y_match\n    let double = embedded_curve_add_unsafe(point1, point1);\n    result = if double_predicate { double } else { result };\n\n    // infinity if x_match, !y_match\n    if point1.is_infinite {\n        result= point2;\n    }\n    if point2.is_infinite {\n        result = point1;\n    }\n    let mut result_is_infinity = infinity_predicate & (!point1.is_infinite & !point2.is_infinite);\n    result.is_infinite = result_is_infinity | (point1.is_infinite & point2.is_infinite);\n    result\n}\n\n#[foreign(embedded_curve_add)]\nfn embedded_curve_add_array_return(_point1: EmbeddedCurvePoint, _point2: EmbeddedCurvePoint) -> [Field; 3] {}\n\n/// This function assumes that:\n/// The points are on the curve, and\n/// The points don't share an x-coordinate, and\n/// Neither point is the infinity point.\n/// If it is used with correct input, the function ensures the correct non-zero result is returned.\n/// Except for points on the curve, the other assumptions are checked by the function. It will cause assertion failure if they are not respected.\npub fn embedded_curve_add_not_nul(point1: EmbeddedCurvePoint, point2: EmbeddedCurvePoint) -> EmbeddedCurvePoint {\n    assert(point1.x != point2.x);\n    assert(!point1.is_infinite);\n    assert(!point2.is_infinite);\n    embedded_curve_add_unsafe(point1, point2)\n}\n\n/// Unsafe ec addition\n/// If the inputs are the same, it will perform a doubling, but only if point1 and point2 are the same variable.\n/// If they have the same value but are different variables, the result will be incorrect because in this case\n/// it assumes (but does not check) that the points' x-coordinates are not equal.\n/// It also assumes neither point is the infinity point.\npub fn embedded_curve_add_unsafe(point1: EmbeddedCurvePoint, point2: EmbeddedCurvePoint) -> EmbeddedCurvePoint {\n    let point_array = embedded_curve_add_array_return(point1, point2);\n    let x = point_array[0];\n    let y = point_array[1];\n\n    EmbeddedCurvePoint { x, y, is_infinite: false }\n}\n"},"25":{"path":"std/field/bn254.nr","source":"use crate::runtime::is_unconstrained;\n\n// The low and high decomposition of the field modulus\nglobal PLO: Field = 53438638232309528389504892708671455233;\nglobal PHI: Field = 64323764613183177041862057485226039389;\n\npub(crate) global TWO_POW_128: Field = 0x100000000000000000000000000000000;\n\n// Decomposes a single field into two 16 byte fields.\nfn compute_decomposition(x: Field) -> (Field, Field) {\n    let x_bytes: [u8; 32] = x.to_le_bytes();\n\n    let mut low: Field = 0;\n    let mut high: Field = 0;\n\n    let mut offset = 1;\n    for i in 0..16 {\n        low += (x_bytes[i] as Field) * offset;\n        high += (x_bytes[i + 16] as Field) * offset;\n        offset *= 256;\n    }\n\n    (low, high)\n}\n\nunconstrained pub(crate) fn decompose_hint(x: Field) -> (Field, Field) {\n    compute_decomposition(x)\n}\n\nfn compute_lt(x: Field, y: Field, num_bytes: u32) -> bool {\n    let x_bytes: [u8; 32] = x.to_le_bytes();\n    let y_bytes: [u8; 32] = y.to_le_bytes();\n    let mut x_is_lt = false;\n    let mut done = false;\n    for i in 0..num_bytes {\n        if (!done) {\n            let x_byte = x_bytes[num_bytes - 1 - i];\n            let y_byte = y_bytes[num_bytes - 1 - i];\n            let bytes_match = x_byte == y_byte;\n            if !bytes_match {\n                x_is_lt = x_byte < y_byte;\n                done = true;\n            }\n        }\n    }\n    x_is_lt\n}\n\nfn compute_lte(x: Field, y: Field, num_bytes: u32) -> bool {\n    if x == y {\n        true\n    } else {\n        compute_lt(x, y, num_bytes)\n    }\n}\n\nunconstrained fn lt_32_hint(x: Field, y: Field) -> bool {\n    compute_lt(x, y, 32)\n}\n\nunconstrained fn lte_16_hint(x: Field, y: Field) -> bool {\n    compute_lte(x, y, 16)\n}\n\n// Assert that (alo > blo && ahi >= bhi) || (alo <= blo && ahi > bhi)\nfn assert_gt_limbs(a: (Field, Field), b: (Field, Field)) {\n    let (alo, ahi) = a;\n    let (blo, bhi) = b;\n    unsafe {\n        let borrow = lte_16_hint(alo, blo);\n\n        let rlo = alo - blo - 1 + (borrow as Field) * TWO_POW_128;\n        let rhi = ahi - bhi - (borrow as Field);\n\n        rlo.assert_max_bit_size(128);\n        rhi.assert_max_bit_size(128);\n    }\n}\n\n/// Decompose a single field into two 16 byte fields.\npub fn decompose(x: Field) -> (Field, Field) {\n    if is_unconstrained() {\n        compute_decomposition(x)\n    } else {\n        unsafe {\n            // Take hints of the decomposition\n            let (xlo, xhi) = decompose_hint(x);\n\n            // Range check the limbs\n            xlo.assert_max_bit_size(128);\n            xhi.assert_max_bit_size(128);\n\n            // Check that the decomposition is correct\n            assert_eq(x, xlo + TWO_POW_128 * xhi);\n\n            // Assert that the decomposition of P is greater than the decomposition of x\n            assert_gt_limbs((PLO, PHI), (xlo, xhi));\n            (xlo, xhi)\n        }\n    }\n}\n\npub fn assert_gt(a: Field, b: Field) {\n    if is_unconstrained() {\n        assert(compute_lt(b, a, 32));\n    } else {\n        // Decompose a and b\n        let a_limbs = decompose(a);\n        let b_limbs = decompose(b);\n\n        // Assert that a_limbs is greater than b_limbs\n        assert_gt_limbs(a_limbs, b_limbs)\n    }\n}\n\npub fn assert_lt(a: Field, b: Field) {\n    assert_gt(b, a);\n}\n\npub fn gt(a: Field, b: Field) -> bool {\n    if is_unconstrained() {\n        compute_lt(b, a, 32)\n    } else if a == b {\n        false\n    } else {\n        // Take a hint of the comparison and verify it\n        unsafe {\n            if lt_32_hint(a, b) {\n                assert_gt(b, a);\n                false\n            } else {\n                assert_gt(a, b);\n                true\n            }\n        }\n    }\n}\n\npub fn lt(a: Field, b: Field) -> bool {\n    gt(b, a)\n}\n\nmod tests {\n    // TODO: Allow imports from \"super\"\n    use crate::field::bn254::{decompose, compute_lt, assert_gt, gt, TWO_POW_128, compute_lte, PLO, PHI};\n\n    #[test]\n    fn check_decompose() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    unconstrained fn check_decompose_unconstrained() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    fn check_compute_lt() {\n        assert(compute_lt(0, 1, 16));\n        assert(compute_lt(0, 0x100, 16));\n        assert(compute_lt(0x100, TWO_POW_128 - 1, 16));\n        assert(!compute_lt(0, TWO_POW_128, 16));\n    }\n\n    #[test]\n    fn check_compute_lte() {\n        assert(compute_lte(0, 1, 16));\n        assert(compute_lte(0, 0x100, 16));\n        assert(compute_lte(0x100, TWO_POW_128 - 1, 16));\n        assert(!compute_lte(0, TWO_POW_128, 16));\n\n        assert(compute_lte(0, 0, 16));\n        assert(compute_lte(0x100, 0x100, 16));\n        assert(compute_lte(TWO_POW_128 - 1, TWO_POW_128 - 1, 16));\n        assert(compute_lte(TWO_POW_128, TWO_POW_128, 16));\n    }\n\n    #[test]\n    fn check_assert_gt() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    unconstrained fn check_assert_gt_unconstrained() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    fn check_gt() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    unconstrained fn check_gt_unconstrained() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    fn check_plo_phi() {\n        assert_eq(PLO + PHI * TWO_POW_128, 0);\n        let p_bytes = crate::field::modulus_le_bytes();\n        let mut p_low: Field = 0;\n        let mut p_high: Field = 0;\n\n        let mut offset = 1;\n        for i in 0..16 {\n            p_low += (p_bytes[i] as Field) * offset;\n            p_high += (p_bytes[i + 16] as Field) * offset;\n            offset *= 256;\n        }\n        assert_eq(p_low, PLO);\n        assert_eq(p_high, PHI);\n    }\n}\n"},"26":{"path":"std/field/mod.nr","source":"pub mod bn254;\nuse bn254::lt as bn254_lt;\nuse crate::runtime::is_unconstrained;\n\nimpl Field {\n    /// Asserts that `self` can be represented in `bit_size` bits.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^{bit_size}`.\n    // docs:start:assert_max_bit_size\n    pub fn assert_max_bit_size(self, bit_size: u32) {\n        // docs:end:assert_max_bit_size\n        crate::assert_constant(bit_size);\n        assert(bit_size < modulus_num_bits() as u32);\n        self.__assert_max_bit_size(bit_size);\n    }\n\n    #[builtin(apply_range_constraint)]\n    fn __assert_max_bit_size(self, bit_size: u32) {}\n\n    /// Decomposes `self` into its little endian bit decomposition as a `[u1; N]` array.\n    /// This slice will be zero padded should not all bits be necessary to represent `self`.\n    /// \n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n    /// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    #[builtin(to_le_bits)]\n    // docs:start:to_le_bits\n    pub fn to_le_bits<let N: u32>(self: Self) -> [u1; N] {}\n    // docs:end:to_le_bits\n\n    /// Decomposes `self` into its big endian bit decomposition as a `[u1; N]` array.\n    /// This array will be zero padded should not all bits be necessary to represent `self`.\n    /// \n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n    /// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    #[builtin(to_be_bits)]\n     // docs:start:to_be_bits\n    pub fn to_be_bits<let N: u32>(self: Self) -> [u1; N] {}\n    // docs:end:to_be_bits\n\n    /// Decomposes `self` into its little endian byte decomposition as a `[u8;N]` array\n    /// This array will be zero padded should not all bytes be necessary to represent `self`.\n    /// \n    /// # Failures\n    ///  The length N of the array must be big enough to contain all the bytes of the 'self', \n    ///  and no more than the number of bytes required to represent the field modulus\n    ///\n    /// # Safety\n    /// The result is ensured to be the canonical decomposition of the field element\n    // docs:start:to_le_bytes\n    pub fn to_le_bytes<let N: u32>(self: Self) -> [u8; N] {\n        // docs:end:to_le_bytes\n        // Compute the byte decomposition\n        let bytes = self.to_le_radix(256);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let  p = modulus_le_bytes();\n            assert(bytes.len() <= p.len());\n            let mut ok = bytes.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bytes[N - 1 - i] != p[N - 1 - i]) {\n                        assert(bytes[N - 1 - i] < p[N - 1 - i]);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bytes\n    }\n\n    /// Decomposes `self` into its big endian byte decomposition as a `[u8;N]` array of length required to represent the field modulus\n    /// This array will be zero padded should not all bytes be necessary to represent `self`.\n    /// \n    /// # Failures\n    ///  The length N of the array must be big enough to contain all the bytes of the 'self', \n    ///  and no more than the number of bytes required to represent the field modulus\n    ///\n    /// # Safety\n    /// The result is ensured to be the canonical decomposition of the field element\n    // docs:start:to_be_bytes\n    pub fn to_be_bytes<let N: u32>(self: Self) -> [u8; N] {\n        // docs:end:to_be_bytes\n        // Compute the byte decomposition\n        let bytes = self.to_be_radix(256);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let  p = modulus_be_bytes();\n            assert(bytes.len() <= p.len());\n            let mut ok = bytes.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bytes[i] != p[i]) {\n                        assert(bytes[i] < p[i]);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bytes\n    }\n\n    // docs:start:to_le_radix\n    pub fn to_le_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        crate::assert_constant(radix);\n        self.__to_le_radix(radix)\n    }\n    // docs:end:to_le_radix\n\n    // docs:start:to_be_radix\n    pub fn to_be_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        crate::assert_constant(radix);\n        self.__to_be_radix(radix)\n    }\n    // docs:end:to_be_radix\n\n    // `_radix` must be less than 256\n    #[builtin(to_le_radix)]\n    fn __to_le_radix<let N: u32>(self, radix: u32) -> [u8; N] {}\n\n    #[builtin(to_be_radix)]\n    fn __to_be_radix<let N: u32>(self, radix: u32) -> [u8; N] {}\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    pub fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b: [u1; 32] = exponent.to_le_bits();\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32-i] as Field) * (r * self) + (1 - b[32-i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x `elem` {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    pub fn sgn0(self) -> u1 {\n        self as u1\n    }\n\n    pub fn lt(self, another: Field) -> bool {\n        if crate::compat::is_bn254() {\n            bn254_lt(self, another)\n        } else {\n            lt_fallback(self, another)\n        }\n    }\n\n    /// Convert a little endian byte array to a field element.\n    /// If the provided byte array overflows the field modulus then the Field will silently wrap around.\n    pub fn from_le_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n        let mut v = 1;\n        let mut result = 0;\n\n        for i in 0..N {\n            result += (bytes[i] as Field) * v;\n            v = v * 256;\n        }\n        result\n    }\n\n    /// Convert a big endian byte array to a field element.\n    /// If the provided byte array overflows the field modulus then the Field will silently wrap around.\n    pub fn from_be_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n        let mut v = 1;\n        let mut result = 0;\n\n        for i in 0..N {\n            result += (bytes[N-1-i] as Field) * v;\n            v = v * 256;\n        }\n        result\n    }\n}\n\n#[builtin(modulus_num_bits)]\npub comptime fn modulus_num_bits() -> u64 {}\n\n#[builtin(modulus_be_bits)]\npub comptime fn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\npub comptime fn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\npub comptime fn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\npub comptime fn modulus_le_bytes() -> [u8] {}\n\n// Convert a 32 byte array to a field element by modding\npub fn bytes32_to_field(bytes32: [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (bytes32[15 - i] as Field) * v;\n        low = low + (bytes32[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    low + high * v\n}\n\nfn lt_fallback(x: Field, y: Field) -> bool {\n    let x_bytes: [u8; 32] = x.to_le_bytes();\n    let y_bytes: [u8; 32] = y.to_le_bytes();\n    let mut x_is_lt = false;\n    let mut done = false;\n    for i in 0..32 {\n        if (!done) {\n            let x_byte = x_bytes[32 - 1 - i] as u8;\n            let y_byte = y_bytes[32 - 1 - i] as u8;\n            let bytes_match = x_byte == y_byte;\n            if !bytes_match {\n                x_is_lt = x_byte < y_byte;\n                done = true;\n            }\n        }\n    }\n    x_is_lt\n}\n\nmod tests {\n    #[test]\n    // docs:start:to_be_bits_example\n    fn test_to_be_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_be_bits();\n        assert_eq(bits, [0, 0, 0, 0, 0, 0, 1, 0]);\n    }\n    // docs:end:to_be_bits_example\n\n    #[test]\n    // docs:start:to_le_bits_example\n    fn test_to_le_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_le_bits();\n        assert_eq(bits, [0, 1, 0, 0, 0, 0, 0, 0]);\n    }\n    // docs:end:to_le_bits_example\n\n    #[test]\n    // docs:start:to_be_bytes_example\n    fn test_to_be_bytes() {\n        let field = 2;\n        let bits: [u8; 8] = field.to_be_bytes();\n        assert_eq(bits, [0, 0, 0, 0, 0, 0, 0, 2]);\n        assert_eq(Field::from_be_bytes::<8>(bits), field);\n    }\n    // docs:end:to_be_bytes_example\n\n    #[test]\n    // docs:start:to_le_bytes_example\n    fn test_to_le_bytes() {\n        let field = 2;\n        let bits: [u8; 8] = field.to_le_bytes();\n        assert_eq(bits, [2, 0, 0, 0, 0, 0, 0, 0]);\n        assert_eq(Field::from_le_bytes::<8>(bits), field);\n    }\n    // docs:end:to_le_bytes_example\n\n    #[test]\n    // docs:start:to_be_radix_example\n    fn test_to_be_radix() {\n        let field = 2;\n        let bits: [u8; 8] = field.to_be_radix(256);\n        assert_eq(bits, [0, 0, 0, 0, 0, 0, 0, 2]);\n        assert_eq(Field::from_be_bytes::<8>(bits), field);\n    }\n    // docs:end:to_be_radix_example\n\n    #[test]\n    // docs:start:to_le_radix_example\n    fn test_to_le_radix() {\n        let field = 2;\n        let bits: [u8; 8] = field.to_le_radix(256);\n        assert_eq(bits, [2, 0, 0, 0, 0, 0, 0, 0]);\n        assert_eq(Field::from_le_bytes::<8>(bits), field);\n    }\n    // docs:end:to_le_radix_example\n}\n"},"264":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/merkle_tree/root.nr","source":"use crate::{hash::merkle_hash, merkle_tree::merkle_tree::MerkleTree};\n\n// Calculate the Merkle tree root from the sibling path and leaf.\n//\n// The leaf is hashed with its sibling, and then the result is hashed\n// with the next sibling etc in the path. The last hash is the root.\n//\n// TODO(David/Someone): The cpp code is using a uint256, whereas its\n// TODO a bit simpler in Noir to just have a bit array.\n// TODO: I'd generally like to avoid u256 for algorithms like\n// this because it means we never even need to consider cases where\n// the index is greater than p.\npub fn root_from_sibling_path<let N: u32>(\n    leaf: Field,\n    leaf_index: Field,\n    sibling_path: [Field; N]\n) -> Field {\n    let mut node = leaf;\n    let indices: [u1; N] = leaf_index.to_le_bits();\n\n    for i in 0..N {\n        let (hash_left, hash_right) = if indices[i] == 1 {\n            (sibling_path[i], node)\n        } else {\n            (node, sibling_path[i])\n        };\n        node = merkle_hash(hash_left, hash_right);\n    }\n    node\n}\n\npub fn calculate_subtree_root<let N: u32>(leaves: [Field; N]) -> Field {\n    MerkleTree::new(leaves).get_root()\n}\n\n// These values are precomputed and we run tests to ensure that they\n// are correct. The values themselves were computed from the cpp code.\n//\n// Would be good if we could use width since the compute_subtree\n// algorithm uses depth.\npub fn calculate_empty_tree_root(depth: u32) -> Field {\n    if depth == 0 {\n        0\n    } else if depth == 1 {\n        0x0b63a53787021a4a962a452c2921b3663aff1ffd8d5510540f8e659e782956f1\n    } else if depth == 2 {\n        0x0e34ac2c09f45a503d2908bcb12f1cbae5fa4065759c88d501c097506a8b2290\n    } else if depth == 3 {\n        0x21f9172d72fdcdafc312eee05cf5092980dda821da5b760a9fb8dbdf607c8a20\n    } else if depth == 4 {\n        0x2373ea368857ec7af97e7b470d705848e2bf93ed7bef142a490f2119bcf82d8e\n    } else if depth == 5 {\n        0x120157cfaaa49ce3da30f8b47879114977c24b266d58b0ac18b325d878aafddf\n    } else if depth == 6 {\n        0x01c28fe1059ae0237b72334700697bdf465e03df03986fe05200cadeda66bd76\n    } else if depth == 7 {\n        0x2d78ed82f93b61ba718b17c2dfe5b52375b4d37cbbed6f1fc98b47614b0cf21b\n    } else if depth == 8 {\n        0x067243231eddf4222f3911defbba7705aff06ed45960b27f6f91319196ef97e1\n    } else if depth == 9 {\n        0x1849b85f3c693693e732dfc4577217acc18295193bede09ce8b97ad910310972\n    } else if depth == 10 {\n        0x2a775ea761d20435b31fa2c33ff07663e24542ffb9e7b293dfce3042eb104686\n    } else {\n        panic(f\"depth should be between 0 and 10\")\n    }\n}\n\n#[test]\nfn test_merkle_root_interop_test() {\n    // This is a test to ensure that we match the cpp implementation.\n    // You can grep for `TEST_F(root_rollup_tests, noir_interop_test)`\n    // to find the test that matches this.\n    let root = calculate_subtree_root([1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4]);\n    assert(0x1a09d935ae110b4c861fcec8f9099ec30b4485022aeb3d3cf9d7168e38fdc231 == root);\n\n    let empty_root = calculate_subtree_root([0; 16]);\n    assert(0x2373ea368857ec7af97e7b470d705848e2bf93ed7bef142a490f2119bcf82d8e == empty_root);\n}\n\n#[test]\nfn test_empty_subroot() {\n    assert(calculate_empty_tree_root(0) == 0);\n\n    let expected_empty_root_2 = calculate_subtree_root([0; 2]);\n    assert(calculate_empty_tree_root(1) == expected_empty_root_2);\n\n    let expected_empty_root_4 = calculate_subtree_root([0; 4]);\n    assert(calculate_empty_tree_root(2) == expected_empty_root_4);\n\n    let expected_empty_root_8 = calculate_subtree_root([0; 8]);\n    assert(calculate_empty_tree_root(3) == expected_empty_root_8);\n\n    let expected_empty_root_16 = calculate_subtree_root([0; 16]);\n    assert(calculate_empty_tree_root(4) == expected_empty_root_16);\n\n    let expected_empty_root_32 = calculate_subtree_root([0; 32]);\n    assert(calculate_empty_tree_root(5) == expected_empty_root_32);\n\n    let expected_empty_root_64 = calculate_subtree_root([0; 64]);\n    assert(calculate_empty_tree_root(6) == expected_empty_root_64);\n\n    let expected_empty_root_128 = calculate_subtree_root([0; 128]);\n    assert(calculate_empty_tree_root(7) == expected_empty_root_128);\n\n    let expected_empty_root_256 = calculate_subtree_root([0; 256]);\n    assert(calculate_empty_tree_root(8) == expected_empty_root_256);\n\n    let expected_empty_root_512 = calculate_subtree_root([0; 512]);\n    assert(calculate_empty_tree_root(9) == expected_empty_root_512);\n\n    let expected_empty_root_1024 = calculate_subtree_root([0; 1024]);\n    assert(calculate_empty_tree_root(10) == expected_empty_root_1024);\n}\n"},"277":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/utils/field.nr","source":"pub fn field_from_bytes<let N: u32>(bytes: [u8; N], big_endian: bool) -> Field {\n    assert(bytes.len() < 32, \"field_from_bytes: N must be less than 32\");\n    let mut as_field = 0;\n    let mut offset = 1;\n    for i in 0..N {\n        let mut index = i;\n        if big_endian {\n            index = N - i - 1;\n        }\n        as_field += (bytes[index] as Field) * offset;\n        offset *= 256;\n    }\n\n    as_field\n}\n\n// Convert a 32 byte array to a field element by truncating the final byte\npub fn field_from_bytes_32_trunc(bytes32: [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..15 {\n        // covers bytes 16..30 (31 is truncated and ignored)\n        low = low + (bytes32[15 + 15 - i] as Field) * v;\n        v = v * 256;\n        // covers bytes 0..14\n        high = high + (bytes32[14 - i] as Field) * v;\n    }\n    // covers byte 15\n    low = low + (bytes32[15] as Field) * v;\n\n    low + high * v\n}\n\n// TODO to radix returns u8, so we cannot use bigger radixes. It'd be ideal to use a radix of the maximum range-constrained integer noir supports\npub fn full_field_less_than(lhs: Field, rhs: Field) -> bool {\n    lhs.lt(rhs)\n}\n\npub fn full_field_greater_than(lhs: Field, rhs: Field) -> bool {\n    rhs.lt(lhs)\n}\n\n#[test]\nunconstrained fn bytes_field_test() {\n    // Tests correctness of field_from_bytes_32_trunc against existing methods\n    // Bytes representing 0x543e0a6642ffeb8039296861765a53407bba62bd1c97ca43374de950bbe0a7\n    let inputs = [\n        84, 62, 10, 102, 66, 255, 235, 128, 57, 41, 104, 97, 118, 90, 83, 64, 123, 186, 98, 189, 28, 151, 202, 67, 55, 77, 233, 80, 187, 224, 167\n    ];\n    let field = field_from_bytes(inputs, true);\n    let return_bytes: [u8; 31] = field.to_be_bytes();\n    for i in 0..31 {\n        assert_eq(inputs[i], return_bytes[i]);\n    }\n    // 32 bytes - we remove the final byte, and check it matches the field\n    let inputs2 = [\n        84, 62, 10, 102, 66, 255, 235, 128, 57, 41, 104, 97, 118, 90, 83, 64, 123, 186, 98, 189, 28, 151, 202, 67, 55, 77, 233, 80, 187, 224, 167, 158\n    ];\n    let field2 = field_from_bytes_32_trunc(inputs2);\n    let return_bytes2: [u8; 31] = field.to_be_bytes();\n\n    for i in 0..31 {\n        assert_eq(return_bytes2[i], return_bytes[i]);\n    }\n    assert_eq(field2, field);\n}\n\n#[test]\nunconstrained fn max_field_test() {\n    // Tests the hardcoded value in constants.nr vs underlying modulus\n    // NB: We can't use 0-1 in constants.nr as it will be transpiled incorrectly to ts and sol constants files\n    let max_value = crate::constants::MAX_FIELD_VALUE;\n    assert_eq(max_value, 0 - 1);\n    // modulus == 0 is tested elsewhere, so below is more of a sanity check\n    let max_bytes: [u8; 32] = max_value.to_be_bytes();\n    let mod_bytes = std::field::modulus_be_bytes();\n    for i in 0..31 {\n        assert_eq(max_bytes[i], mod_bytes[i]);\n    }\n    assert_eq(max_bytes[31], mod_bytes[31] - 1);\n}\n"},"278":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/utils/arrays.nr","source":"mod assert_array_appended;\nmod assert_array_prepended;\nmod assert_combined_array;\nmod assert_combined_sorted_transformed_value_array;\nmod assert_combined_transformed_array;\nmod assert_deduped_array;\nmod assert_exposed_sorted_transformed_value_array;\nmod assert_sorted_array;\nmod assert_sorted_transformed_value_array;\nmod assert_split_sorted_transformed_value_arrays;\nmod assert_split_transformed_value_arrays;\nmod get_sorted_result;\nmod get_sorted_tuple;\nmod sort_by;\nmod sort_by_counter;\n\n// Re-exports.\npub use assert_array_appended::{assert_array_appended, assert_array_appended_reversed, assert_array_appended_scoped};\npub use assert_array_prepended::assert_array_prepended;\npub use assert_combined_array::{assert_combined_array, combine_arrays};\npub use assert_combined_sorted_transformed_value_array::{\n    assert_combined_sorted_transformed_value_array_asc,\n    get_combined_order_hints::{CombinedOrderHint, get_combined_order_hints_asc}\n};\npub use assert_combined_transformed_array::{assert_combined_transformed_array, combine_and_transform_arrays};\npub use assert_exposed_sorted_transformed_value_array::{\n    assert_exposed_sorted_transformed_value_array,\n    get_order_hints::{get_order_hints_asc, get_order_hints_desc, OrderHint}\n};\npub use assert_deduped_array::{assert_deduped_array, dedupe_array};\npub use assert_sorted_array::assert_sorted_array;\npub use assert_split_sorted_transformed_value_arrays::{\n    assert_split_sorted_transformed_value_arrays_asc, assert_split_sorted_transformed_value_arrays_desc,\n    get_split_order_hints::{get_split_order_hints_asc, get_split_order_hints_desc, SplitOrderHints}\n};\npub use assert_sorted_transformed_value_array::{assert_sorted_transformed_value_array, assert_sorted_transformed_value_array_capped_size};\npub use assert_split_transformed_value_arrays::assert_split_transformed_value_arrays;\npub use get_sorted_result::{get_sorted_result, SortedResult};\npub use sort_by_counter::{sort_by_counter_asc, sort_by_counter_desc};\n\nuse crate::traits::{Empty, is_empty};\n\npub fn array_to_bounded_vec<T, let N: u32>(array: [T; N]) -> BoundedVec<T, N> where T: Empty + Eq {\n    let mut len = 0;\n    for elem in array {\n        if !is_empty(elem) {\n            len += 1;\n        }\n    }\n\n    BoundedVec { storage: array, len }\n}\n\nunconstrained pub fn find_index_hint<T, let N: u32, Env>(array: [T; N], find: fn[Env](T) -> bool) -> u32 {\n    let mut index = N;\n    for i in 0..N {\n        if (index == N) & find(array[i]) {\n            index = i;\n        }\n    }\n    index\n}\n\n// Routine which validates that all zero values of an array form a contiguous region at the end, i.e.,\n// of the form: [*,*,*...,0,0,0,0] where any * is non-zero. Note that a full array of non-zero values is\n// valid.\npub fn validate_array<T, let N: u32>(array: [T; N]) -> u32 where T: Empty + Eq {\n    let mut seen_empty = false;\n    let mut length = 0;\n    for i in 0..N {\n        if is_empty(array[i]) {\n            seen_empty = true;\n        } else {\n            assert(seen_empty == false, \"invalid array\");\n            length += 1;\n        }\n    }\n    length\n}\n\n// Helper function to count the number of non-empty elements in a validated array.\n// Important: Only use it for validated arrays: validate_array(array) should be true.\npub fn array_length<T, let N: u32>(array: [T; N]) -> u32 where T: Empty + Eq {\n    let length = unsafe {\n        find_index_hint(array, |elem: T| is_empty(elem))\n    };\n    if length != 0 {\n        assert(!is_empty(array[length - 1]));\n    }\n    if length != N {\n        assert(is_empty(array[length]));\n    }\n    length\n}\n\npub fn array_concat<T, let N: u32, let M: u32>(array1: [T; N], array2: [T; M]) -> [T; N + M] {\n    let mut result = [array1[0]; N + M];\n    for i in 1..N {\n        result[i] = array1[i];\n    }\n    for i in 0..M {\n        result[i + N] = array2[i];\n    }\n    result\n}\n\npub fn array_merge<T, let N: u32>(array1: [T; N], array2: [T; N]) -> [T; N] where T: Empty + Eq {\n    let mut result: [T; N] = [T::empty(); N];\n    let mut i = 0;\n    for elem in array1 {\n        if !is_empty(elem) {\n            result[i] = elem;\n            i += 1;\n        }\n    }\n    for elem in array2 {\n        if !is_empty(elem) {\n            result[i] = elem;\n            i += 1;\n        }\n    }\n    result\n}\n\npub fn check_permutation<T, let N: u32>(\n    original_array: [T; N],\n    permuted_array: [T; N],\n    original_indexes: [u32; N]\n) where T: Eq + Empty {\n    let mut seen_value = [false; N];\n    for i in 0..N {\n        let index = original_indexes[i];\n        let original_value = original_array[index];\n        assert(permuted_array[i].eq(original_value), \"Invalid index\");\n        assert(!seen_value[index], \"Duplicated index\");\n        seen_value[index] = true;\n    }\n}\n\n#[test]\nfn smoke_validate_array() {\n    let valid_array: [Field; 0] = [];\n    assert(validate_array(valid_array) == 0);\n\n    let valid_array = [0];\n    assert(validate_array(valid_array) == 0);\n\n    let valid_array = [3];\n    assert(validate_array(valid_array) == 1);\n\n    let valid_array = [1, 2, 3];\n    assert(validate_array(valid_array) == 3);\n\n    let valid_array = [1, 2, 3, 0];\n    assert(validate_array(valid_array) == 3);\n\n    let valid_array = [1, 2, 3, 0, 0];\n    assert(validate_array(valid_array) == 3);\n}\n\n#[test(should_fail_with = \"invalid array\")]\nfn smoke_validate_array_invalid_case0() {\n    let invalid_array = [0, 1];\n    let _ = validate_array(invalid_array);\n}\n\n#[test(should_fail_with = \"invalid array\")]\nfn smoke_validate_array_invalid_case1() {\n    let invalid_array = [1, 0, 0, 1, 0];\n    let _ = validate_array(invalid_array);\n}\n\n#[test(should_fail_with = \"invalid array\")]\nfn smoke_validate_array_invalid_case2() {\n    let invalid_array = [0, 0, 0, 0, 1];\n    let _ = validate_array(invalid_array);\n}\n\n#[test]\nfn test_empty_array_length() {\n    assert_eq(array_length([0]), 0);\n    assert_eq(array_length([0, 0, 0]), 0);\n}\n\n#[test]\nfn test_array_length() {\n    assert_eq(array_length([123]), 1);\n    assert_eq(array_length([123, 0, 0]), 1);\n    assert_eq(array_length([123, 456]), 2);\n    assert_eq(array_length([123, 456, 0]), 2);\n}\n\n#[test]\nfn test_array_length_invalid_arrays() {\n    // Result can be misleading (but correct) for invalid arrays.\n    assert_eq(array_length([0, 0, 123]), 0);\n    assert_eq(array_length([0, 123, 0]), 0);\n    assert_eq(array_length([0, 123, 456]), 0);\n    assert_eq(array_length([123, 0, 456]), 1);\n}\n\n#[test]\nfn find_index_greater_than_min() {\n    let values = [10, 20, 30, 40];\n    let min = 22;\n    let index = unsafe {\n        find_index_hint(values, |v: Field| min.lt(v))\n    };\n    assert_eq(index, 2);\n}\n\n#[test]\nfn find_index_not_found() {\n    let values = [10, 20, 30, 40];\n    let min = 100;\n    let index = unsafe {\n        find_index_hint(values, |v: Field| min.lt(v))\n    };\n    assert_eq(index, 4);\n}\n\n#[test]\nfn test_array_concat() {\n    let array0 = [1, 2, 3];\n    let array1 = [4, 5];\n    let concated = array_concat(array0, array1);\n    assert_eq(concated, [1, 2, 3, 4, 5]);\n}\n\n#[test]\nfn check_permutation_basic_test() {\n    let original_array = [1, 2, 3];\n    let permuted_array = [3, 1, 2];\n    let indexes = [2, 0, 1];\n    check_permutation(original_array, permuted_array, indexes);\n}\n\n#[test(should_fail_with = \"Duplicated index\")]\nfn check_permutation_duplicated_index() {\n    let original_array = [0, 1, 0];\n    let permuted_array = [1, 0, 0];\n    let indexes = [1, 0, 0];\n    check_permutation(original_array, permuted_array, indexes);\n}\n\n#[test(should_fail_with = \"Invalid index\")]\nfn check_permutation_invalid_index() {\n    let original_array = [0, 1, 2];\n    let permuted_array = [1, 0, 0];\n    let indexes = [1, 0, 2];\n    check_permutation(original_array, permuted_array, indexes);\n}\n"},"29":{"path":"std/hash/mod.nr","source":"pub mod poseidon;\npub mod mimc;\npub mod poseidon2;\npub mod keccak;\npub mod sha256;\npub mod sha512;\n\nuse crate::default::Default;\nuse crate::uint128::U128;\nuse crate::collections::vec::Vec;\nuse crate::embedded_curve_ops::{EmbeddedCurvePoint, EmbeddedCurveScalar, multi_scalar_mul, multi_scalar_mul_slice};\nuse crate::meta::derive_via;\n\n// Kept for backwards compatibility\npub use sha256::{digest, sha256, sha256_compression, sha256_var};\n\n#[foreign(blake2s)]\n// docs:start:blake2s\npub fn blake2s<let N: u32>(input: [u8; N]) -> [u8; 32]\n// docs:end:blake2s\n{}\n\n#[foreign(blake3)]\n// docs:start:blake3\npub fn blake3<let N: u32>(input: [u8; N]) -> [u8; 32]\n// docs:end:blake3\n{}\n\n// docs:start:pedersen_commitment\npub fn pedersen_commitment<let N: u32>(input: [Field; N]) -> EmbeddedCurvePoint {\n    // docs:end:pedersen_commitment\n    pedersen_commitment_with_separator(input, 0)\n}\n\npub fn pedersen_hash_with_separator<let N: u32>(input: [Field; N], separator: u32) -> Field {\n    pedersen_hash_with_separator_noir(input, separator)\n}\n\npub fn pedersen_commitment_with_separator<let N: u32>(input: [Field; N], separator: u32) -> EmbeddedCurvePoint {\n    let value = __pedersen_commitment_with_separator(input, separator);\n    if (value[0] == 0) & (value[1] == 0) {\n        EmbeddedCurvePoint { x: 0, y: 0, is_infinite: true }\n    } else {\n        EmbeddedCurvePoint { x: value[0], y: value[1], is_infinite: false }\n    }\n}\n\n#[no_predicates]\nfn pedersen_commitment_with_separator_noir<let N: u32>(input: [Field; N], separator: u32) -> EmbeddedCurvePoint {\n    let mut points = [EmbeddedCurveScalar { lo: 0, hi: 0 }; N];\n    for i in 0..N {\n        // we use the unsafe version because the multi_scalar_mul will constrain the scalars.\n        points[i] = from_field_unsafe(input[i]);\n    }\n    let generators = derive_generators(\"DEFAULT_DOMAIN_SEPARATOR\".as_bytes(), separator);\n    multi_scalar_mul(generators, points)\n}\n\n#[no_predicates]\nfn pedersen_hash_with_separator_noir<let N: u32>(input: [Field; N], separator: u32) -> Field {\n    let mut scalars: Vec<EmbeddedCurveScalar> = Vec::from_slice([EmbeddedCurveScalar { lo: 0, hi: 0 }; N].as_slice()); //Vec::new();\n\n    for i in 0..N {\n        scalars.set(i, from_field_unsafe(input[i]));\n    }\n    scalars.push(EmbeddedCurveScalar { lo: N as Field, hi: 0 as Field });\n    let domain_generators :[EmbeddedCurvePoint; N]= derive_generators(\"DEFAULT_DOMAIN_SEPARATOR\".as_bytes(), separator);\n    let mut vec_generators = Vec::new();\n    for i in 0..N {\n        vec_generators.push(domain_generators[i]);\n    }\n    let length_generator : [EmbeddedCurvePoint; 1] = derive_generators(\"pedersen_hash_length\".as_bytes(), 0);\n    vec_generators.push(length_generator[0]);\n    multi_scalar_mul_slice(vec_generators.slice, scalars.slice)[0]\n}\n\n// docs:start:pedersen_hash\npub fn pedersen_hash<let N: u32>(input: [Field; N]) -> Field\n// docs:end:pedersen_hash\n{\n    pedersen_hash_with_separator_noir(input, 0)\n}\n\n#[foreign(pedersen_hash)]\nfn __pedersen_hash_with_separator<let N: u32>(input: [Field; N], separator: u32) -> Field {}\n\n#[foreign(pedersen_commitment)]\nfn __pedersen_commitment_with_separator<let N: u32>(input: [Field; N], separator: u32) -> [Field; 2] {}\n\n#[field(bn254)]\npub fn derive_generators<let N: u32, let M: u32>(domain_separator_bytes: [u8; M], starting_index: u32) -> [EmbeddedCurvePoint; N] {\n    crate::assert_constant(domain_separator_bytes);\n    // TODO(https://github.com/noir-lang/noir/issues/5672): Add back assert_constant on starting_index\n    __derive_generators(domain_separator_bytes, starting_index)\n}\n\n#[builtin(derive_pedersen_generators)]\n#[field(bn254)]\nfn __derive_generators<let N: u32, let M: u32>(domain_separator_bytes: [u8; M], starting_index: u32) -> [EmbeddedCurvePoint; N] {}\n\n#[field(bn254)]\n// Same as from_field but:\n// does not assert the limbs are 128 bits\n// does not assert the decomposition does not overflow the EmbeddedCurveScalar\nfn from_field_unsafe(scalar: Field) -> EmbeddedCurveScalar {\n    let (xlo, xhi) = unsafe {\n        crate::field::bn254::decompose_hint(scalar)\n    };\n    // Check that the decomposition is correct\n    assert_eq(scalar, xlo + crate::field::bn254::TWO_POW_128 * xhi);\n    EmbeddedCurveScalar { lo: xlo, hi: xhi }\n}\n\npub fn hash_to_field(inputs: [Field]) -> Field {\n    let mut sum = 0;\n\n    for input in inputs {\n        let input_bytes: [u8; 32] = input.to_le_bytes();\n        sum += crate::field::bytes32_to_field(blake2s(input_bytes));\n    }\n\n    sum\n}\n\n// docs:start:keccak256\npub fn keccak256<let N: u32>(input: [u8; N], message_size: u32) -> [u8; 32]\n// docs:end:keccak256\n{\n    crate::hash::keccak::keccak256(input, message_size)\n}\n\n#[foreign(poseidon2_permutation)]\npub fn poseidon2_permutation<let N: u32>(_input: [Field; N], _state_length: u32) -> [Field; N] {}\n\n// Generic hashing support.\n// Partially ported and impacted by rust.\n\n// Hash trait shall be implemented per type.\n#[derive_via(derive_hash)]\npub trait Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher;\n}\n\n// docs:start:derive_hash\ncomptime fn derive_hash(s: StructDefinition) -> Quoted {\n    let name = quote { Hash };\n    let signature = quote { fn hash<H>(_self: Self, _state: &mut H) where H: std::hash::Hasher };\n    let for_each_field = |name| quote { _self.$name.hash(_state); };\n    crate::meta::make_trait_impl(s, name, signature, for_each_field, quote {}, |fields| fields)\n}\n// docs:end:derive_hash\n\n// Hasher trait shall be implemented by algorithms to provide hash-agnostic means.\n// TODO: consider making the types generic here ([u8], [Field], etc.)\npub trait Hasher {\n    fn finish(self) -> Field;\n\n    fn write(&mut self, input: Field);\n}\n\n// BuildHasher is a factory trait, responsible for production of specific Hasher.\npub trait BuildHasher<H> where H: Hasher {\n    fn build_hasher(self) -> H;\n}\n\npub struct BuildHasherDefault<H>;\n\nimpl<H> BuildHasher<H> for BuildHasherDefault<H>\nwhere\n    H: Hasher + Default {\n    fn build_hasher(_self: Self) -> H {\n        H::default()\n    }\n}\n\nimpl<H> Default for BuildHasherDefault<H>\nwhere\n    H: Hasher + Default {\n    fn default() -> Self {\n        BuildHasherDefault {}\n    }\n}\n\nimpl Hash for Field {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self);\n    }\n}\n\nimpl Hash for u1 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u8 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u16 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u32 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u64 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i8 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i16 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i32 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i64 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for bool {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for () {\n    fn hash<H>(_self: Self, _state: &mut H) where H: Hasher {}\n}\n\nimpl Hash for U128 {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        H::write(state, self.lo as Field);\n        H::write(state, self.hi as Field);\n    }\n}\n\nimpl<T, let N: u32> Hash for [T; N] where T: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        for elem in self {\n            elem.hash(state);\n        }\n    }\n}\n\nimpl<T> Hash for [T] where T: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        self.len().hash(state);\n        for elem in self {\n            elem.hash(state);\n        }\n    }\n}\n\nimpl<A, B> Hash for (A, B) where A: Hash, B: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        self.0.hash(state);\n        self.1.hash(state);\n    }\n}\n\nimpl<A, B, C> Hash for (A, B, C) where A: Hash, B: Hash, C: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n    }\n}\n\nimpl<A, B, C, D> Hash for (A, B, C, D) where A: Hash, B: Hash, C: Hash, D: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n        self.3.hash(state);\n    }\n}\n\nimpl<A, B, C, D, E> Hash for (A, B, C, D, E) where A: Hash, B: Hash, C: Hash, D: Hash, E: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n        self.3.hash(state);\n        self.4.hash(state);\n    }\n}\n\n// Some test vectors for Pedersen hash and Pedersen Commitment.\n// They have been generated using the same functions so the tests are for now useless\n// but they will be useful when we switch to Noir implementation.\n#[test]\nfn assert_pedersen() {\n    assert_eq(\n        pedersen_hash_with_separator([1], 1), 0x1b3f4b1a83092a13d8d1a59f7acb62aba15e7002f4440f2275edb99ebbc2305f\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1], 1), EmbeddedCurvePoint {\n        x: 0x054aa86a73cb8a34525e5bbed6e43ba1198e860f5f3950268f71df4591bde402,\n        y: 0x209dcfbf2cfb57f9f6046f44d71ac6faf87254afc7407c04eb621a6287cac126,\n        is_infinite: false\n    }\n    );\n\n    assert_eq(\n        pedersen_hash_with_separator([1, 2], 2), 0x26691c129448e9ace0c66d11f0a16d9014a9e8498ee78f4d69f0083168188255\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2], 2), EmbeddedCurvePoint {\n        x: 0x2e2b3b191e49541fe468ec6877721d445dcaffe41728df0a0eafeb15e87b0753,\n        y: 0x2ff4482400ad3a6228be17a2af33e2bcdf41be04795f9782bd96efe7e24f8778,\n        is_infinite: false\n    }\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3], 3), 0x0bc694b7a1f8d10d2d8987d07433f26bd616a2d351bc79a3c540d85b6206dbe4\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3], 3), EmbeddedCurvePoint {\n        x: 0x1fee4e8cf8d2f527caa2684236b07c4b1bad7342c01b0f75e9a877a71827dc85,\n        y: 0x2f9fedb9a090697ab69bf04c8bc15f7385b3e4b68c849c1536e5ae15ff138fd1,\n        is_infinite: false\n    }\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4], 4), 0xdae10fb32a8408521803905981a2b300d6a35e40e798743e9322b223a5eddc\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4], 4), EmbeddedCurvePoint {\n        x: 0x07ae3e202811e1fca39c2d81eabe6f79183978e6f12be0d3b8eda095b79bdbc9,\n        y: 0x0afc6f892593db6fbba60f2da558517e279e0ae04f95758587760ba193145014,\n        is_infinite: false\n    }\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5], 5), 0xfc375b062c4f4f0150f7100dfb8d9b72a6d28582dd9512390b0497cdad9c22\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5], 5), EmbeddedCurvePoint {\n        x: 0x1754b12bd475a6984a1094b5109eeca9838f4f81ac89c5f0a41dbce53189bb29,\n        y: 0x2da030e3cfcdc7ddad80eaf2599df6692cae0717d4e9f7bfbee8d073d5d278f7,\n        is_infinite: false\n    }\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6], 6), 0x1696ed13dc2730062a98ac9d8f9de0661bb98829c7582f699d0273b18c86a572\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6], 6), EmbeddedCurvePoint {\n        x: 0x190f6c0e97ad83e1e28da22a98aae156da083c5a4100e929b77e750d3106a697,\n        y: 0x1f4b60f34ef91221a0b49756fa0705da93311a61af73d37a0c458877706616fb,\n        is_infinite: false\n    }\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6, 7], 7), 0x128c0ff144fc66b6cb60eeac8a38e23da52992fc427b92397a7dffd71c45ede3\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6, 7], 7), EmbeddedCurvePoint {\n        x: 0x015441e9d29491b06563fac16fc76abf7a9534c715421d0de85d20dbe2965939,\n        y: 0x1d2575b0276f4e9087e6e07c2cb75aa1baafad127af4be5918ef8a2ef2fea8fc,\n        is_infinite: false\n    }\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6, 7, 8], 8), 0x2f960e117482044dfc99d12fece2ef6862fba9242be4846c7c9a3e854325a55c\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6, 7, 8], 8), EmbeddedCurvePoint {\n        x: 0x1657737676968887fceb6dd516382ea13b3a2c557f509811cd86d5d1199bc443,\n        y: 0x1f39f0cb569040105fa1e2f156521e8b8e08261e635a2b210bdc94e8d6d65f77,\n        is_infinite: false\n    }\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6, 7, 8, 9], 9), 0x0c96db0790602dcb166cc4699e2d306c479a76926b81c2cb2aaa92d249ec7be7\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6, 7, 8, 9], 9), EmbeddedCurvePoint {\n        x: 0x0a3ceae42d14914a432aa60ec7fded4af7dad7dd4acdbf2908452675ec67e06d,\n        y: 0xfc19761eaaf621ad4aec9a8b2e84a4eceffdba78f60f8b9391b0bd9345a2f2,\n        is_infinite: false\n    }\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10), 0x2cd37505871bc460a62ea1e63c7fe51149df5d0801302cf1cbc48beb8dff7e94\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10), EmbeddedCurvePoint {\n        x: 0x2fb3f8b3d41ddde007c8c3c62550f9a9380ee546fcc639ffbb3fd30c8d8de30c,\n        y: 0x300783be23c446b11a4c0fabf6c91af148937cea15fcf5fb054abf7f752ee245,\n        is_infinite: false\n    }\n    );\n}\n"},"297":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/utils/reader.nr","source":"pub struct Reader<let N: u32> {\n    data: [Field; N],\n    offset: u32,\n}\n\nimpl<let N: u32> Reader<N> {\n    pub fn new(data: [Field; N]) -> Self {\n        Self { data, offset: 0 }\n    }\n\n    pub fn read(&mut self) -> Field {\n        let result = self.data[self.offset];\n        self.offset += 1;\n        result\n    }\n\n    pub fn read_u32(&mut self) -> u32 {\n        self.read() as u32\n    }\n\n    pub fn read_bool(&mut self) -> bool {\n        self.read() as bool\n    }\n\n    pub fn read_array<let K: u32>(&mut self, mut result: [Field; K]) -> [Field; K] {\n        for i in 0..K {\n            result[i] = self.data[self.offset + i];\n        }\n        self.offset += K;\n        result\n    }\n\n    // TODO(#4394)\n    pub fn read_struct<T, let K: u32>(&mut self, deserialise: fn([Field; K]) -> T) -> T {\n        let result = deserialise(self.read_array([0; K]));\n        result\n    }\n\n    pub fn read_struct_array<T, let K: u32, let C: u32>(&mut self, deserialise: fn([Field; K]) -> T, mut result: [T; C]) -> [T; C] {\n        for i in 0..C {\n            result[i] = self.read_struct(deserialise);\n        }\n        result\n    }\n\n    pub fn finish(self) {\n        assert(self.offset == self.data.len(), \"Reader did not read all data\");\n    }\n}\n"},"299":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/utils/mod.nr","source":"// general util packages/modules are usually bad practice\n// because there is no criteria for what we should not put in here.\n// Reducing the size of this package would be welcome.\n\nmod arrays;\nmod field;\nmod reader;\nmod uint256;\n\n// if predicate == true then return lhs, else return rhs\npub fn conditional_assign(predicate: bool, lhs: Field, rhs: Field) -> Field {\n    if predicate { lhs } else { rhs }\n}\n\npub fn arr_copy_slice<T, let N: u32, let M: u32>(src: [T; N], mut dst: [T; M], offset: u32) -> [T; M] {\n    let iterator_len = if N > M { M } else { N };\n    for i in 0..iterator_len {\n        dst[i] = src[i + offset];\n    }\n    dst\n}\n"},"302":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/traits.nr","source":"use crate::utils::field::field_from_bytes;\nuse crate::meta::{derive_deserialize, derive_serialize};\n\n// Trait: is_empty\n//\n// The general is_empty trait checks if a data type is is empty,\n// and it defines empty for the basic data types as 0.\n//\n// If a Field is equal to zero, then it is regarded as zero.\n// We will go with this definition for now, however it can be problematic\n// if a value can actually be zero. In a future refactor, we can\n// use the optional type for safety. Doing it now would lead to a worse devex\n// and would make it harder to sync up with the cpp code.\n// Preferred over Default trait to convey intent, as default doesn't necessarily mean empty.\npub trait Empty {\n    fn empty() -> Self;\n}\n\nimpl Empty for Field {\n    fn empty() -> Self {\n        0\n    }\n}\n\nimpl Empty for u1 {\n    fn empty() -> Self {\n        0\n    }\n}\nimpl Empty for u8 {\n    fn empty() -> Self {\n        0\n    }\n}\nimpl Empty for u32 {\n    fn empty() -> Self {\n        0\n    }\n}\nimpl Empty for u64 {\n    fn empty() -> Self {\n        0\n    }\n}\nimpl Empty for U128 {\n    fn empty() -> Self {\n        U128::from_integer(0)\n    }\n}\n\npub fn is_empty<T>(item: T) -> bool where T: Empty + Eq {\n    item.eq(T::empty())\n}\n\npub fn is_empty_array<T, let N: u32>(array: [T; N]) -> bool where T: Empty + Eq {\n    array.all(|elem| is_empty(elem))\n}\n\npub trait Hash {\n    fn hash(self) -> Field;\n}\n\npub trait ToField {\n    fn to_field(self) -> Field;\n}\n\nimpl ToField for Field {\n    fn to_field(self) -> Field {\n        self\n    }\n}\n\nimpl ToField for bool {\n    fn to_field(self) -> Field {\n        self as Field\n    }\n}\nimpl ToField for u1 {\n    fn to_field(self) -> Field {\n        self as Field\n    }\n}\nimpl ToField for u8 {\n    fn to_field(self) -> Field {\n        self as Field\n    }\n}\nimpl ToField for u32 {\n    fn to_field(self) -> Field {\n        self as Field\n    }\n}\nimpl ToField for u64 {\n    fn to_field(self) -> Field {\n        self as Field\n    }\n}\nimpl ToField for U128 {\n    fn to_field(self) -> Field {\n        self.to_integer()\n    }\n}\nimpl<let N: u32> ToField for str<N> {\n    fn to_field(self) -> Field {\n        assert(N < 32, \"String doesn't fit in a field, consider using Serialize instead\");\n        field_from_bytes(self.as_bytes(), true)\n    }\n}\n\npub trait FromField {\n    fn from_field(value: Field) -> Self;\n}\n\nimpl FromField for Field {\n    fn from_field(value: Field) -> Self {\n        value\n    }\n}\n\nimpl FromField for bool {\n    fn from_field(value: Field) -> Self {\n        value as bool\n    }\n}\nimpl FromField for u1 {\n    fn from_field(value: Field) -> Self {\n        value as u1\n    }\n}\nimpl FromField for u8 {\n    fn from_field(value: Field) -> Self {\n        value as u8\n    }\n}\nimpl FromField for u32 {\n    fn from_field(value: Field) -> Self {\n        value as u32\n    }\n}\nimpl FromField for u64 {\n    fn from_field(value: Field) -> Self {\n        value as u64\n    }\n}\nimpl FromField for U128 {\n    fn from_field(value: Field) -> Self {\n        U128::from_integer(value)\n    }\n}\n\n// docs:start:serialize\n#[derive_via(derive_serialize)]\npub trait Serialize<let N: u32> {\n    fn serialize(self) -> [Field; N];\n}\n// docs:end:serialize\n\nimpl<let N: u32> Serialize<N> for str<N> {\n    fn serialize(self) -> [Field; N] {\n        let bytes = self.as_bytes();\n        let mut fields = [0; N];\n        for i in 0..bytes.len() {\n            fields[i] = bytes[i] as Field;\n        }\n        fields\n    }\n}\n\n// docs:start:deserialize\n#[derive_via(derive_deserialize)]\npub trait Deserialize<let N: u32> {\n    fn deserialize(fields: [Field; N]) -> Self;\n}\n// docs:end:deserialize\n\nimpl <let N: u32> Deserialize<N> for str<N> {\n    fn deserialize(fields: [Field; N]) -> Self {\n        str<N>::from(fields.map(|value| value as u8))\n    }\n}\n"},"303":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/type_serialization.nr","source":"use crate::traits::{Serialize, Deserialize};\n\nglobal BOOL_SERIALIZED_LEN: u32 = 1;\nglobal U8_SERIALIZED_LEN: u32 = 1;\nglobal U32_SERIALIZED_LEN: u32 = 1;\nglobal U64_SERIALIZED_LEN: u32 = 1;\nglobal U128_SERIALIZED_LEN: u32 = 1;\nglobal FIELD_SERIALIZED_LEN: u32 = 1;\n\nimpl Serialize<BOOL_SERIALIZED_LEN> for bool {\n    fn serialize(self) -> [Field; BOOL_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<BOOL_SERIALIZED_LEN> for bool {\n    fn deserialize(fields: [Field; BOOL_SERIALIZED_LEN]) -> bool {\n        fields[0] as bool\n    }\n}\n\nimpl Serialize<U8_SERIALIZED_LEN> for u8 {\n    fn serialize(self) -> [Field; U8_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<U8_SERIALIZED_LEN> for u8 {\n    fn deserialize(fields: [Field; U8_SERIALIZED_LEN]) -> Self {\n        fields[0] as u8\n    }\n}\n\nimpl Serialize<U32_SERIALIZED_LEN> for u32 {\n    fn serialize(self) -> [Field; U32_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<U32_SERIALIZED_LEN> for u32 {\n    fn deserialize(fields: [Field; U32_SERIALIZED_LEN]) -> Self {\n        fields[0] as u32\n    }\n}\n\nimpl Serialize<U64_SERIALIZED_LEN> for u64 {\n    fn serialize(self) -> [Field; U64_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<U64_SERIALIZED_LEN> for u64 {\n    fn deserialize(fields: [Field; U64_SERIALIZED_LEN]) -> Self {\n        fields[0] as u64\n    }\n}\n\nimpl Serialize<U128_SERIALIZED_LEN> for U128 {\n    fn serialize(self) -> [Field; U128_SERIALIZED_LEN] {\n        [self.to_integer()]\n    }\n}\n\nimpl Deserialize<U128_SERIALIZED_LEN> for U128 {\n    fn deserialize(fields: [Field; U128_SERIALIZED_LEN]) -> Self {\n        U128::from_integer(fields[0])\n    }\n}\n\nimpl Serialize<FIELD_SERIALIZED_LEN> for Field {\n    fn serialize(self) -> [Field; FIELD_SERIALIZED_LEN] {\n        [self]\n    }\n}\n\nimpl Deserialize<FIELD_SERIALIZED_LEN> for Field {\n    fn deserialize(fields: [Field; FIELD_SERIALIZED_LEN]) -> Self {\n        fields[0]\n    }\n}\n\nimpl <T, let N: u32, let M: u32> Serialize<N * M> for [T; N] where T: Serialize<M> {\n    fn serialize(self) -> [Field; N * M] {\n        let mut result: [Field; N * M] = std::mem::zeroed();\n        let mut serialized: [Field; M] = std::mem::zeroed();\n        for i in 0..N {\n            serialized = self[i].serialize();\n            for j in 0..M {\n                result[i * M + j] = serialized[j];\n            }\n        }\n        result\n    }\n}\n\nimpl <T, let N: u32, let M: u32> Deserialize<N * M> for [T; N] where T: Deserialize<M> {\n    fn deserialize(fields: [Field; N * M]) -> Self {\n        let mut reader = crate::utils::reader::Reader::new(fields);\n        let mut result: [T; N] = std::mem::zeroed();\n        reader.read_struct_array::<T, M, N>(Deserialize::deserialize, result)\n    }\n}\n"},"306":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/contract_instance.nr","source":"use crate::{\n    address::{aztec_address::AztecAddress, partial_address::PartialAddress, public_keys_hash::PublicKeysHash},\n    contract_class_id::ContractClassId, constants::CONTRACT_INSTANCE_LENGTH,\n    traits::{Deserialize, Hash, Serialize}\n};\n\npub struct ContractInstance {\n    salt : Field,\n    deployer: AztecAddress,\n    contract_class_id : ContractClassId,\n    initialization_hash : Field,\n    public_keys_hash : PublicKeysHash,\n}\n\nimpl Eq for ContractInstance {\n    fn eq(self, other: Self) -> bool {\n        self.public_keys_hash.eq(other.public_keys_hash)\n            & self.initialization_hash.eq(other.initialization_hash)\n            & self.contract_class_id.eq(other.contract_class_id)\n            & self.salt.eq(other.salt)\n    }\n}\n\nimpl Serialize<CONTRACT_INSTANCE_LENGTH> for ContractInstance {\n    fn serialize(self) -> [Field; CONTRACT_INSTANCE_LENGTH] {\n        [\n            self.salt,\n            self.deployer.to_field(),\n            self.contract_class_id.to_field(),\n            self.initialization_hash,\n            self.public_keys_hash.to_field()\n        ]\n    }\n}\n\nimpl Deserialize<CONTRACT_INSTANCE_LENGTH> for ContractInstance {\n    fn deserialize(serialized: [Field; CONTRACT_INSTANCE_LENGTH]) -> Self {\n        Self {\n            salt: serialized[0],\n            deployer: AztecAddress::from_field(serialized[1]),\n            contract_class_id: ContractClassId::from_field(serialized[2]),\n            initialization_hash: serialized[3],\n            public_keys_hash: PublicKeysHash::from_field(serialized[4])\n        }\n    }\n}\n\nimpl Hash for ContractInstance {\n    fn hash(self) -> Field {\n        self.to_address().to_field()\n    }\n}\n\nimpl ContractInstance {\n    fn to_address(self) -> AztecAddress {\n        AztecAddress::compute(\n            self.public_keys_hash,\n            PartialAddress::compute(\n                self.contract_class_id,\n                self.salt,\n                self.initialization_hash,\n                self.deployer\n            )\n        )\n    }\n}\n"},"307":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/address/aztec_address.nr","source":"use crate::{\n    address::{partial_address::PartialAddress, public_keys_hash::PublicKeysHash},\n    constants::{AZTEC_ADDRESS_LENGTH, GENERATOR_INDEX__CONTRACT_ADDRESS_V1},\n    hash::poseidon2_hash_with_separator, traits::{Empty, FromField, ToField, Serialize, Deserialize},\n    utils\n};\n\n// Aztec address\npub struct AztecAddress {\n    inner : Field\n}\n\nimpl Eq for AztecAddress {\n    fn eq(self, other: Self) -> bool {\n        self.to_field() == other.to_field()\n    }\n}\n\nimpl Empty for AztecAddress {\n    fn empty() -> Self {\n        Self { inner: 0 }\n    }\n}\n\nimpl ToField for AztecAddress {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl FromField for AztecAddress {\n    fn from_field(value: Field) -> AztecAddress {\n        AztecAddress { inner: value }\n    }\n}\n\nimpl Serialize<AZTEC_ADDRESS_LENGTH> for AztecAddress {\n    fn serialize(self: Self) -> [Field; AZTEC_ADDRESS_LENGTH] {\n        [self.to_field()]\n    }\n}\n\nimpl Deserialize<AZTEC_ADDRESS_LENGTH> for AztecAddress {\n    fn deserialize(fields: [Field; AZTEC_ADDRESS_LENGTH]) -> Self {\n        FromField::from_field(fields[0])\n    }\n}\n\nimpl AztecAddress {\n    pub fn zero() -> Self {\n        Self { inner: 0 }\n    }\n\n    pub fn compute(pub_keys_hash: PublicKeysHash, partial_address: PartialAddress) -> AztecAddress {\n        AztecAddress::from_field(\n            poseidon2_hash_with_separator(\n                [pub_keys_hash.to_field(), partial_address.to_field()],\n                GENERATOR_INDEX__CONTRACT_ADDRESS_V1\n            )\n        )\n    }\n\n    pub fn is_zero(self) -> bool {\n        self.inner == 0\n    }\n\n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n\n    pub fn conditional_assign(predicate: bool, lhs: Self, rhs: Self) -> Self {\n        let result = utils::conditional_assign(predicate, rhs.to_field(), lhs.to_field());\n        Self { inner: result }\n    }\n}\n\n#[test]\nfn compute_address_from_partial_and_pub_keys_hash() {\n    let pub_keys_hash = PublicKeysHash::from_field(1);\n    let partial_address = PartialAddress::from_field(2);\n\n    let address = AztecAddress::compute(pub_keys_hash, partial_address);\n    let expected_computed_address_from_partial_and_pubkey = 0x23ce9be3fa3c846b0f9245cc796902e731d04f086e8a42473bb29e405fc98075;\n    assert(address.to_field() == expected_computed_address_from_partial_and_pubkey);\n}\n\n#[test]\nfn from_field_to_field() {\n    let address = AztecAddress { inner: 37 };\n    assert_eq(FromField::from_field(address.to_field()), address);\n}\n\n#[test]\nfn serde() {\n    let address = AztecAddress { inner: 37 };\n    assert_eq(Deserialize::deserialize(address.serialize()), address);\n}\n"},"315":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/hash.nr","source":"use crate::{\n    abis::{\n    contract_class_function_leaf_preimage::ContractClassFunctionLeafPreimage,\n    function_selector::FunctionSelector, log_hash::{LogHash, ScopedLogHash, ScopedEncryptedLogHash},\n    note_hash::ScopedNoteHash, nullifier::ScopedNullifier\n},\n    address::{AztecAddress, EthAddress},\n    constants::{\n    FUNCTION_TREE_HEIGHT, GENERATOR_INDEX__SILOED_NOTE_HASH, GENERATOR_INDEX__OUTER_NULLIFIER,\n    GENERATOR_INDEX__VK, GENERATOR_INDEX__NOTE_HASH_NONCE, GENERATOR_INDEX__UNIQUE_NOTE_HASH,\n    MAX_ENCRYPTED_LOGS_PER_TX, MAX_NOTE_ENCRYPTED_LOGS_PER_TX\n},\n    merkle_tree::root::root_from_sibling_path,\n    messaging::l2_to_l1_message::{L2ToL1Message, ScopedL2ToL1Message},\n    recursion::verification_key::VerificationKey, traits::{is_empty, ToField},\n    utils::field::field_from_bytes_32_trunc\n};\nuse super::utils::field::field_from_bytes;\n\npub fn sha256_to_field<let N: u32>(bytes_to_hash: [u8; N]) -> Field {\n    let sha256_hashed = std::hash::sha256(bytes_to_hash);\n    let hash_in_a_field = field_from_bytes_32_trunc(sha256_hashed);\n\n    hash_in_a_field\n}\n\npub fn private_functions_root_from_siblings(\n    selector: FunctionSelector,\n    vk_hash: Field,\n    function_leaf_index: Field,\n    function_leaf_sibling_path: [Field; FUNCTION_TREE_HEIGHT]\n) -> Field {\n    let function_leaf_preimage = ContractClassFunctionLeafPreimage { selector, vk_hash };\n    let function_leaf = function_leaf_preimage.hash();\n    root_from_sibling_path(function_leaf, function_leaf_index, function_leaf_sibling_path)\n}\n\nfn compute_note_hash_nonce(tx_hash: Field, note_index_in_tx: u32) -> Field {\n    // Hashing tx hash with note index in tx is guaranteed to be unique\n    poseidon2_hash_with_separator(\n        [\n        tx_hash,\n        note_index_in_tx as Field\n    ],\n        GENERATOR_INDEX__NOTE_HASH_NONCE\n    )\n}\n\npub fn compute_unique_note_hash(nonce: Field, note_hash: Field) -> Field {\n    let inputs = [nonce, note_hash];\n    poseidon2_hash_with_separator(inputs, GENERATOR_INDEX__UNIQUE_NOTE_HASH)\n}\n\npub fn compute_siloed_note_hash(app: AztecAddress, unique_note_hash: Field) -> Field {\n    poseidon2_hash_with_separator(\n        [\n        app.to_field(),\n        unique_note_hash\n    ],\n        GENERATOR_INDEX__SILOED_NOTE_HASH\n    )\n}\n\n/// Siloing in the context of Aztec refers to the process of hashing a note hash with a contract address (this way\n/// the note hash is scoped to a specific contract). This is used to prevent intermingling of notes between contracts.\npub fn silo_note_hash(note_hash: ScopedNoteHash, tx_hash: Field, note_index_in_tx: u32) -> Field {\n    if note_hash.contract_address.is_zero() {\n        0\n    } else {\n        let nonce = compute_note_hash_nonce(tx_hash, note_index_in_tx);\n        let unique_note_hash = compute_unique_note_hash(nonce, note_hash.value());\n        compute_siloed_note_hash(note_hash.contract_address, unique_note_hash)\n    }\n}\n\npub fn compute_siloed_nullifier(app: AztecAddress, nullifier: Field) -> Field {\n    poseidon2_hash_with_separator(\n        [\n        app.to_field(),\n        nullifier\n    ],\n        GENERATOR_INDEX__OUTER_NULLIFIER\n    )\n}\n\npub fn silo_nullifier(nullifier: ScopedNullifier) -> Field {\n    if nullifier.contract_address.is_zero() {\n        nullifier.value() // Return value instead of 0 because the first nullifier's contract address is zero.\n    } else {\n        compute_siloed_nullifier(nullifier.contract_address, nullifier.value())\n    }\n}\n\npub fn silo_encrypted_log_hash(log_hash: ScopedLogHash) -> Field {\n    // We assume contract address has already been masked\n    if log_hash.contract_address.is_zero() {\n        0\n    } else {\n        accumulate_sha256([log_hash.contract_address.to_field(), log_hash.log_hash.value])\n    }\n}\n\npub fn mask_encrypted_log_hash(scoped_log: ScopedEncryptedLogHash) -> AztecAddress {\n    if scoped_log.contract_address.is_zero() {\n        AztecAddress::from_field(0)\n    } else if (scoped_log.log_hash.randomness == 0) {\n        scoped_log.contract_address\n    } else {\n        AztecAddress::from_field(\n            poseidon2_hash_with_separator(\n                [scoped_log.contract_address.to_field(), scoped_log.log_hash.randomness],\n                0\n            )\n        )\n    }\n}\n\nfn compute_siloed_unencrypted_log_hash(address: AztecAddress, log_hash: Field) -> Field {\n    accumulate_sha256([address.to_field(), log_hash])\n}\n\npub fn silo_unencrypted_log_hash(log_hash: ScopedLogHash) -> Field {\n    if log_hash.contract_address.is_zero() {\n        0\n    } else {\n        compute_siloed_unencrypted_log_hash(log_hash.contract_address, log_hash.value())\n    }\n}\n\npub fn merkle_hash(left: Field, right: Field) -> Field {\n    poseidon2_hash([left, right])\n}\n\npub fn stdlib_recursion_verification_key_compress_native_vk(_vk: VerificationKey) -> Field {\n    // Original cpp code\n    // stdlib::recursion::verification_key<CT::bn254>::compress_native(private_call.vk, GeneratorIndex::VK);\n    // The above cpp method is only ever called on verification key, so it has been special cased here\n    let _hash_index = GENERATOR_INDEX__VK;\n    0\n}\n\npub fn compute_l2_to_l1_hash(\n    contract_address: AztecAddress,\n    recipient: EthAddress,\n    content: Field,\n    rollup_version_id: Field,\n    chain_id: Field\n) -> Field {\n    let mut bytes: BoundedVec<u8, 160> = BoundedVec::new();\n\n    let inputs = [contract_address.to_field(), rollup_version_id, recipient.to_field(), chain_id, content];\n    for i in 0..inputs.len() {\n        // TODO are bytes be in fr.to_buffer() ?\n        let item_bytes: [u8; 32] = inputs[i].to_be_bytes();\n        for j in 0..32 {\n            bytes.push(item_bytes[j]);\n        }\n    }\n\n    sha256_to_field(bytes.storage)\n}\n\npub fn silo_l2_to_l1_message(msg: ScopedL2ToL1Message, rollup_version_id: Field, chain_id: Field) -> Field {\n    if msg.contract_address.is_zero() {\n        0\n    } else {\n        compute_l2_to_l1_hash(\n            msg.contract_address,\n            msg.message.recipient,\n            msg.message.content,\n            rollup_version_id,\n            chain_id\n        )\n    }\n}\n\n// Computes sha256 hash of 2 input hashes.\n//\n// NB: This method now takes in two 31 byte fields - it assumes that any input\n// is the result of a sha_to_field hash and => is truncated\n//\n// TODO(Jan and David): This is used for the encrypted_log hashes.\n// Can we check to see if we can just use hash_to_field or pedersen_compress here?\n//\npub fn accumulate_sha256(input: [Field; 2]) -> Field {\n    // This is a note about the cpp code, since it takes an array of Fields\n    // instead of a U128.\n    // 4 Field elements when converted to bytes will usually\n    // occupy 4 * 32 = 128 bytes.\n    // However, this function is making the assumption that each Field\n    // only occupies 128 bits.\n    //\n    // TODO(David): This does not seem to be getting guaranteed anywhere in the code?\n\n    // Concatentate two fields into 32x2 = 64 bytes\n    // accumulate_sha256 assumes that the inputs are pre-truncated 31 byte numbers\n    let mut hash_input_flattened = [0; 64];\n    for offset in 0..input.len() {\n        let input_as_bytes: [u8; 32] = input[offset].to_be_bytes();\n        for byte_index in 0..32 {\n            hash_input_flattened[offset * 32 + byte_index] = input_as_bytes[byte_index];\n        }\n    }\n\n    sha256_to_field(hash_input_flattened)\n}\n\n// Computes the final logs hash for a tx.\n// NB: this assumes MAX_ENCRYPTED_LOGS_PER_TX == MAX_UNENCRYPTED_LOGS_PER_TX\n// to avoid doubling code, since we can't define the byte len to be 32*N directly.\npub fn compute_tx_logs_hash(logs: [LogHash; MAX_ENCRYPTED_LOGS_PER_TX]) -> Field {\n    // Convert each field element into a byte array and append the bytes to `hash_input_flattened`\n    let mut hash_input_flattened = [0; MAX_ENCRYPTED_LOGS_PER_TX * 32];\n    for offset in 0..MAX_ENCRYPTED_LOGS_PER_TX {\n        let input_as_bytes: [u8; 32] = logs[offset].value.to_be_bytes();\n        for byte_index in 0..32 {\n            hash_input_flattened[offset * 32 + byte_index] = input_as_bytes[byte_index];\n        }\n    }\n    // Ideally we would push to a slice then hash, but there is no sha_slice\n    // Hardcode to 256 bytes for now\n    let mut hash = sha256_to_field(hash_input_flattened);\n    // Not having a 0 value hash for empty logs causes issues with empty txs\n    // used for padding. Returning early is currently unsupported.\n    // We always provide sorted logs here, so 0 being empty means all are empty.\n    if is_empty(logs[0]) {\n        hash = 0;\n    }\n    hash\n}\n\npub fn compute_tx_note_logs_hash(logs: [LogHash; MAX_NOTE_ENCRYPTED_LOGS_PER_TX]) -> Field {\n    // Convert each field element into a byte array and append the bytes to `hash_input_flattened`\n    let mut hash_input_flattened = [0; MAX_NOTE_ENCRYPTED_LOGS_PER_TX * 32];\n    for offset in 0..MAX_NOTE_ENCRYPTED_LOGS_PER_TX {\n        let input_as_bytes: [u8; 32] = logs[offset].value.to_be_bytes();\n        for byte_index in 0..32 {\n            hash_input_flattened[offset * 32 + byte_index] = input_as_bytes[byte_index];\n        }\n    }\n    // Ideally we would push to a slice then hash, but there is no sha_slice\n    // Hardcode to 256 bytes for now\n    let mut hash = sha256_to_field(hash_input_flattened);\n    // Not having a 0 value hash for empty logs causes issues with empty txs\n    // used for padding. Returning early is currently unsupported.\n    // We always provide sorted logs here, so 0 being empty means all are empty.\n    if is_empty(logs[0]) {\n        hash = 0;\n    }\n    hash\n}\n\npub fn pedersen_hash<let N: u32>(inputs: [Field; N], hash_index: u32) -> Field {\n    std::hash::pedersen_hash_with_separator(inputs, hash_index)\n}\n\npub fn poseidon2_hash<let N: u32>(inputs: [Field; N]) -> Field {\n    std::hash::poseidon2::Poseidon2::hash(inputs, N)\n}\n\n#[no_predicates]\npub fn poseidon2_hash_with_separator<let N: u32, T>(\n    inputs: [Field; N],\n    separator: T\n) -> Field where T: ToField {\n    // We manually hash the inputs here, since we cannot express with the type system a constant size inputs array of N + 1\n    let in_len = N + 1;\n    let two_pow_64 = 18446744073709551616;\n    let iv : Field = (in_len as Field) * two_pow_64;\n    let mut sponge = std::hash::poseidon2::Poseidon2::new(iv);\n    sponge.absorb(separator.to_field());\n\n    for i in 0..inputs.len() {\n        sponge.absorb(inputs[i]);\n    }\n\n    sponge.squeeze()\n}\n\npub fn poseidon2_hash_with_separator_slice<T>(inputs: [Field], separator: T) -> Field where T: ToField {\n    let in_len = inputs.len() + 1;\n    let two_pow_64 = 18446744073709551616;\n    let iv : Field = (in_len as Field) * two_pow_64;\n    let mut sponge = std::hash::poseidon2::Poseidon2::new(iv);\n    sponge.absorb(separator.to_field());\n\n    for i in 0..inputs.len() {\n        sponge.absorb(inputs[i]);\n    }\n\n    sponge.squeeze()\n}\n\n#[no_predicates]\npub fn poseidon2_hash_bytes<let N: u32>(inputs: [u8; N]) -> Field {\n    // We manually hash the inputs here, since we cannot express with the type system a constant size inputs array of Math.ceil(N/31)\n    let mut in_len = N / 31;\n    let mut has_padding = false;\n    if N % 31 != 0 {\n        in_len += 1;\n        has_padding = true;\n    }\n\n    let two_pow_64 = 18446744073709551616;\n    let iv : Field = (in_len as Field) * two_pow_64;\n    let mut sponge = std::hash::poseidon2::Poseidon2::new(iv);\n\n    let mut current_field = [0; 31];\n    for i in 0..inputs.len() {\n        let index = i % 31;\n        current_field[index] = inputs[i];\n        if index == 30 {\n            sponge.absorb(field_from_bytes(current_field, false));\n            current_field = [0; 31];\n        }\n    }\n    if has_padding {\n        sponge.absorb(field_from_bytes(current_field, false));\n    }\n\n    sponge.squeeze()\n}\n\n#[test]\nfn smoke_sha256_to_field() {\n    let full_buffer = [\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\n        20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\n        40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,\n        60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,\n        80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,\n        100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119,\n        120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139,\n        140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159\n    ];\n    let result = sha256_to_field(full_buffer);\n\n    assert(result == 0x448ebbc9e1a31220a2f3830c18eef61b9bd070e5084b7fa2a359fe729184c7);\n\n    // to show correctness of the current ver (truncate one byte) vs old ver (mod full bytes):\n    let result_bytes = std::hash::sha256(full_buffer);\n    let truncated_field = crate::utils::field::field_from_bytes_32_trunc(result_bytes);\n    assert(truncated_field == result);\n    let mod_res = result + (result_bytes[31] as Field);\n    assert(mod_res == 0x448ebbc9e1a31220a2f3830c18eef61b9bd070e5084b7fa2a359fe729184e0);\n}\n\n#[test]\nfn compute_l2_l1_hash() {\n    // All zeroes\n    let hash_result = compute_l2_to_l1_hash(AztecAddress::from_field(0), EthAddress::zero(), 0, 0, 0);\n    assert(hash_result == 0xb393978842a0fa3d3e1470196f098f473f9678e72463cb65ec4ab5581856c2);\n\n    // Non-zero case\n    let hash_result = compute_l2_to_l1_hash(AztecAddress::from_field(1), EthAddress::from_field(3), 5, 2, 4);\n    assert(hash_result == 0x3f88c1044a05e5340ed20466276500f6d45ca5603913b9091e957161734e16);\n}\n\n#[test]\nfn silo_l2_to_l1_message_matches_typescript() {\n    let version = 4;\n    let chainId = 5;\n\n    let hash = silo_l2_to_l1_message(\n        ScopedL2ToL1Message {\n        message: L2ToL1Message { recipient: EthAddress::from_field(1), content: 2, counter: 0 },\n        contract_address: AztecAddress::from_field(3)\n    },\n        version,\n        chainId\n    );\n\n    // The following value was generated by `l2_to_l1_message.test.ts`\n    let hash_from_typescript = 0x00c6155d69febb9d5039b374dd4f77bf57b7c881709aa524a18acaa0bd57476a;\n\n    assert_eq(hash, hash_from_typescript);\n}\n"},"319":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/noir-protocol-circuits/crates/types/src/data/public_data_tree_leaf_preimage.nr","source":"use crate::{merkle_tree::leaf_preimage::IndexedTreeLeafPreimage, traits::{Empty, Hash}};\n\npub struct PublicDataTreeLeafPreimage {\n    slot : Field,\n    value: Field,\n    next_slot :Field,\n    next_index : u32,\n}\n\nimpl Empty for PublicDataTreeLeafPreimage {\n    fn empty() -> Self {\n        Self { slot: 0, value: 0, next_slot: 0, next_index: 0 }\n    }\n}\n\nimpl Hash for PublicDataTreeLeafPreimage {\n    fn hash(self) -> Field {\n        if self.is_empty() {\n            0\n        } else {\n            crate::hash::poseidon2_hash([self.slot, self.value, (self.next_index as Field), self.next_slot])\n        }\n    }\n}\n\nimpl IndexedTreeLeafPreimage for PublicDataTreeLeafPreimage {\n    fn get_key(self) -> Field {\n        self.slot\n    }\n\n    fn get_next_key(self) -> Field {\n        self.next_slot\n    }\n\n    fn as_leaf(self) -> Field {\n        self.hash()\n    }\n}\n\nimpl PublicDataTreeLeafPreimage {\n    pub fn is_empty(self) -> bool {\n        (self.slot == 0) & (self.value == 0) & (self.next_slot == 0) & (self.next_index == 0)\n    }\n}\n"},"335":{"path":"/Users/envoy1084/nargo/github.com/noir-lang/noir_string_searchv0.2.0/src/lib.nr","source":"mod utils;\n\npub use utils::{conditional_select, lt_f, DebugRandomEngine};\n\n/**\n * @brief represents a byte-array of up to MaxBytes, that is used as a \"haystack\" array,\n *        where we want to validate a substring \"needle\" is present in the \"haystack\" \n * @details the \"body\" parameter contains some input bytes, zero-padded to the nearest multiple of 31\n *          We pack \"bytes\" into 31-byte \"chunks\", as this is the maximum number of bytes we can fit\n *          into a field element without overflowing.\n *          TODO: once we can derive generics via arithmetic on other generics, we want this \"31\" parameter\n *          to be defined by the backend being used instead of being hardcoded to 31\n *\n * @note We perform this 31-byte packing because it dramatically reduces the number of constraints required for substring matching. See (chicken)\n *\n * @tparam MaxBytes: the maximum number of bytes that StringBody can contain\n * @tparam MaxPaddedBytes: the maximum number of bytes after zero-padding to the nearest multiple of 31\n * @tparam PaddedChunks: the number of 31-byte chunks needed to represent MaxPaddedBytes\n **/\nstruct StringBody<let MaxPaddedBytes: u32, let PaddedChunks: u32, let MaxBytes: u32> {\n    body: [u8; MaxPaddedBytes],\n    chunks: [Field; PaddedChunks],\n    byte_length: u32\n}\n\n/**\n * @brief represents a byte-array of up to MaxBytes, that is used as a \"needle\" array,\n *        where we want to validate a substring \"needle\" is present in the \"haystack\" \n * @tparam MaxBytes: the maximum number of bytes that StringBody can contain\n * @tparam MaxPaddedBytes: the maximum number of bytes after zero-padding to the nearest multiple of 31\n * @tparam PaddedChunksMinusOne: the number of 31-byte chunks needed to represent MaxPaddedBytes minus one!\n *\n * @note PaddedChunksMinusOne is because we are going to do the following:\n *                            1. align the SubString bytes according to the StringBody bytes being matched against\n *                            2. split the aligned bytes into 31-byte chunks. The 1st and last chunks might contain\n *                               fewer than 31 bytes due to the above alignment\n *                            3. validate the aligned-byte-chunks match the StringBody byte chunks\n *       To account for the fact that the 1st and last chunks might have fewer bytes we treat those separately\n *       The param PaddedChunksMinusOne is the number of 31-byte chunks required to represent SubString *EXCLUDING* the initial and final chunks\n */\nstruct SubString<let MaxPaddedBytes: u32, let PaddedChunksMinusOne: u32, let MaxBytes: u32> {\n    body: [u8; MaxPaddedBytes],\n    byte_length: u32\n}\n\ntype StringBody32 = StringBody<62, 2, 32>;\ntype StringBody64 = StringBody<93, 3, 64>;\ntype StringBody128 = StringBody<155, 5, 128>;\ntype StringBody256 = StringBody<279, 9, 256>;\ntype StringBody512 = StringBody<527, 17, 512>;\ntype StringBody1024 = StringBody<1054, 34, 1024>;\ntype StringBody2048 = StringBody<2077, 67, 2048>;\ntype StringBody4096 = StringBody<4123, 133, 4096>;\ntype StringBody8192 = StringBody<8215, 265, 8192>;\ntype StringBody16384 = StringBody<16399, 529, 16384>;\n\ntype SubString32 = SubString<62, 1, 32>;\ntype SubString64 = SubString<93, 2, 64>;\ntype SubString128 = SubString<155, 4, 128>;\ntype SubString256 = SubString<279, 8, 256>;\ntype SubString512 = SubString<527, 16, 512>;\ntype SubString1024 = SubString<1054, 33, 1024>;\n\ntrait SubStringTrait {\n    fn match_chunks<let HaystackChunks: u32>(\n        self,\n        haystack: [Field; HaystackChunks],\n        num_bytes_in_first_chunk: Field,\n        body_chunk_offset: Field,\n        num_full_chunks: Field\n    );\n\n    fn len(self) -> u32;\n    fn get(self, idx: Field) -> u8;\n    fn get_body(self) -> [u8];\n}\n\n// ######################################################\n// S U B S T R I N G\n// ######################################################\nimpl<let MaxPaddedBytes: u32, let PaddedChunksMinusOne: u32, let MaxBytes: u32> SubString<MaxPaddedBytes, PaddedChunksMinusOne, MaxBytes> {\n\n    /**\n     * @brief construct a SubString object from an input byte array\n     * @details the input byte array must have a number of bytes less than or equal to MaxBytes\n     **/\n    fn new<let InputBytes: u32>(input: [u8; InputBytes], input_length: u32) -> Self {\n        assert(MaxBytes <= MaxPaddedBytes);\n        assert(input_length <= MaxBytes);\n        assert(InputBytes <= MaxBytes);\n        let mut body: [u8; MaxPaddedBytes] = [0; MaxPaddedBytes];\n        for i in 0..InputBytes {\n            body[i] = input[i];\n        }\n        SubString { body, byte_length: input_length }\n    }\n\n    /**\n     * @brief concatenate two SubString objects together\n     * @details each SubString can have different MaxBytes sizes, however we need OtherBytes <= MaxBytes\n     *          (use concat_into for cases where this is not the case)\n     **/\n    fn concat<let OtherPaddedBytes: u32, let OtherPaddedChunks: u32, let OtherMaxBytes: u32>(self, other: SubString<OtherPaddedBytes, OtherPaddedChunks, OtherMaxBytes>) -> Self {\n        assert(\n            OtherPaddedBytes <= MaxPaddedBytes, \"SubString::concat. SubString being concatted has larger max length. Try calling concat_into\"\n        );\n        assert(\n            self.byte_length + other.byte_length <= MaxPaddedBytes, \"SubString::concat, concatenated string exceeds MaxPaddedBytes\"\n        );\n        let mut body = self.body;\n        let offset: u32 = self.byte_length;\n        for i in 0..MaxPaddedBytes {\n            if (i + offset < MaxPaddedBytes) {\n                body[i + offset] = other.body[i];\n            }\n        }\n        SubString { body, byte_length: self.byte_length + other.byte_length }\n    }\n\n    /**\n     * @brief concatenate two SubString objects together. Return type has OtherPaddedBytes max bytes\n     * @details each SubString can have different MaxBytes sizes, however we need MaxBytes <= OtherBytes\n     *          (use concat for cases where this is not the case)\n     **/\n    fn concat_into<let OtherPaddedBytes: u32, let OtherPaddedChunks: u32, let OtherMaxBytes: u32>(\n        self,\n        other: SubString<OtherPaddedBytes, OtherPaddedChunks, OtherMaxBytes>\n    ) -> SubString<OtherPaddedBytes, OtherPaddedChunks, OtherMaxBytes> {\n        assert(\n            MaxPaddedBytes <= OtherPaddedBytes, \"SubString::concat_into. SubString being concat has larger max length. Try calling concat\"\n        );\n        assert(\n            self.byte_length + other.byte_length <= OtherPaddedBytes, \"SubString::concat_into, concatenated string exceeds MaxPaddedBytes\"\n        );\n        let mut body: [u8; OtherPaddedBytes] = [0; OtherPaddedBytes];\n        for i in 0..MaxBytes {\n            body[i] = self.body[i];\n        }\n\n        let offset: u32 = self.byte_length;\n        for i in 0..OtherPaddedBytes {\n            if (i + offset < OtherPaddedBytes) {\n                body[i + offset] = other.body[i];\n            }\n        }\n        SubString { body, byte_length: self.byte_length + other.byte_length }\n    }\n}\n\nimpl<let MaxPaddedBytes: u32, let PaddedChunksMinusOne: u32, let MaxBytes: u32> SubStringTrait for SubString<MaxPaddedBytes, PaddedChunksMinusOne, MaxBytes> {\n\n    fn len(self) -> u32 {\n        self.byte_length\n    }\n    fn get(self, idx: Field) -> u8 {\n        self.body[idx]\n    }\n    fn get_body(self) -> [u8] {\n        let x = self.body.as_slice();\n        x\n    }\n\n    /**\n     * @brief given some `haystack` 31-byte chunks, validate that there exist `num_full_chunks`\n     *        in the SubString, starting at byte position `starting_needle_byte`.\n     *        The selected chunks must be equal to the haystack chunks starting at `starting_haystack_chunk`\n     **/\n    fn match_chunks<let HaystackChunks: u32>(\n        self,\n        haystack: [Field; HaystackChunks],\n        starting_needle_byte: Field,\n        starting_haystack_chunk: Field,\n        num_full_chunks: Field\n    ) {\n        let mut substring_chunks: [Field; PaddedChunksMinusOne] = [0; PaddedChunksMinusOne];\n        // pack the substring into 31 byte chunks.\n        // This is fairly expensive as we need a ROM table to access the SubString.body\n        // which is 2 gates per byte\n        for i in 0..PaddedChunksMinusOne {\n            let mut slice: Field = 0;\n            for j in 0..31 {\n                slice *= 256;\n                let substring_idx = starting_needle_byte as Field + (i as Field * 31) + j as Field;\n                let mut byte = self.body[substring_idx];\n                slice += byte as Field;\n            }\n            std::as_witness(slice);\n            substring_chunks[i] = slice;\n        }\n        // iterate over the needle chunks and validate they match the haystack chunks\n        for i in 0..PaddedChunksMinusOne {\n            let predicate: Field = lt_f(i as Field, num_full_chunks) as Field;\n            let lhs = substring_chunks[i];\n            let rhs = haystack[predicate as Field * (i as Field + starting_haystack_chunk)];\n            assert(predicate * (lhs - rhs) == 0);\n        }\n    }\n}\n\n// ######################################################\n// S T R I N G   B O D Y\n// ######################################################\nimpl<let MaxPaddedBytes: u32, let PaddedChunks: u32, let MaxBytes: u32> StringBody<MaxPaddedBytes, PaddedChunks, MaxBytes> {\n\n    /**\n     * @brief construct a StringBody object from an input byte array\n     * @details the input byte array must have a number of bytes less than or equal to MaxBytes\n     **/\n    fn new<let InputBytes: u32>(data: [u8; InputBytes], length: u32) -> Self {\n        assert(length <= MaxBytes);\n        assert(length <= InputBytes);\n        let mut body: [u8; MaxPaddedBytes] = [0; MaxPaddedBytes];\n        for i in 0..InputBytes {\n            body[i] = data[i];\n        }\n        StringBody { body, chunks: compute_chunks(body), byte_length: length }\n    }\n\n    /**\n     * @brief Validate a substring exists in the StringBody. Returns a success flag and the position within the StringBody that the match was found\n     **/\n    fn substring_match<NeedleSubString>(\n        self,\n        substring: NeedleSubString\n    ) -> (bool, u32) where NeedleSubString : SubStringTrait {\n        // use unconstrained function to determine:\n        // a: is the substring present in the body text\n        // b: the position of the first match in the body text \n        let position: u32 = unsafe {\n            // Safety: The rest of this function checks this.\n            utils::search(\n                self.body,\n                substring.get_body(),\n                self.byte_length,\n                substring.len()\n            )\n        };\n\n        assert(\n            position + substring.len() <= self.byte_length, \"substring not present in main text (match found if a padding text included. is main text correctly formatted?)\"\n        );\n        let substring_length = substring.len();\n\n        // chunk_index = which 31-byte haystack chunk does the needle begin in?\n        let chunk_index: u32 = position / 31;\n        // chunk_offset = how many haystack bytes are present in the 1st haystack chunk?\n        let chunk_offset: u32 = position % 31;\n        // how many needle bytes are in 1st haystack chunk?\n        let num_bytes_in_first_chunk: u32 = 31 - chunk_offset;\n        let mut starting_needle_byte_index_of_final_chunk: Field = 0;\n        let mut chunk_index_of_final_haystack_chunk_with_matching_needle_bytes: Field = 0;\n        let mut num_full_chunks = 0;\n\n        // is there only one haystack chunk that contains needle bytes?\n        let merge_initial_final_needle_chunks = lt_f(substring_length as Field, num_bytes_in_first_chunk as Field);\n\n        // if the above is false...\n        if (!merge_initial_final_needle_chunks) {\n            // compute how many full 31-byte haystack chunks contain 31 needle bytes\n            num_full_chunks = (substring_length - num_bytes_in_first_chunk) / 31;\n            // for the final haystack chunk that contains needle bytes, where in the needle does this chunk begin?\n            starting_needle_byte_index_of_final_chunk = num_full_chunks as Field * 31 + num_bytes_in_first_chunk as Field;\n            // what is the index of the final haystack chunk that contains needle bytes?\n            chunk_index_of_final_haystack_chunk_with_matching_needle_bytes = num_full_chunks as Field + chunk_index as Field + 1;\n        } else {\n            starting_needle_byte_index_of_final_chunk = 0;\n            // if the needle bytes does NOT span more than 1 haystack chunk,\n            // the final haystack index will be the same as the initial haystack index\n            chunk_index_of_final_haystack_chunk_with_matching_needle_bytes = chunk_index as Field;\n        }\n\n        // To minimize the number of comparisons between the haystack bytes and the needle bytes,\n        // we pack both the haystack bytes and needle bytes into 31-byte Field \"chunks\" and compare chunks.\n        // To do this correctly, we need to align the needle chunks with the haystack chunks\n        /*\n            e.g. consider a toy example where we pack 3 bytes into a chunk\n            haystack: [VWXZYABCDEQRSTU]\n            needle: [ABCDE]\n\n            when constructing needle chunks, we need to align according to where the needle is located in the haystack\n            haystack chunks:   [VWX] [ZYA] [BCD] [EQR] [STU]\n                                      _..   ...   .__\n            processed needle chunks: [ZYA] [BCD] [EQR]\n\n            a \"_\" symbole means that a chunk byte has been sourced from the haystack bytes,\n            a \".\" symbol means a byte is sourced from the needle bytes\n\n            Both the initial and final chunks of the processed needle are \"composite\" constructions.\n            If chunk byte index < `position` or is > `position + needle length\", byte is sourced from haystack, otherwise byte is sourced from needle\n\n            The way we execute this in code is to define an \"initial\" needle chunk and a \"final\" needle chunk.\n            Num needle bytes in initial chunk = position % 31\n            Num needle bytes in final chunk = (needle_length - (position % 31)) % 31\n\n            If needle_length < 31 then the \"initial\" and \"final\" chunks\n            are actually the *same* chunk and we must perform a merge operation\n            (see later in algo for comments)\n        */\n\n        // instead of directly reading haystack bytes, we derive the bytes from the haystack chunks.\n        // This way we don't have to instantiate the haystack bytes as a ROM table, which would cost 2 * haystack.length gates\n        let offset_to_first_needle_byte_in_chunk: Field = chunk_offset as Field;\n        let initial_haystack_chunk = self.chunks[chunk_index];\n        let final_haystack_chunk = self.chunks[chunk_index_of_final_haystack_chunk_with_matching_needle_bytes];\n\n        let initial_body_bytes: [u8; 31] = initial_haystack_chunk.to_be_bytes();\n        let final_body_bytes: [u8; 31] = final_haystack_chunk.to_be_bytes();\n\n        // When defining the initial chunk bytes, we can represent as Field elements as we are deriving values from known bytes.\n        // This saves us a few gates\n        let mut initial_chunk: [Field; 31] = [0; 31];\n        let mut final_chunk: [Field; 31] = [0; 31];\n        for i in 0..31 {\n            // if i < offset_to_first_needle_byte_in_chunk, we read from the haystack\n            // otherwise we read from the needle\n            // n.b. this can be done with an if statement, but the following code produces fewer constraints\n            let idx: Field = i as Field;\n            let predicate: Field = lt_f(i as Field, offset_to_first_needle_byte_in_chunk) as Field;\n            let lhs: Field = initial_body_bytes[i] as Field;\n            // if i < offset_to_first_needle_byte_in_chunk then `idx - offset_to_first_needle_byte_in_chunk` is negative\n            // to ensure we access array correctly we need to set the lookup index to 0 if predicate = 0\n            let substring_idx = (1 - predicate) * (idx - offset_to_first_needle_byte_in_chunk);\n            let rhs: Field = substring.get(substring_idx) as Field;\n            let byte: Field = predicate * (lhs - rhs) + rhs;\n            initial_chunk[i] = byte;\n        }\n\n        // If `merge_initial_final_needle_chunks = true`, `final_chunk` will contain the full needle data,\n        // this requires some complex logic to determine where we are sourcing the needle bytes from.\n        // Either they come from the `initial_chunk`, the haystack bytes or the substring bytes.\n        for i in 0..31 {\n            let mut lhs_index: Field = starting_needle_byte_index_of_final_chunk as Field + i as Field;\n            let predicate = lt_f(lhs_index, substring_length as Field);\n\n            /*\n                | merge_initial_final_needle_chunks | predicate | byte_source              |\n                | false                             | false     | body_bytes[i]            |\n                | false                             | true      | substring[lhs_idx]       |\n                | true                              | false     | body_bytes[i]            |\n                | true                              | true      | initial_chunk[lhs_index] |\n\n                NOTE: if `merge = true` and `predicate = true`, we read from `initial_chunk` to short-circuit some extra logic.\n                      if `initial_chunk` did not exist, then we would need to validate whether `i < offset_to_first_needle_byte_in_chunk`.\n                      if true, the byte source would be body_bytes, otherwise the source would be substring bytes\n            */\n            let byte_from_substring = substring.get(lhs_index) as Field;\n            let byte_from_initial_chunk = initial_chunk[i] as Field;\n            let byte_from_haystack = final_body_bytes[i] as Field;\n\n            // TODO: find out why this cuts 1 gate per iteration\n            std::as_witness(byte_from_initial_chunk);\n\n            let p = predicate as Field;\n            let m = merge_initial_final_needle_chunks as Field;\n            // p * (m * (a - b) + (b - c)) + c\n            let ab = byte_from_initial_chunk - byte_from_substring;\n            std::as_witness(ab);\n            let bc = byte_from_substring - byte_from_haystack;\n            let t0 = m * ab + bc;\n            let destination_byte = p * t0 + byte_from_haystack;\n\n            final_chunk[i] = destination_byte;\n        }\n\n        // TODO: moving this above the previous code block adds 31 gates. find out why? :/ \n        let mut initial_needle_chunk: Field = 0;\n        let mut final_needle_chunk: Field = 0;\n\n        // Construct the initial and final needle chunks from the byte arrays we previously built.\n        // Validate they match the initial and final haystack chunks\n        for i in 0..31 {\n            initial_needle_chunk *= 256;\n            initial_needle_chunk += initial_chunk[i];\n            final_needle_chunk *= 256;\n            final_needle_chunk += final_chunk[i];\n        }\n\n        std::as_witness(initial_needle_chunk);\n        std::as_witness(final_needle_chunk);\n\n        initial_needle_chunk = merge_initial_final_needle_chunks as Field * (final_needle_chunk - initial_needle_chunk) + initial_needle_chunk;\n        assert(initial_needle_chunk == initial_haystack_chunk);\n        assert(final_needle_chunk == final_haystack_chunk);\n\n        // Step 3: Construct needle chunks (for all but the 1st and last chunks) and validate they match the haystack chunks.\n        //         This part is much simpler as we know that all bytes in the chunk are sourced from the needle chunk.\n        // NOTE:   If we chose to not pack bytes into 31-byte chunks, the string matching algorithm would be simpler but more expensive.\n        //         Instead of matching chunks with each other, we would match individual byte values.\n        //         i.e. the number of iterations in this loop would be 31x greater\n        //         each loop iteration would also require a predicate, to check whether the byte index was within the needle range or not\n        //         Combined these two operations would add about 10 gates per loop iteration,\n        //         combined with a 31x iteration length would make this algorithm much more costly than the chunked variant\n        let body_chunk_offset: Field = chunk_index as Field + 1;\n        substring.match_chunks(\n            self.chunks,\n            num_bytes_in_first_chunk as Field,\n            body_chunk_offset,\n            num_full_chunks as Field\n        );\n        (true, position)\n    }\n}\n\n/// Given an input byte array, convert into 31-byte chunks\n/// \n/// Cost: ~0.5 gates per byte\nfn compute_chunks<let MaxPaddedBytes: u32, let PaddedChunks: u32>(body: [u8; MaxPaddedBytes]) -> [Field; PaddedChunks] {\n    let mut chunks: [Field; PaddedChunks] = [0; PaddedChunks];\n    for i in 0..PaddedChunks {\n        let mut limb: Field = 0;\n        for j in 0..31 {\n            limb *= 256;\n            limb += body[i * 31 + j] as Field;\n        }\n        chunks[i] = limb;\n        std::as_witness(chunks[i]);\n    }\n    chunks\n}\n\n#[test]\nfn test() {\n    let haystack_text = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\".as_bytes();\n    let needle_text = \" dolor in reprehenderit in voluptate velit esse\".as_bytes();\n\n    let mut haystack: StringBody512 = StringBody::new(haystack_text, haystack_text.len());\n    let mut needle: SubString64 = SubString::new(needle_text, needle_text.len());\n\n    let result = haystack.substring_match(needle);\n    assert(result.0 == true);\n}\n\n#[test]\nfn test_small_needle() {\n    let haystack_text = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\".as_bytes();\n    let needle_text = \"olor\".as_bytes();\n    let mut haystack: StringBody512 = StringBody::new(haystack_text, haystack_text.len());\n    let mut needle: SubString32 = SubString::new(needle_text, needle_text.len());\n\n    let result = haystack.substring_match(needle);\n    assert(result.0 == true);\n}\n\n#[test]\nfn test_needle_aligned_on_byte_boundary() {\n    let haystack_text = \"the quick brown fox jumped over the lazy dog\".as_bytes();\n    let needle_text = \" the lazy dog\".as_bytes();\n\n    let mut haystack: StringBody256 = StringBody::new(haystack_text, haystack_text.len());\n    let mut needle: SubString256 = SubString::new(needle_text, needle_text.len());\n\n    let result = haystack.substring_match(needle);\n    assert(result.0 == true);\n}\n\n#[test]\nfn test_needle_haystack_equal_size() {\n    let haystack_text = \"the quick brown fox jumped over the lazy dog lorem ipsum blahhhh\".as_bytes();\n    let needle_text = \"the quick brown fox jumped over the lazy dog lorem ipsum blahhhh\".as_bytes();\n\n    let mut haystack: StringBody64 = StringBody::new(haystack_text, haystack_text.len());\n    let mut needle: SubString64 = SubString::new(needle_text, needle_text.len());\n\n    let result = haystack.substring_match(needle);\n    assert(result.0 == true);\n}\n\n#[test]\nfn test_concat() {\n    let email_text = \"account recovery for Bartholomew Fibblesworth\".as_bytes();\n    let username = \"Bartholomew Fibblesworth\".as_bytes();\n    let mut padded_email_text: [u8; 256] = [0; 256];\n    let mut padded_username: [u8; 100] = [0; 100];\n    for i in 0..username.len() {\n        padded_username[i] = username[i];\n    }\n    for i in 0..email_text.len() {\n        padded_email_text[i] = email_text[i];\n    }\n    let needle_text_init = \"account recovery for \".as_bytes();\n\n    let needle_start: SubString128 = SubString::new(needle_text_init, needle_text_init.len());\n    let needle_end: SubString128 = SubString::new(padded_username, username.len());\n    let needle = needle_start.concat(needle_end);\n\n    for i in 0..45 {\n        assert(needle.body[i] == email_text[i]);\n    }\n\n    let haystack: StringBody256 = StringBody::new(padded_email_text, 200);\n    let (result, _): (bool, u32) = haystack.substring_match(needle);\n    assert(result == true);\n}\n\n#[test]\nfn test_concat_into() {\n    let email_text = \"account recovery for Bartholomew Fibblesworth\".as_bytes();\n    let username = \"Bartholomew Fibblesworth\".as_bytes();\n    let mut padded_email_text: [u8; 256] = [0; 256];\n    let mut padded_username: [u8; 100] = [0; 100];\n    for i in 0..username.len() {\n        padded_username[i] = username[i];\n    }\n    for i in 0..email_text.len() {\n        padded_email_text[i] = email_text[i];\n    }\n    let needle_text_init = \"account recovery for \".as_bytes();\n\n    let needle_start: SubString32 = SubString::new(needle_text_init, needle_text_init.len());\n    let needle_end: SubString128 = SubString::new(padded_username, username.len());\n    let needle = needle_start.concat_into(needle_end);\n\n    for i in 0..45 {\n        assert(needle.body[i] == email_text[i]);\n    }\n\n    let haystack: StringBody256 = StringBody::new(padded_email_text, 200);\n    let (result, _): (bool, u32) = haystack.substring_match(needle);\n    assert(result == true);\n}\n\n#[test]\nunconstrained fn test_partial_match() {\n    let mut Engine = DebugRandomEngine { seed: 0 };\n    let mut foo: [u8; 1024] = Engine.get_random_bytes();\n    let mut bar: [u8; 128] = [0; 128];\n    for i in 0..128 {\n        bar[i] = foo[i + 123];\n    }\n    let position = utils::search(foo, bar.as_slice(), 1024, 128);\n\n    assert(position == 123);\n}\n"},"336":{"path":"/Users/envoy1084/nargo/github.com/noir-lang/noir_string_searchv0.2.0/src/utils.nr","source":"unconstrained pub fn search<let N: u32>(\n    haystack: [u8; N],\n    needle: [u8],\n    haystack_length: u32,\n    needle_length: u32\n) -> u32 {\n    assert(needle_length > 0, \"needle length of size 0 not supported\");\n    assert(haystack_length > 0, \"haystack length of size 0 not supported\");\n    let mut found = false;\n    let mut found_index: u32 = 0;\n    for i in 0..haystack_length - needle_length + 1 {\n        if (found == true) {\n            break;\n        }\n        for j in 0..needle_length {\n            if haystack[i + j] != needle[j] {\n                break;\n            } else if (j == needle_length - 1) {\n                found = true;\n            }\n            if (found == true) {\n                found_index = i;\n                break;\n            }\n        }\n    }\n    assert(found == true, \"utils::search could not find needle in haystack\");\n    found_index\n}\n\nunconstrained fn __conditional_select(lhs: u8, rhs: u8, predicate: bool) -> u8 {\n    if (predicate) { lhs } else { rhs }\n}\n\npub fn conditional_select<T>(lhs: u8, rhs: u8, predicate: bool) -> u8 {\n    // Safety: This is all just a very verbose `if (predicate) { lhs } else { rhs }`\n    // formulated as `rhs + (lhs - rhs) * predicate`\n    unsafe {\n        let result = __conditional_select(lhs, rhs, predicate);\n        let result_f = result as Field;\n        let lhs_f = lhs as Field;\n        let rhs_f = rhs as Field;\n\n        let diff = lhs_f - rhs_f;\n        std::as_witness(diff);\n        assert_eq((predicate as Field) * diff + rhs_f, result_f);\n        result\n    }\n}\n\nunconstrained pub fn get_lt_predicate_f(x: Field, y: Field) -> bool {\n    let a = x as u32;\n    let b = y as u32;\n    a < b\n}\n\npub fn lt_f(x: Field, y: Field) -> bool {\n    // Safety: As `x` and `y` are known to be valid `u32`s, this function reimplements the\n    // compiler's internal implementation of `lt` \n    unsafe {\n        let predicate = get_lt_predicate_f(x, y);\n        let delta = y as Field - x as Field;\n        let lt_parameter = 2 * (predicate as Field) * delta - predicate as Field - delta;\n        lt_parameter.assert_max_bit_size(32);\n\n        predicate\n    }\n}\n\nstruct DebugRandomEngine {\n    seed: Field,\n}\n\nimpl DebugRandomEngine {\n    unconstrained fn get_random_32_bytes(&mut self) -> [u8; 32] {\n        self.seed += 1;\n        let input: [u8; 32] = self.seed.to_be_bytes();\n        let hash: [u8; 32] = dep::std::hash::sha256(input);\n        hash\n    }\n    unconstrained fn get_random_field(&mut self) -> Field {\n        let hash = self.get_random_32_bytes();\n        let mut result: Field = 0;\n        for i in 0..32 {\n            result *= 256;\n            result += hash[i] as Field;\n        }\n        result\n    }\n\n    unconstrained fn get_random_bytes<let NBytes: u32>(&mut self) -> [u8; NBytes] {\n        let num_chunks = (NBytes / 32) + ((NBytes % 32) != 0) as u32;\n\n        let mut result: [u8; NBytes] = [0; NBytes];\n        for i in 0..num_chunks - 1 {\n            let bytes = self.get_random_32_bytes();\n            for j in 0..32 {\n                result[i * 32 + j] = bytes[j];\n            }\n        }\n\n        let bytes = self.get_random_32_bytes();\n        for j in 0..(NBytes - (num_chunks - 1) * 32) {\n            result[(num_chunks - 1) * 32 + j] = bytes[j];\n        }\n        result\n    }\n}\n\n"},"337":{"path":"/Users/envoy1084/nargo/github.com/zkemail/zkemail.nrv0.3.2/lib/src/lib.nr","source":"use dep::std::{hash::pedersen_hash, collections::bounded_vec::BoundedVec};\nuse crate::dkim::RSAPubkey;\n\npub mod dkim;\npub mod headers;\npub mod partial_hash;\npub mod masking;\n// mod macro;\nmod tests;\n\nglobal RSA_EXPONENT: u32 = 65537;\nglobal KEY_BYTES_1024: u32 = 128;\nglobal KEY_BYTES_2048: u32 = 256;\nglobal KEY_LIMBS_1024: u32 = 9;\nglobal KEY_LIMBS_2048: u32 = 18;\nglobal BODY_HASH_BASE64_LENGTH: u32 = 44;\nglobal CR: u8 = 0x0D;\nglobal LF: u8 = 0x0A;\nglobal MAX_DKIM_HEADER_FIELD_LENGTH: u32 = 300; // kinda arbitrary but gives > 100 chars for selector and domain\nglobal MAX_EMAIL_ADDRESS_LENGTH: u32 = 320;\n\npub struct Sequence {\n    index: u32,\n    length: u32\n}\n\nimpl Sequence {\n    pub fn end_index(self) -> u32 {\n        self.index + self.length\n    }\n}\n// allowable chars in an email address (js/src/utils:makeAllowableEmailCharsTable()\n// \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.-@\" = 1\n// \"<: \" = 2\n// \">\\r\\n\" = 3\nglobal EMAIL_ADDRESS_CHAR_TABLE: [u8; 123] = [\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    3, 0, 0, 3, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 2, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 1, 1, 0, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 2, 0,\n    2, 0, 3, 0, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 0, 0, 0, 0, 0, 0, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1,\n];\n\n/**\n * Standard outputs that essentially every email circuit will need to export (alongside app-specific outputs)\n * @notice if you only need the pubkey hash just import pedersen and hash away \n *\n * @param pubkey - the BN limbs of the DKIM RSA pubkey\n * @param signature - the BN limbs of the DKIM RSA signature\n * @returns\n *        0: Pedersen hash of DKIM public key (root of trust)\n *        1: Pedersen hash of DKIM signature (email nullifier)\n */\npub fn standard_outputs<let KEY_BYTE_LENGTH: u32>(\n    pubkey: [Field; KEY_BYTE_LENGTH],\n    signature: [Field; KEY_BYTE_LENGTH]\n) -> [Field; 2] {\n    // create pedersen hash of DKIM signing key to minimize public outputs\n    let pubkey_hash = pedersen_hash(pubkey);\n    // create email nullifier for email\n    let email_nullifier = pedersen_hash(signature);\n    // output the root of trust and email nullifier\n    [pubkey_hash, email_nullifier]\n}\n\n/**\n * Default email verification function\n * @dev use #[zkemail] attribute macro to apply other functionality\n *\n * @param MAX_EMAIL_HEADER_LENGTH - The maximum length of the email header\n * @param KEY_LIMBS - The number of limbs in the RSA pubkey\n * @param header - The email header, 0-padded at end to the MAX_EMAIL_HEADER_LENGTH\n * @param pubkey - The DKIM RSA Public Key modulus and reduction parameter\n * @param signature - The DKIM RSA Signature\n */\npub fn verify_email<\n    let MAX_EMAIL_HEADER_LENGTH: u32,\n    let MAX_EMAIL_BODY_LENGTH: u32, // sometimes unused but needed for macro\n    let KEY_LIMBS: u32\n>(\n    header: BoundedVec<u8, MAX_EMAIL_HEADER_LENGTH>,\n    pubkey: RSAPubkey<KEY_LIMBS_2048>,\n    signature: [Field; KEY_LIMBS_2048]\n) {\n    // check the body and header lengths are within bounds\n    assert(header.len() <= MAX_EMAIL_HEADER_LENGTH);\n\n    // ~ 86,553 constraints with 2048-bit RSA & 1024 bit max header length\n    // verify the dkim signature over the header\n    pubkey.verify_dkim_signature(header, signature);\n}\n"},"34":{"path":"std/hash/poseidon2.nr","source":"use crate::hash::Hasher;\nuse crate::default::Default;\n\ncomptime global RATE: u32 = 3;\n\npub struct Poseidon2 {\n    cache: [Field;3],\n    state: [Field;4],\n    cache_size: u32,\n    squeeze_mode: bool, // 0 => absorb, 1 => squeeze\n}\n\nimpl Poseidon2 {\n    #[no_predicates]\n    pub fn hash<let N: u32>(input: [Field; N], message_size: u32) -> Field {\n        if message_size == N {\n            Poseidon2::hash_internal(input, N, false)\n        } else {\n            Poseidon2::hash_internal(input, message_size, true)\n        }\n    }\n\n    pub(crate) fn new(iv: Field) -> Poseidon2 {\n        let mut result = Poseidon2 { cache: [0; 3], state: [0; 4], cache_size: 0, squeeze_mode: false };\n        result.state[RATE] = iv;\n        result\n    }\n\n    fn perform_duplex(&mut self) {\n        // add the cache into sponge state\n        for i in 0..RATE {\n            // We effectively zero-pad the cache by only adding to the state\n            // cache that is less than the specified `cache_size`\n            if i < self.cache_size {\n                self.state[i] += self.cache[i];\n            }\n        }\n        self.state = crate::hash::poseidon2_permutation(self.state, 4);\n    }\n\n    fn absorb(&mut self, input: Field) {\n        assert(!self.squeeze_mode);\n        if self.cache_size == RATE {\n            // If we're absorbing, and the cache is full, apply the sponge permutation to compress the cache\n            self.perform_duplex();\n            self.cache[0] = input;\n            self.cache_size = 1;\n        } else {\n            // If we're absorbing, and the cache is not full, add the input into the cache\n            self.cache[self.cache_size] = input;\n            self.cache_size += 1;\n        }\n    }\n\n    fn squeeze(&mut self) -> Field {\n        assert(!self.squeeze_mode);\n        // If we're in absorb mode, apply sponge permutation to compress the cache.\n        self.perform_duplex();\n        self.squeeze_mode = true;\n\n        // Pop one item off the top of the permutation and return it.\n        self.state[0]\n    }\n\n    fn hash_internal<let N: u32>(input: [Field; N], in_len: u32, is_variable_length: bool) -> Field {\n        let two_pow_64 = 18446744073709551616;\n        let iv : Field = (in_len as Field) * two_pow_64;\n        let mut sponge = Poseidon2::new(iv);\n        for i in 0..input.len() {\n            if i < in_len {\n                sponge.absorb(input[i]);\n            }\n        }\n\n        // In the case where the hash preimage is variable-length, we append `1` to the end of the input, to distinguish\n        // from fixed-length hashes. (the combination of this additional field element + the hash IV ensures\n        // fixed-length and variable-length hashes do not collide)\n        if is_variable_length {\n            sponge.absorb(1);\n        }\n        sponge.squeeze()\n    }\n}\n\npub struct Poseidon2Hasher{\n    _state: [Field],\n}\n\nimpl Hasher for Poseidon2Hasher {\n    fn finish(self) -> Field {\n        let iv : Field = (self._state.len() as Field) * 18446744073709551616; // iv = (self._state.len() << 64)\n        let mut sponge = Poseidon2::new(iv);\n        for i in 0..self._state.len() {\n            sponge.absorb(self._state[i]);\n        }\n        sponge.squeeze()\n    }\n\n    fn write(&mut self, input: Field) {\n        self._state = self._state.push_back(input);\n    }\n}\n\nimpl Default for Poseidon2Hasher {\n    fn default() -> Self {\n        Poseidon2Hasher { _state: &[] }\n    }\n}\n"},"342":{"path":"/Users/envoy1084/nargo/github.com/zkemail/zkemail.nrv0.3.2/lib/src/headers/email_address.nr","source":"use dep::std::collections::bounded_vec::BoundedVec;\nuse crate::{\n    Sequence, MAX_EMAIL_ADDRESS_LENGTH, EMAIL_ADDRESS_CHAR_TABLE,\n    headers::constrain_header_field_detect_last_angle_bracket\n};\n\npub fn get_email_address<let MAX_HEADER_LENGTH: u32, let HEADER_FIELD_NAME_LENGTH: u32>(\n    header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n    header_field_sequence: Sequence,\n    email_address_sequence: Sequence,\n    header_field_name: [u8; HEADER_FIELD_NAME_LENGTH]\n) -> BoundedVec<u8, MAX_EMAIL_ADDRESS_LENGTH> {\n    // check field is uninterrupted and matches the expected field name\n    let last_angle_bracket = constrain_header_field_detect_last_angle_bracket::<MAX_HEADER_LENGTH, MAX_EMAIL_ADDRESS_LENGTH + HEADER_FIELD_NAME_LENGTH + 1, HEADER_FIELD_NAME_LENGTH>(header, header_field_sequence, header_field_name);\n    // if angle bracket found, assert index is +1\n    if last_angle_bracket != 0 {\n        assert(\n            email_address_sequence.index == last_angle_bracket + 1, \"Email address must start immediately after '<' if bracket is present\"\n        );\n    }\n    // check email sequence is within header field\n    assert(\n        email_address_sequence.index >= header_field_sequence.index\n        & email_address_sequence.end_index() <= header_field_sequence.end_index(), \"Email address sequence out of bounds\"\n    );\n\n    // constrained get email address\n    parse_email_address(header, email_address_sequence)\n}\n\npub fn parse_email_address<let MAX_HEADER_LENGTH: u32>(\n    header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n    email_address_sequence: Sequence\n) -> BoundedVec<u8, MAX_EMAIL_ADDRESS_LENGTH> {\n    // check the sequence is proceeded by an acceptable character\n    if email_address_sequence.index != 0 {\n        assert(\n            EMAIL_ADDRESS_CHAR_TABLE[header.get_unchecked(email_address_sequence.index - 1)] == 2, \"Email address must start with an acceptable character\"\n        );\n    }\n    if email_address_sequence.end_index() < header.len() {\n        assert(\n            EMAIL_ADDRESS_CHAR_TABLE[header.get_unchecked(email_address_sequence.index + email_address_sequence.length)]\n            == 3, \"Email address must end with an acceptable character\"\n        );\n    }\n    // check the email address and assign\n    let mut email_address: BoundedVec<u8, MAX_EMAIL_ADDRESS_LENGTH> = BoundedVec::new();\n    for i in 0..MAX_EMAIL_ADDRESS_LENGTH {\n        let index = email_address_sequence.index + i;\n        if index < email_address_sequence.end_index() {\n            let letter = header.get_unchecked(index);\n            email_address.storage[i] = letter;\n            assert(\n                EMAIL_ADDRESS_CHAR_TABLE[letter] == 1, \"Email address must only contain acceptable characters\"\n            );\n        }\n    }\n    email_address.len = email_address_sequence.length;\n    // todo: should probably introduce a check for @\n\n    email_address\n}\n\n"},"343":{"path":"/Users/envoy1084/nargo/github.com/zkemail/zkemail.nrv0.3.2/lib/src/headers/mod.nr","source":"use crate::{Sequence, CR, LF};\n\npub mod body_hash;\npub mod email_address;\n\n\n\n/**\n * Constrain a sequence in a header to match the specific header field\n *\n * @param MAX_HEADER_LENGTH - The maximum length of the email header\n * @param MAX_HEADER_FIELD_LENGTH - The maximum length of the header field\n * @param HEADER_FIELD_NAME_LENGTH - The length of the header field name\n * @param header - The email header as validated in the DKIM signature\n * @param header_field_sequence - The sequence of the header field\n * @param header_field_name - The name of the header field\n */\npub fn constrain_header_field<\n    let MAX_HEADER_LENGTH: u32,\n    let MAX_HEADER_FIELD_LENGTH: u32,\n    let HEADER_FIELD_NAME_LENGTH: u32,\n>(\n    header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n    header_field_sequence: Sequence,\n    header_field_name: [u8; HEADER_FIELD_NAME_LENGTH],\n) {\n    // check that the sequence is within bounds\n    assert(\n        header_field_sequence.index + header_field_sequence.length <= header.len(),\n        \"Header field out of bounds\"\n    );\n    // check the range of the sequence is within the header (so we can use get_unchecked)\n    let end_index = header_field_sequence.index + header_field_sequence.length;\n    assert(end_index <= header.len(), \"Header field out of bounds of header\");\n\n    // if the sequence is not the start, check for a newline\n    if header_field_sequence.index != 0 {\n        assert(header.get_unchecked(header_field_sequence.index - 2) == CR, \"Header field must start with CRLF\");\n        assert(header.get_unchecked(header_field_sequence.index - 1) == LF, \"Header field must start with CRLF\");\n    }\n    // if the sequence is not the end, check for a newline\n    if end_index != header.len() {\n        assert(\n            header.get_unchecked(end_index) == CR,\n            \"Header field must end with CRLF\"\n        );\n        assert(header.get_unchecked(end_index + 1) == LF,\n        \"Header field must end with CRLF\"\n        );\n    }\n    // check that the header field name matches the expected name\n    for i in 0..HEADER_FIELD_NAME_LENGTH {\n        assert(\n            header.get_unchecked(header_field_sequence.index + i) == header_field_name[i],\n            \"Header field name does not match\"\n        );\n    }\n    assert(\n        header.get_unchecked(header_field_sequence.index + HEADER_FIELD_NAME_LENGTH) == 0x3a,\n        \"Header field name must be followed by a colon\"\n    );\n    // check the header field is uninterrupted\n    let start_index = header_field_sequence.index + HEADER_FIELD_NAME_LENGTH + 1;\n    for i in (HEADER_FIELD_NAME_LENGTH + 1)..MAX_HEADER_FIELD_LENGTH {\n        // is it safe enough to cut this constraint cost in half by not checking lf? i think so\n        let index = start_index + i;\n        if (index < header_field_sequence.index + header_field_sequence.length) {\n            assert(\n                header.get_unchecked(index) != CR,\n                \"Header field must not contain newlines\"\n            );\n        }\n    }\n}\n\n/**\n * contrain_header_field with checks for the last occurence of \"<\" inside the loop to save constraints\n */\npub fn constrain_header_field_detect_last_angle_bracket<\n    let MAX_HEADER_LENGTH: u32,\n    let MAX_HEADER_FIELD_LENGTH: u32,\n    let HEADER_FIELD_NAME_LENGTH: u32,\n>(\n    header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n    header_field_sequence: Sequence,\n    header_field_name: [u8; HEADER_FIELD_NAME_LENGTH],\n) -> u32 {\n    // check that the sequence is within bounds\n    assert(\n        header_field_sequence.index + header_field_sequence.length <= header.len(),\n        \"Header field out of bounds\"\n    );\n    // check the range of the sequence is within the header (so we can use get_unchecked)\n    let end_index = header_field_sequence.index + header_field_sequence.length;\n    assert(end_index <= header.len(), \"Header field out of bounds of header\");\n\n    // if the sequence is not the start, check for a newline\n    if header_field_sequence.index != 0 {\n        assert(header.get_unchecked(header_field_sequence.index - 2) == CR, \"Header field must start with CRLF\");\n        assert(header.get_unchecked(header_field_sequence.index - 1) == LF, \"Header field must start with CRLF\");\n    }\n    // if the sequence is not the end, check for a newline\n    if end_index != header.len() {\n        assert(\n            header.get_unchecked(end_index) == CR,\n            \"Header field must end with CRLF\"\n        );\n        assert(header.get_unchecked(end_index + 1) == LF,\n            \"Header field must end with CRLF\"\n        );\n    }\n    // check that the header field name matches the expected name\n    for i in 0..HEADER_FIELD_NAME_LENGTH {\n        assert(\n            header.get_unchecked(header_field_sequence.index + i) == header_field_name[i],\n            \"Header field name does not match\"\n        );\n    }\n    assert(\n        header.get_unchecked(header_field_sequence.index + HEADER_FIELD_NAME_LENGTH) == 0x3a,\n        \"Header field name must be followed by a colon\"\n    );\n    // check the header field is uninterrupted\n    let mut last_angle_bracket = 0;\n    let start_index = header_field_sequence.index + HEADER_FIELD_NAME_LENGTH + 1;\n    for i in (HEADER_FIELD_NAME_LENGTH + 1)..MAX_HEADER_FIELD_LENGTH {\n        // is it safe enough to cut this constraint cost in half by not checking lf? i think so\n        let index = start_index + i;\n        if (index < header_field_sequence.index + header_field_sequence.length) {\n            let byte = header.get_unchecked(index);\n            assert(\n                byte != CR,\n                \"Header field must not contain newlines\"\n            );\n            if byte == 0x3c {\n                last_angle_bracket = index;\n            }\n        }\n    }\n    last_angle_bracket\n}\n"},"346":{"path":"/Users/envoy1084/nargo/github.com/zkemail/zkemail.nrv0.3.2/lib/src/dkim.nr","source":"use dep::std::{collections::bounded_vec::BoundedVec, hash::{sha256_var, pedersen_hash}, panic::panic};\nuse dep::rsa::{bignum::{fields::{Params1024, Params2048}, runtime_bignum::BigNumInstance, BigNum}, types::RSA};\nuse crate::{KEY_LIMBS_1024, KEY_BYTES_1024, KEY_LIMBS_2048, KEY_BYTES_2048, RSA_EXPONENT};\n\ntype BN1024 = BigNum<KEY_LIMBS_1024, Params1024>;\ntype RSA1024 = RSA<BN1024, BigNumInstance<KEY_LIMBS_1024, Params1024>, KEY_BYTES_1024>;\ntype BN2048 = BigNum<KEY_LIMBS_2048, Params2048>;\ntype RSA2048 = RSA<BN2048, BigNumInstance<KEY_LIMBS_2048, Params2048>, KEY_BYTES_2048>;\n\npub struct RSAPubkey<let KEY_LIMBS: u32> {\n    modulus: [Field; KEY_LIMBS],\n    redc: [Field; KEY_LIMBS],\n}\n\nimpl<let KEY_LIMBS: u32> RSAPubkey<KEY_LIMBS> {\n    fn hash(self) -> Field {\n        pedersen_hash(self.modulus)\n    }\n}\n\nimpl RSAPubkey<KEY_LIMBS_1024> {\n    fn verify_dkim_signature<let MAX_HEADER_LENGTH: u32>(\n        self,\n        header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n        signature: [Field; KEY_LIMBS_1024]\n    ) {\n        // hash the header\n        let header_hash = sha256_var(header.storage, header.len() as u64);\n        // instantiate the BNInstance for the pubkey\n        // todo: make as BigNumInstance from the outset to reduce some work\n        let pubkey: BigNumInstance<KEY_LIMBS_1024, Params1024> = BigNumInstance::new(self.modulus, self.redc);\n\n        // instantiate BN for the signature\n        let signature: BN1024 = BigNum::from_array(signature);\n\n        // verify the DKIM signature over the header\n        let rsa: RSA1024 = RSA {};\n        assert(rsa.verify_sha256_pkcs1v15(pubkey, header_hash, signature, RSA_EXPONENT));\n    }\n}\n\nimpl RSAPubkey<KEY_LIMBS_2048> {\n    fn verify_dkim_signature<let MAX_HEADER_LENGTH: u32>(\n        self,\n        header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n        signature: [Field; KEY_LIMBS_2048]\n    ) {\n        // hash the header\n        let header_hash = sha256_var(header.storage, header.len() as u64);\n        // instantiate the BNInstance for the pubkey\n        // todo: make as BigNumInstance from the outset to reduce some work\n        let pubkey: BigNumInstance<KEY_LIMBS_2048, Params2048> = BigNumInstance::new(self.modulus, self.redc);\n\n        // instantiate BN for the signature\n        let signature: BN2048 = BigNum::from_array(signature);\n\n        // verify the DKIM signature over the header\n        let rsa: RSA2048 = RSA {};\n        assert(rsa.verify_sha256_pkcs1v15(pubkey, header_hash, signature, RSA_EXPONENT));\n    }\n}"},"35":{"path":"std/hash/sha256.nr","source":"use crate::runtime::is_unconstrained;\n\n// Implementation of SHA-256 mapping a byte array of variable length to\n// 32 bytes.\n\n// Deprecated in favour of `sha256_var`\n// docs:start:sha256\npub fn sha256<let N: u32>(input: [u8; N]) -> [u8; 32]\n// docs:end:sha256\n{\n    digest(input)\n}\n\n#[foreign(sha256_compression)]\npub fn sha256_compression(_input: [u32; 16], _state: [u32; 8]) -> [u32; 8] {}\n\n// SHA-256 hash function\n#[no_predicates]\npub fn digest<let N: u32>(msg: [u8; N]) -> [u8; 32] {\n    sha256_var(msg, N as u64)\n}\n\n// Convert 64-byte array to array of 16 u32s\nfn msg_u8_to_u32(msg: [u8; 64]) -> [u32; 16] {\n    let mut msg32: [u32; 16] = [0; 16];\n\n    for i in 0..16 {\n        let mut msg_field: Field = 0;\n        for j in 0..4 {\n            msg_field = msg_field * 256 + msg[64 - 4*(i + 1) + j] as Field;\n        }\n        msg32[15 - i] = msg_field as u32;\n    }\n\n    msg32\n}\n\nunconstrained fn build_msg_block_iter<let N: u32>(msg: [u8; N], message_size: u32, msg_start: u32) -> ([u8; 64], u32) {\n    let mut msg_block: [u8; BLOCK_SIZE] = [0; BLOCK_SIZE];\n    // We insert `BLOCK_SIZE` bytes (or up to the end of the message)\n    let block_input = if msg_start + BLOCK_SIZE > message_size {\n        if message_size < msg_start {\n            // This function is sometimes called with `msg_start` past the end of the message.\n            // In this case we return an empty block and zero pointer to signal that the result should be ignored.\n            0\n        } else {\n            message_size - msg_start\n        }\n    } else {\n        BLOCK_SIZE\n    };\n    for k in 0..block_input {\n        msg_block[k] = msg[msg_start + k];\n    }\n    (msg_block, block_input)\n}\n\n// Verify the block we are compressing was appropriately constructed\nfn verify_msg_block<let N: u32>(\n    msg: [u8; N],\n    message_size: u32,\n    msg_block: [u8; 64],\n    msg_start: u32\n) -> u32 {\n    let mut msg_byte_ptr: u32 = 0; // Message byte pointer\n    let mut msg_end = msg_start + BLOCK_SIZE;\n    if msg_end > N {\n        msg_end = N;\n    }\n\n    for k in msg_start..msg_end {\n        if k < message_size {\n            assert_eq(msg_block[msg_byte_ptr], msg[k]);\n            msg_byte_ptr = msg_byte_ptr + 1;\n        }\n    }\n\n    msg_byte_ptr\n}\n\nglobal BLOCK_SIZE = 64;\nglobal ZERO = 0;\n\n// Variable size SHA-256 hash\npub fn sha256_var<let N: u32>(msg: [u8; N], message_size: u64) -> [u8; 32] {\n    let message_size = message_size as u32;\n    let num_blocks = N / BLOCK_SIZE;\n    let mut msg_block: [u8; BLOCK_SIZE] = [0; BLOCK_SIZE];\n    let mut h: [u32; 8] = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225]; // Intermediate hash, starting with the canonical initial value\n    let mut msg_byte_ptr = 0; // Pointer into msg_block\n\n    for i in 0..num_blocks {\n        let msg_start = BLOCK_SIZE * i;\n        let (new_msg_block, new_msg_byte_ptr) = unsafe {\n            build_msg_block_iter(msg, message_size, msg_start)\n        };\n        if msg_start < message_size {\n            msg_block = new_msg_block;\n        }\n\n        if !is_unconstrained() {\n            // Verify the block we are compressing was appropriately constructed\n            let new_msg_byte_ptr = verify_msg_block(msg, message_size, msg_block, msg_start);\n            if msg_start < message_size {\n                msg_byte_ptr = new_msg_byte_ptr;\n            }\n        } else if msg_start < message_size {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n\n        // If the block is filled, compress it.\n        // An un-filled block is handled after this loop.\n        if (msg_start < message_size) & (msg_byte_ptr == BLOCK_SIZE) {\n            h = sha256_compression(msg_u8_to_u32(msg_block), h);\n        }\n    }\n\n    let modulo = N % BLOCK_SIZE;\n    // Handle setup of the final msg block.\n    // This case is only hit if the msg is less than the block size,\n    // or our message cannot be evenly split into blocks.\n    if modulo != 0 {\n        let msg_start = BLOCK_SIZE * num_blocks;\n        let (new_msg_block, new_msg_byte_ptr) = unsafe {\n            build_msg_block_iter(msg, message_size, msg_start)\n        };\n\n        if msg_start < message_size {\n            msg_block = new_msg_block;\n        }\n\n        if !is_unconstrained() {\n            let new_msg_byte_ptr = verify_msg_block(msg, message_size, msg_block, msg_start);\n            if msg_start < message_size {\n                msg_byte_ptr = new_msg_byte_ptr;\n            }\n        } else if msg_start < message_size {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n    }\n\n    if msg_byte_ptr == BLOCK_SIZE {\n        msg_byte_ptr = 0;\n    }\n\n    // This variable is used to get around the compiler under-constrained check giving a warning.\n    // We want to check against a constant zero, but if it does not come from the circuit inputs\n    // or return values the compiler check will issue a warning.\n    let zero = msg_block[0] - msg_block[0];\n\n    // Pad the rest such that we have a [u32; 2] block at the end representing the length\n    // of the message, and a block of 1 0 ... 0 following the message (i.e. [1 << 7, 0, ..., 0]).\n    msg_block[msg_byte_ptr] = 1 << 7;\n    let last_block = msg_block;\n    msg_byte_ptr = msg_byte_ptr + 1;\n\n    unsafe {\n        let (new_msg_block, new_msg_byte_ptr) = pad_msg_block(msg_block, msg_byte_ptr);\n        msg_block = new_msg_block;\n        if crate::runtime::is_unconstrained() {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n    }\n\n    if !crate::runtime::is_unconstrained() {\n        for i in 0..BLOCK_SIZE {\n            assert_eq(msg_block[i], last_block[i]);\n        }\n\n        // If i >= 57, there aren't enough bits in the current message block to accomplish this, so\n        // the 1 and 0s fill up the current block, which we then compress accordingly.\n        // Not enough bits (64) to store length. Fill up with zeros.\n        for _i in 57..BLOCK_SIZE {\n            if msg_byte_ptr <= 63 & msg_byte_ptr >= 57 {\n                assert_eq(msg_block[msg_byte_ptr], zero);\n                msg_byte_ptr += 1;\n            }\n        }\n    }\n\n    if msg_byte_ptr >= 57 {\n        h = sha256_compression(msg_u8_to_u32(msg_block), h);\n\n        msg_byte_ptr = 0;\n    }\n\n    msg_block = unsafe {\n        attach_len_to_msg_block(msg_block, msg_byte_ptr, message_size)\n    };\n\n    if !crate::runtime::is_unconstrained() {\n        for i in 0..56 {\n            let predicate = (i < msg_byte_ptr) as u8;\n            let expected_byte = predicate * last_block[i];\n            assert_eq(msg_block[i], expected_byte);\n        }\n\n        // We verify the message length was inserted correctly by reversing the byte decomposition.\n        let len = 8 * message_size;\n        let mut reconstructed_len: Field = 0;\n        for i in 56..64 {\n            reconstructed_len = 256 * reconstructed_len + msg_block[i] as Field;\n        }\n        assert_eq(reconstructed_len, len as Field);\n    }\n\n    hash_final_block(msg_block, h)\n}\n\nunconstrained fn pad_msg_block(\n    mut msg_block: [u8; 64],\n    mut msg_byte_ptr: u32\n) -> ([u8; BLOCK_SIZE], u32) {\n    // If i >= 57, there aren't enough bits in the current message block to accomplish this, so\n    // the 1 and 0s fill up the current block, which we then compress accordingly.\n    if msg_byte_ptr >= 57 {\n        // Not enough bits (64) to store length. Fill up with zeros.\n        for i in msg_byte_ptr..BLOCK_SIZE {\n            msg_block[i] = 0;\n        }\n        (msg_block, BLOCK_SIZE)\n    } else {\n        (msg_block, msg_byte_ptr)\n    }\n}\n\nunconstrained fn attach_len_to_msg_block(mut msg_block: [u8; BLOCK_SIZE], msg_byte_ptr: u32, message_size: u32) -> [u8; BLOCK_SIZE] {\n    // We assume that `msg_byte_ptr` is less than 57 because if not then it is reset to zero before calling this function.\n    // In any case, fill blocks up with zeros until the last 64 (i.e. until msg_byte_ptr = 56).\n\n    for i in msg_byte_ptr..56 {\n        msg_block[i] = 0;\n    }\n\n    let len = 8 * message_size;\n    let len_bytes: [u8; 8] = (len as Field).to_be_bytes();\n    for i in 0..8 {\n        msg_block[56 + i] = len_bytes[i];\n    }\n    msg_block\n}\n\nfn hash_final_block(msg_block: [u8; BLOCK_SIZE], mut state: [u32; 8]) -> [u8; 32] {\n    let mut out_h: [u8; 32] = [0; 32]; // Digest as sequence of bytes\n\n    // Hash final padded block\n    state = sha256_compression(msg_u8_to_u32(msg_block), state);\n\n    // Return final hash as byte array\n    for j in 0..8 {\n        let h_bytes: [u8; 4] = (state[7 - j] as Field).to_le_bytes();\n        for k in 0..4 {\n            out_h[31 - 4*j - k] = h_bytes[k];\n        }\n    }\n\n    out_h\n}\n\nmod tests {\n    use super::sha256_var;\n\n    #[test]\n    fn smoke_test() {\n        let input = [0xbd];\n        let result = [\n            0x68, 0x32, 0x57, 0x20, 0xaa, 0xbd, 0x7c, 0x82, 0xf3, 0x0f, 0x55, 0x4b, 0x31, 0x3d, 0x05, 0x70, 0xc9, 0x5a, 0xcc, 0xbb, 0x7d, 0xc4, 0xb5, 0xaa, 0xe1, 0x12, 0x04, 0xc0, 0x8f, 0xfe, 0x73, 0x2b\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_just_over_block() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117, 101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112, 108, 97, 105, 110, 59, 32, 99, 104, 97, 114, 115, 101, 116\n        ];\n        let result = [\n            91, 122, 146, 93, 52, 109, 133, 148, 171, 61, 156, 70, 189, 238, 153, 7, 222, 184, 94, 24, 65, 114, 192, 244, 207, 199, 87, 232, 192, 224, 171, 207\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_multiple_over_block() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117, 101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112, 108, 97, 105, 110, 59, 32, 99, 104, 97, 114, 115, 101, 116, 61, 117, 115, 45, 97, 115, 99, 105, 105, 13, 10, 109, 105, 109, 101, 45, 118, 101, 114, 115, 105, 111, 110, 58, 49, 46, 48, 32, 40, 77, 97, 99, 32, 79, 83, 32, 88, 32, 77, 97, 105, 108, 32, 49, 54, 46, 48, 32, 92, 40, 51, 55, 51, 49, 46, 53, 48, 48, 46, 50, 51, 49, 92, 41, 41, 13, 10, 115, 117, 98, 106, 101, 99, 116, 58, 72, 101, 108, 108, 111, 13, 10, 109, 101, 115, 115, 97, 103, 101, 45, 105, 100, 58, 60, 56, 70, 56, 49, 57, 68, 51, 50, 45, 66, 54, 65, 67, 45, 52, 56, 57, 68, 45, 57, 55, 55, 70, 45, 52, 51, 56, 66, 66, 67, 52, 67, 65, 66, 50, 55, 64, 109, 101, 46, 99, 111, 109, 62, 13, 10, 100, 97, 116, 101, 58, 83, 97, 116, 44, 32, 50, 54, 32, 65, 117, 103, 32, 50, 48, 50, 51, 32, 49, 50, 58, 50, 53, 58, 50, 50, 32, 43, 48, 52, 48, 48, 13, 10, 116, 111, 58, 122, 107, 101, 119, 116, 101, 115, 116, 64, 103, 109, 97, 105, 108, 46, 99, 111, 109, 13, 10, 100, 107, 105, 109, 45, 115, 105, 103, 110, 97, 116, 117, 114, 101, 58, 118, 61, 49, 59, 32, 97, 61, 114, 115, 97, 45, 115, 104, 97, 50, 53, 54, 59, 32, 99, 61, 114, 101, 108, 97, 120, 101, 100, 47, 114, 101, 108, 97, 120, 101, 100, 59, 32, 100, 61, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 59, 32, 115, 61, 49, 97, 49, 104, 97, 105, 59, 32, 116, 61, 49, 54, 57, 51, 48, 51, 56, 51, 51, 55, 59, 32, 98, 104, 61, 55, 120, 81, 77, 68, 117, 111, 86, 86, 85, 52, 109, 48, 87, 48, 87, 82, 86, 83, 114, 86, 88, 77, 101, 71, 83, 73, 65, 83, 115, 110, 117, 99, 75, 57, 100, 74, 115, 114, 99, 43, 118, 85, 61, 59, 32, 104, 61, 102, 114, 111, 109, 58, 67, 111, 110, 116, 101, 110, 116, 45, 84, 121, 112, 101, 58, 77, 105, 109, 101, 45, 86, 101, 114, 115, 105, 111, 110, 58, 83, 117, 98, 106, 101, 99\n        ];\n        let result = [\n            116, 90, 151, 31, 78, 22, 138, 180, 211, 189, 69, 76, 227, 200, 155, 29, 59, 123, 154, 60, 47, 153, 203, 129, 157, 251, 48, 2, 79, 11, 65, 47\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_just_under_block() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117, 101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112, 108, 97, 105, 110, 59\n        ];\n        let result = [\n            143, 140, 76, 173, 222, 123, 102, 68, 70, 149, 207, 43, 39, 61, 34, 79, 216, 252, 213, 165, 74, 16, 110, 74, 29, 64, 138, 167, 30, 1, 9, 119\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_big_not_block_multiple() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117, 101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112, 108, 97, 105, 110, 59, 32, 99, 104, 97, 114, 115, 101, 116, 61, 117, 115, 45, 97, 115, 99, 105, 105, 13, 10, 109, 105, 109, 101, 45, 118, 101, 114, 115, 105, 111, 110, 58, 49, 46, 48, 32, 40, 77, 97, 99, 32, 79, 83, 32, 88, 32, 77, 97, 105, 108, 32, 49, 54, 46, 48, 32, 92, 40, 51, 55, 51, 49, 46, 53, 48, 48, 46, 50, 51, 49, 92, 41, 41, 13, 10, 115, 117, 98, 106, 101, 99, 116, 58, 72, 101, 108, 108, 111, 13, 10, 109, 101, 115, 115, 97, 103, 101, 45, 105, 100, 58, 60, 56, 70, 56, 49, 57, 68, 51, 50, 45, 66, 54, 65, 67, 45, 52, 56, 57, 68, 45, 57, 55, 55, 70, 45, 52, 51, 56, 66, 66, 67, 52, 67, 65, 66, 50, 55, 64, 109, 101, 46, 99, 111, 109, 62, 13, 10, 100, 97, 116, 101, 58, 83, 97, 116, 44, 32, 50, 54, 32, 65, 117, 103, 32, 50, 48, 50, 51, 32, 49, 50, 58, 50, 53, 58, 50, 50, 32, 43, 48, 52, 48, 48, 13, 10, 116, 111, 58, 122, 107, 101, 119, 116, 101, 115, 116, 64, 103, 109, 97, 105, 108, 46, 99, 111, 109, 13, 10, 100, 107, 105, 109, 45, 115, 105, 103, 110, 97, 116, 117, 114, 101, 58, 118, 61, 49, 59, 32, 97, 61, 114, 115, 97, 45, 115, 104, 97, 50, 53, 54, 59, 32, 99, 61, 114, 101, 108, 97, 120, 101, 100, 47, 114, 101, 108, 97, 120, 101, 100, 59, 32, 100, 61, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 59, 32, 115, 61, 49, 97, 49, 104, 97, 105, 59, 32, 116, 61, 49, 54, 57, 51, 48, 51, 56, 51, 51, 55, 59, 32, 98, 104, 61, 55, 120, 81, 77, 68, 117, 111, 86, 86, 85, 52, 109, 48, 87, 48, 87, 82, 86, 83, 114, 86, 88, 77, 101, 71, 83, 73, 65, 83, 115, 110, 117, 99, 75, 57, 100, 74, 115, 114, 99, 43, 118, 85, 61, 59, 32, 104, 61, 102, 114, 111, 109, 58, 67, 111, 110, 116, 101, 110, 116, 45, 84, 121, 112, 101, 58, 77, 105, 109, 101, 45, 86, 101, 114, 115, 105, 111, 110, 58, 83, 117, 98, 106, 101, 99, 116, 58, 77, 101, 115, 115, 97, 103, 101, 45, 73, 100, 58, 68, 97, 116, 101, 58, 116, 111, 59, 32, 98, 61\n        ];\n        let result = [\n            112, 144, 73, 182, 208, 98, 9, 238, 54, 229, 61, 145, 222, 17, 72, 62, 148, 222, 186, 55, 192, 82, 220, 35, 66, 47, 193, 200, 22, 38, 26, 186\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_big_with_padding() {\n        let input = [\n            48, 130, 1, 37, 2, 1, 0, 48, 11, 6, 9, 96, 134, 72, 1, 101, 3, 4, 2, 1, 48, 130, 1, 17, 48, 37, 2, 1, 1, 4, 32, 176, 223, 31, 133, 108, 84, 158, 102, 70, 11, 165, 175, 196, 12, 201, 130, 25, 131, 46, 125, 156, 194, 28, 23, 55, 133, 157, 164, 135, 136, 220, 78, 48, 37, 2, 1, 2, 4, 32, 190, 82, 180, 235, 222, 33, 79, 50, 152, 136, 142, 35, 116, 224, 6, 242, 156, 141, 128, 248, 10, 61, 98, 86, 248, 45, 207, 210, 90, 232, 175, 38, 48, 37, 2, 1, 3, 4, 32, 0, 194, 104, 108, 237, 246, 97, 230, 116, 198, 69, 110, 26, 87, 17, 89, 110, 199, 108, 250, 36, 21, 39, 87, 110, 102, 250, 213, 174, 131, 171, 174, 48, 37, 2, 1, 11, 4, 32, 136, 155, 87, 144, 111, 15, 152, 127, 85, 25, 154, 81, 20, 58, 51, 75, 193, 116, 234, 0, 60, 30, 29, 30, 183, 141, 72, 247, 255, 203, 100, 124, 48, 37, 2, 1, 12, 4, 32, 41, 234, 106, 78, 31, 11, 114, 137, 237, 17, 92, 71, 134, 47, 62, 78, 189, 233, 201, 214, 53, 4, 47, 189, 201, 133, 6, 121, 34, 131, 64, 142, 48, 37, 2, 1, 13, 4, 32, 91, 222, 210, 193, 62, 222, 104, 82, 36, 41, 138, 253, 70, 15, 148, 208, 156, 45, 105, 171, 241, 195, 185, 43, 217, 162, 146, 201, 222, 89, 238, 38, 48, 37, 2, 1, 14, 4, 32, 76, 123, 216, 13, 51, 227, 72, 245, 59, 193, 238, 166, 103, 49, 23, 164, 171, 188, 194, 197, 156, 187, 249, 28, 198, 95, 69, 15, 182, 56, 54, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n        ];\n        let result = [\n            32, 85, 108, 174, 127, 112, 178, 182, 8, 43, 134, 123, 192, 211, 131, 66, 184, 240, 212, 181, 240, 180, 106, 195, 24, 117, 54, 129, 19, 10, 250, 53\n        ];\n        let message_size = 297;\n        assert_eq(sha256_var(input, message_size), result);\n    }\n\n    #[test]\n    fn msg_big_no_padding() {\n        let input = [\n            48, 130, 1, 37, 2, 1, 0, 48, 11, 6, 9, 96, 134, 72, 1, 101, 3, 4, 2, 1, 48, 130, 1, 17, 48, 37, 2, 1, 1, 4, 32, 176, 223, 31, 133, 108, 84, 158, 102, 70, 11, 165, 175, 196, 12, 201, 130, 25, 131, 46, 125, 156, 194, 28, 23, 55, 133, 157, 164, 135, 136, 220, 78, 48, 37, 2, 1, 2, 4, 32, 190, 82, 180, 235, 222, 33, 79, 50, 152, 136, 142, 35, 116, 224, 6, 242, 156, 141, 128, 248, 10, 61, 98, 86, 248, 45, 207, 210, 90, 232, 175, 38, 48, 37, 2, 1, 3, 4, 32, 0, 194, 104, 108, 237, 246, 97, 230, 116, 198, 69, 110, 26, 87, 17, 89, 110, 199, 108, 250, 36, 21, 39, 87, 110, 102, 250, 213, 174, 131, 171, 174, 48, 37, 2, 1, 11, 4, 32, 136, 155, 87, 144, 111, 15, 152, 127, 85, 25, 154, 81, 20, 58, 51, 75, 193, 116, 234, 0, 60, 30, 29, 30, 183, 141, 72, 247, 255, 203, 100, 124, 48, 37, 2, 1, 12, 4, 32, 41, 234, 106, 78, 31, 11, 114, 137, 237, 17, 92, 71, 134, 47, 62, 78, 189, 233, 201, 214, 53, 4, 47, 189, 201, 133, 6, 121, 34, 131, 64, 142, 48, 37, 2, 1, 13, 4, 32, 91, 222, 210, 193, 62, 222, 104, 82, 36, 41, 138, 253, 70, 15, 148, 208, 156, 45, 105, 171, 241, 195, 185, 43, 217, 162, 146, 201, 222, 89, 238, 38, 48, 37, 2, 1, 14, 4, 32, 76, 123, 216, 13, 51, 227, 72, 245, 59, 193, 238, 166, 103, 49, 23, 164, 171, 188, 194, 197, 156, 187, 249, 28, 198, 95, 69, 15, 182, 56, 54, 38\n        ];\n        let result = [\n            32, 85, 108, 174, 127, 112, 178, 182, 8, 43, 134, 123, 192, 211, 131, 66, 184, 240, 212, 181, 240, 180, 106, 195, 24, 117, 54, 129, 19, 10, 250, 53\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn same_msg_len_variable_padding() {\n        let input = [\n            29, 81, 165, 84, 243, 114, 101, 37, 242, 146, 127, 99, 69, 145, 39, 72, 213, 39, 253, 179, 218, 37, 217, 201, 172, 93, 198, 50, 249, 70, 15, 30, 162, 112, 187, 40, 140, 9, 236, 53, 32, 44, 38, 163, 113, 254, 192, 197, 44, 89, 71, 130, 169, 242, 17, 211, 214, 72, 19, 178, 186, 168, 147, 127, 99, 101, 252, 227, 8, 147, 150, 85, 97, 158, 17, 107, 218, 244, 82, 113, 247, 91, 208, 214, 60, 244, 87, 137, 173, 201, 130, 18, 66, 56, 198, 149, 207, 189, 175, 120, 123, 224, 177, 167, 251, 159, 143, 110, 68, 183, 189, 70, 126, 32, 35, 164, 44, 30, 44, 12, 65, 18, 62, 239, 242, 2, 248, 104, 2, 178, 64, 28, 126, 36, 137, 24, 14, 116, 91, 98, 90, 159, 218, 102, 45, 11, 110, 223, 245, 184, 52, 99, 59, 245, 136, 175, 3, 72, 164, 146, 145, 116, 22, 66, 24, 49, 193, 121, 3, 60, 37, 41, 97, 3, 190, 66, 195, 225, 63, 46, 3, 118, 4, 208, 15, 1, 40, 254, 235, 151, 123, 70, 180, 170, 44, 172, 90, 4, 254, 53, 239, 116, 246, 67, 56, 129, 61, 22, 169, 213, 65, 27, 216, 116, 162, 239, 214, 207, 126, 177, 20, 100, 25, 48, 143, 84, 215, 70, 197, 53, 65, 70, 86, 172, 61, 62, 9, 212, 167, 169, 133, 41, 126, 213, 196, 33, 192, 238, 0, 63, 246, 215, 58, 128, 110, 101, 92, 3, 170, 214, 130, 149, 52, 81, 125, 118, 233, 3, 118, 193, 104, 207, 120, 115, 77, 253, 191, 122, 0, 107, 164, 207, 113, 81, 169, 36, 201, 228, 74, 134, 131, 218, 178, 35, 30, 216, 101, 2, 103, 174, 87, 95, 50, 50, 215, 157, 5, 210, 188, 54, 211, 78, 45, 199, 96, 121, 241, 241, 176, 226, 194, 134, 130, 89, 217, 210, 186, 32, 140, 39, 91, 103, 212, 26, 87, 32, 72, 144, 228, 230, 117, 99, 188, 50, 15, 69, 79, 179, 50, 12, 106, 86, 218, 101, 73, 142, 243, 29, 250, 122, 228, 233, 29, 255, 22, 121, 114, 125, 103, 41, 250, 241, 179, 126, 158, 198, 116, 209, 65, 94, 98, 228, 175, 169, 96, 3, 9, 233, 133, 214, 55, 161, 164, 103, 80, 85, 24, 186, 64, 167, 92, 131, 53, 101, 202, 47, 25, 104, 118, 155, 14, 12, 12, 25, 116, 45, 221, 249, 28, 246, 212, 200, 157, 167, 169, 56, 197, 181, 4, 245, 146, 1, 140, 234, 191, 212, 228, 125, 87, 81, 86, 119, 30, 63, 129, 143, 32, 96\n        ];\n\n        // Prepare inputs of different lengths\n        let mut input_511 = [0; 511];\n        let mut input_512 = [0; 512]; // Next block\n        let mut input_575 = [0; 575];\n        let mut input_576 = [0; 576]; // Next block\n        for i in 0..input.len() {\n            input_511[i] = input[i];\n            input_512[i] = input[i];\n            input_575[i] = input[i];\n            input_576[i] = input[i];\n        }\n\n        // Compute hashes of all inputs (with same message length)\n        let fixed_length_hash = super::sha256(input);\n        let var_full_length_hash = sha256_var(input, input.len() as u64);\n        let var_length_hash_511 = sha256_var(input_511, input.len() as u64);\n        let var_length_hash_512 = sha256_var(input_512, input.len() as u64);\n        let var_length_hash_575 = sha256_var(input_575, input.len() as u64);\n        let var_length_hash_576 = sha256_var(input_576, input.len() as u64);\n\n        // All of the above should have produced the same hash\n        assert_eq(var_full_length_hash, fixed_length_hash);\n        assert_eq(var_length_hash_511, fixed_length_hash);\n        assert_eq(var_length_hash_512, fixed_length_hash);\n        assert_eq(var_length_hash_575, fixed_length_hash);\n        assert_eq(var_length_hash_576, fixed_length_hash);\n    }\n}\n"},"350":{"path":"/Users/envoy1084/nargo/github.com/noir-lang/noir_rsav0.3.1/lib/src/rsa.nr","source":"use dep::bignum::BigNum;\nuse dep::bignum::runtime_bignum::BigNumInstance;\nuse dep::bignum::runtime_bignum::BigNumTrait;\nuse dep::bignum::runtime_bignum::BigNumInstanceTrait;\n\nuse crate::types::{RSA, BN1024, BN2048, BNInst1024, BNInst2048, RSA1024, RSA2048};\n\n/**\n * @brief Compare a recovered byte hash from an RSA signature to the original message hash\n * @details Taken from https://github.com/richardliang/noir-rsa\n **/\nfn compare_signature_sha256<let N: u32>(padded_sha256_hash: [u8; N], msg_hash: [u8; 32]) -> bool {\n    // Get length of sig (e.g. 1048 = 128 bytes, 2048 = 256 bytes)\n    // NOTE: Assume MAX_BYTES < 2^32 bit number. MAX_BYTES of 259 > 2^8 bits so need to cast it to u32\n\n    for i in 0..32 {\n        // Padded hash is reversed\n        // println(padded_sha256_hash[31 - i] == msg_hash[i]);\n        // println(padded_sha256_hash[31 - i]);\n        // println(msg_hash[i]);\n        assert(padded_sha256_hash[31 - i] == msg_hash[i]);\n    }\n\n    let hash_prefix: [u8; 19] = [32, 4, 0, 5, 1, 2, 4, 3, 101, 1, 72, 134, 96, 9, 6, 13, 48, 49, 48];\n\n    for i in 32..51 {\n        assert(hash_prefix[i - 32] == padded_sha256_hash[i]);\n    }\n\n    assert(padded_sha256_hash[51] == 0);\n\n    // Sub 32 bytes for hash, 19 bytes for prefix, 1 byte for 0, 1 byte for 1, 1 byte for 0\n    let ps_len = N - 54;\n    for i in 52..N {\n        if i as u32 < 52 + ps_len as u32 {\n            // PS padding which depends on RSA modulus / sig length. 1024 bits = 128 bytes = 128 - 54 = 74 bytes of 0xFF padding\n            assert(padded_sha256_hash[i] == 255);\n        } else if i as u32 == 52 + ps_len as u32 {\n            // Pad 0x01\n            assert(padded_sha256_hash[i] == 1);\n        } else if i as u32 == 53 + ps_len as u32 {\n            // 0x00\n            assert(padded_sha256_hash[i] == 0);\n        } else {\n            // Padded with 0 until MAX_BYTES\n            assert(padded_sha256_hash[i] == 0);\n        }\n    }\n\n    true\n}\nimpl<BN, BNInstance, let NumBytes: u32> RSA<BN, BNInstance, NumBytes>  where BN: BigNumTrait, BNInstance: BigNumInstanceTrait<BN> {\n    /**\n * @brief Verify an RSA signature generated via the pkcs1v15 signature scheme.\n * @details The fourth function parameter is required to define the value of `NBytes`\n *          when converting a BigNum into a byte array, the number of bytes is required and currently cannot be inferred.\n *          Once numeric generics can be derived by applying operations to other numeric generics the need for this will go away.\n *\n * @note The exponent `e` can be either 65537 or 3 (i.e. the most common values in use for RSA)\n * Rough cost: 2,048 bit RSA: 26,888 gates per verification\n *             1,024 bit RSA: 11,983 gates per verification\n * A circuit that verifies 1 signature (and does nothing else) will cost ~32k due to initialization costs of lookup tables\n **/\n    pub fn verify_sha256_pkcs1v15(_: Self, instance: BNInstance, msg_hash: [u8; 32], sig: BN, exponent: u32) -> bool {\n        assert((exponent == 3) | (exponent == 65537), \"Exponent must be 65537 or 3\");\n        let mut exponentiated = instance.mul(sig, sig); // sig^2\n\n        if exponent == 65537 {\n            // e = 65537 = 1 0000 0000 0000 0001\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^2 * sig^2 = sig^4\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^8\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^16\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^32\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^64\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^128\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^256\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^512\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^1024\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^2048\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^4096\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^8192\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^16384\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^32768\n            exponentiated = instance.mul(exponentiated, exponentiated); // sig^65536\n        }\n        // otherwise, e = 3 = 11\n\n        exponentiated = instance.mul(exponentiated, sig); // either sig^2 * sig = sig^3 or sig^65536 * sig = sig^65537\n\n        let mut padded_sha256_hash_bytes: [u8; NumBytes] = exponentiated.to_le_bytes();\n        // println(padded_sha256_hash_bytes);\n        // println(msg_hash);\n        compare_signature_sha256(padded_sha256_hash_bytes, msg_hash)\n    }\n}\n\n#[test]\nfn test_verify_sha256_pkcs1v15_1024() {\n    let sha256_hash: [u8; 32] = dep::std::hash::sha256(\"Hello World! This is Noir-RSA\".as_bytes());\n\n    let BNInstance: BNInst1024 = BigNumInstance::new(\n        [\n        0xe908724e0d28a1565511879e00f063, 0x58dea28d5112982c8ab8597d3e611f, 0xb115f9878acc910a47b41ac8d5f763, 0xc71b0a719c2283f710f86024737cee, 0x9ee9eb73e95b84f033af5217337427, 0x8fcab34c99cc2661dd57de15ae2110, 0xa38db8a829eec5550342f6f66334dc, 0xd7c4b32fd351a47d860fda1897330e, 0x98c92a33a0f33fd7\n    ],\n        [\n        0x55582e8ba08822783fbd7d07390be2, 0x1d7d83f9dce3983c66f440dcc2f33e, 0x6072d13c84a4cb304f58fbabe782e7, 0x0cee5e0dd62bc54d15a91a4ea3bc50, 0xc485e6f946c45cf660fba4f49325cb, 0x1f0e45df0464b065c94e84ed1dad8c, 0xe4c7b3976310ea239059d834b545f3, 0xd418145200fa77235f5f8d852b121f, 0x01acf0bd16cad9bd8f\n    ]\n    );\n    let signature: BN1024 = BigNum::from_array(\n        [\n        0x393f230b55a12fb7bb39c7edd2cf48, 0x78f7d0a217d340407cae4f39b8f001, 0x603909ff76a519f3c8e96d695d462e, 0x0640ab230b459bf4b20b4823a5b850, 0x02ba190de61a85074b18e228231984, 0xe1424c0779825707aa433ecb86c388, 0xbed8087d947a9c6c56625ad20c91aa, 0x7da4a0c2eee3a3c0d61e892ab4ada9, 0x6ef98a936c8bf8e5\n    ]\n    );\n\n    let rsa: RSA1024 = RSA {};\n    assert(rsa.verify_sha256_pkcs1v15(BNInstance, sha256_hash, signature, 65537));\n}\n\n#[test]\nfn test_verify_sha256_pkcs1v15_2048() {\n    let sha256_hash: [u8; 32] = dep::std::hash::sha256(\"hello world\".as_bytes());\n    let BNInstance: BNInst2048 = BigNumInstance::new(\n        [\n        0x183b4cadacea64716b6535b25a86ad, 0x129a32e9fbd374949e81b080546c2b, 0x9276332765f54b9b4d6fe23f4983a4, 0x91df05fde1a414c9fbf38808a01032, 0x97ca171c382e082ddd6c81be090902, 0x97161dde47ed979939451704b72648, 0x3b66f0c93f8ddbc62bb99f6b8fad2d, 0xc3a046fcad814d8938da372cd84d2a, 0xfe903cfe3ee4de6de3916023bb87f2, 0x8be5fd99c8b46dce9aab27ce4b3883, 0x0d99dfe50dd2288123804872da8543, 0xbb6d8afef8b2c7e3b86ad96973d4e5, 0x17e08fa3c5391279b844581f67825c, 0x09511f4a436abe495bfbfcc254d9c5, 0xf80d02572d620eab5ad7ecfbe2c20c, 0x2a5307402a05f59ba232ad0c8366d0, 0x7b9169630b317c38d549a86f85fcfc, 0xf2\n    ],\n        [\n        0xf4effa025abe90db41dc5bb5934a5f, 0x2596b25aa09f6a0e290accebbef006, 0x330e9567ec5eca92b7a8ce72ad3d83, 0xccf98d178ec4017e4947cadc02da7c, 0xaed6044ffeeb12de4d1e67aedfda78, 0xb5ae8a5a4637b632800e2f41dfbf0a, 0x8304360d359cf2f0d5d97c039f9b04, 0x53cde0d0633c0e66e1da9a118f6a96, 0xf9a83822351097bb1ed123d10290f5, 0xeb489c7f7227c09ca0117264dcf04f, 0x6a1b3618478a235f438adf84533177, 0x71c03085e38a87f5ec8e51c27dde98, 0xcf3e89d9cf253ef61d65d4431334d9, 0xa5a1a59e98fb7f49c746149324201d, 0x38f46c635f884f24c254eaa37981d6, 0x1c42be15dd95e1ac5bf01972b24ff9, 0x4555dd506d1f89e61279293c03db90, 0x010e\n    ]\n    );\n    let signature: BN2048 = BigNum::from_array(\n        [\n        0x5f0937ed1aacbdb83991e21c89ca8a, 0x5a1fa4ef2faf4042401c9121c73874, 0x7379fbb7713fbf807d250f7401afb8, 0x9cc5ce8813f3a83a72b681a4d434b2, 0x11cb49ac2ee1f9bed8a008b8327e1e, 0xf3362524f1224e48827b34a62f6ace, 0x3498a2944e32a3798fe9da684b32ae, 0xc346c33528bcdf7a06805126a29402, 0x6ac93f2fa68f270ec73674eae24380, 0x222c72de080496533ceeb8af827910, 0xc22889b311a53203278b942ca67100, 0x93d75567f7fe9ee7ca9871a0cb09f9, 0x049dabd976a9574847b1614f6b739c, 0xdc66b621dbae623df9b657b52fa1b0, 0xf37e82cc1eced382e11fc32e673f67, 0xe50545eb9027f1144a0ba7bbb0c886, 0xb6193409539c515d3c55a45c5734b1, 0x4b\n    ]\n    );\n    let rsa: RSA2048 = RSA {};\n    assert(rsa.verify_sha256_pkcs1v15(BNInstance, sha256_hash, signature, 65537));\n}\n\n#[test]\nfn test_verify_sha256_pkcs1v15_2048_exponent_3() {\n    let sha256_hash: [u8; 32] = dep::std::hash::sha256(\"Hello World! This is Noir-RSA\".as_bytes());\n\n    let BNInstance: BNInst2048 = BigNumInstance::new(\n        [\n        0xc6a1c5e80ce354c6b00ccf20cf3a1d, 0x178d135f925a03eceb25f79bab56ee, 0x13ab3d6d8a5c5586752b5a3bc74ec3, 0x3d13b47b152367e3e2fc014d03d19f, 0xe89a7278a2945b4a672011691db30f, 0x5b4c1b061378143629dbb29dea1e4, 0x26a48b6f4e8df1472fd4fc12b17c18, 0xc7c92ead0ce810520cf3a8267254c1, 0x806b8cdba93909e9d9a71ee1bcdac2, 0x703ef80f8eb703b84c201366dff1c7, 0x7361034bb2c4c081aad8b1bcca83de, 0xb23c7e1109e65e6d08fa72cc862008, 0x750bc927874455782cd2d6fd5a51f6, 0xf0b83665fbf8cb5cf31cee9f89848e, 0x20d447b08953c7ce3330197938a8ae, 0x11a08bb5a2241c6a2a69f930d8b28b, 0xef5bca8dd582570a44705cb123d09e, 0xb7\n    ],\n        [\n        0xbc93ee57c1c8adc53f0a995a6221ca, 0x2a9b43587534b20dd85a5233329f10, 0xc587fd488f64eed02adc1f462f7448, 0xf1484d37676bb0e800996757382522, 0xc2126c48221aa61c9f52c6b918bab3, 0x8660c861dd52ed958beaf6c6c2cff0, 0x5edd9dc4f02a000f350948c70bdf94, 0x6f3b9603149272e9b232a379a017bb, 0x950fd85cffbdf4476b1cb66c1f63d6, 0xee459417b1a56b6f7ef3b89e385ac, 0x48daeef6d1a055f3746ab71058e137, 0x3cbc0ba96d541feee92dd27f9d0306, 0x6a2a42384cc388fa113ee80317e0a0, 0x43b4f89c508a42d309f295c0d9f3a5, 0x8d8c28b05f71b962b40ea906ff407f, 0x390a7989eb9cecc5827cb00e1ca693, 0x4cbf158eabf7e96ef7f2586d0ce613, 0x164\n    ]\n    );\n\n    let signature: BN2048 = BigNum::from_array(\n        [\n        0x19772b9af8a031170a7844ce4f3d7c, 0x4808e817258f57805a7326f70bcd74, 0xca8f3f98e374d52100115bfa645a7d, 0x49547189edff3b683fee267e717b7f, 0x96f263b47e96925f3b5898a7389ceb, 0x4cc50a893da91d0e085fc6656b30bc, 0x67e84ff92d88c0ad2c17ad2701309e, 0x095326818578173289665fcd9ad788, 0x775c6e85b745065db9411b9d579763, 0xad0f20c8a5265dfca4080ca877a2b8, 0xbfd199372f1680b3bc583a08bd8ba9, 0x663476ca3e5ede3e5976887db2c4e5, 0x531192309d0d49fed47c0216c27f9e, 0x37d26d31c86b951ca1c17b517063b7, 0x3cdb362ed5dfd06568eb9a9bbb6a91, 0x14520b9c23f583314729a9d858bca9, 0x5e0505067ada1026721d45997bf2c4, 0x3e\n    ]\n    );\n\n    let rsa: RSA2048 = RSA {};\n    assert(rsa.verify_sha256_pkcs1v15(BNInstance, sha256_hash, signature, 3));\n}\n"},"353":{"path":"/Users/envoy1084/nargo/github.com/noir-lang/noir-bignumv0.3.5/src/utils/split_bits.nr","source":"\n// Decomposes a single field into two 120 bit fields and a carry\nunconstrained pub fn split_120_bits(x: Field) -> (Field, Field) {\n    let x_bytes: [u8; 32] = x.to_le_bytes();\n\n    let mut low: Field = 0;\n    let mut high: Field = 0;\n\n    let offsets: [Field; 17] = [\n        1, 0x100, 0x10000, 0x1000000, 0x100000000, 0x10000000000, 0x1000000000000, 0x100000000000000, 0x10000000000000000, 0x1000000000000000000, 0x100000000000000000000, 0x10000000000000000000000, 0x1000000000000000000000000, 0x100000000000000000000000000, 0x10000000000000000000000000000, 0x1000000000000000000000000000000, 0x100000000000000000000000000000000\n    ];\n\n    for i in 0..15 {\n        low += (x_bytes[i] as Field) * offsets[i];\n        high += (x_bytes[i + 15] as Field) * offsets[i];\n    }\n    high += (x_bytes[30] as Field) * offsets[15];\n    high += (x_bytes[31] as Field) * offsets[16];\n    // TDOO: investigate why this is triggered in BigCurve crate? it shouldn't be?\n    //   assert(x_bytes[31] == 0);\n    (low, high)\n}\n\n/**\n * @brief Decomposes a single field into two 60 bit fields\n *\n * @description Expects the input limb to be in the range [0, ..., 2^{120 - 1}]\n **/\nunconstrained pub fn split_60_bits(x: Field) -> (u64, u64) {\n    let x_bytes: [u8; 32] = x.to_le_bytes();\n\n    let mut low: u64 = 0;\n    let mut high: u64 = 0;\n\n    let offsets: [u64; 8] = [1, 0x100, 0x10000, 0x1000000, 0x100000000, 0x10000000000, 0x1000000000000, 0x100000000000000];\n    for i in 0..8 {\n        low += (x_bytes[i] as u64) * offsets[i];\n        high += (x_bytes[i + 8] as u64) * offsets[i];\n    }\n    let t1 = low >> 60;\n    let mask = ((1 as u64) << 60 as u8) - 1;\n    low = low & mask;\n    high = (high << 4) | t1;\n    (low, high)\n}\n\nunconstrained pub(crate) fn __normalize_limbs<let N: u32>(\n    input: [Field; N],\n    range: u32\n) -> [Field; N] {\n    let mut normalized: [Field; N] = [0; N];\n    let mut inp: _ = input;\n    for i in 0..(range - 1) {\n        let (lo, hi) = split_120_bits(inp[i]);\n\n        normalized[i]= lo;\n        inp[i + 1] +=  hi;\n    }\n    {\n        let (lo, hi) = split_120_bits(inp[range - 1]);\n        normalized[range - 1]= lo;\n        assert(hi == 0);\n    }\n    normalized\n}\n"},"354":{"path":"/Users/envoy1084/nargo/github.com/noir-lang/noir-bignumv0.3.5/src/utils/u60_representation.nr","source":"use crate::utils::split_bits;\nuse crate::utils::msb::get_msb64;\n\n/**\n * @brief U60Repr represents a BigNum element as a sequence of 60-bit unsigned integers.\n *\n * @description: used in unconstrained functions when computing witness values.\n * It is helpful to use u60 types when evaluating addition operations that can overflow the field modulus,\n * as well as when performing bit shifts.\n */\nstruct U60Repr<let N: u32, let NumSegments: u32> {\n    limbs: [u64; N * NumSegments]\n}\n\nimpl<let N: u32, let NumSegments: u32> std::ops::Add for U60Repr<N, NumSegments> {\n    fn add(self, b: Self) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n\n        let mut carry: u64 = 0;\n        for i in 0..N * NumSegments {\n            let mut add: u64 = self.limbs[i] + b.limbs[i] + carry;\n            carry = add >> 60;\n            add = add - (carry << 60);\n            result.limbs[i] = add;\n        }\n        result\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> std::ops::Sub for U60Repr<N, NumSegments> {\n    fn sub(self, b: Self) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n\n        let mut borrow: u64 = 0;\n        let mut borrow_in: u64 = 0;\n\n        for i in 0..N * NumSegments {\n            borrow = ((b.limbs[i] + borrow_in) > self.limbs[i]) as u64;\n            let sub = (borrow << 60) + self.limbs[i] - b.limbs[i] - borrow_in;\n            result.limbs[i] = sub;\n            borrow_in = borrow;\n        }\n\n        result\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> std::convert::From<[Field; N]> for U60Repr<N, NumSegments> {\n    fn from(input: [Field; N]) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n        for i in 0..(N) {\n            let (lo, hi) = unsafe {\n                split_bits::split_60_bits(input[i])\n            };\n            result.limbs[2 * i] = lo;\n            result.limbs[2 * i + 1] = hi;\n        }\n        result\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> std::convert::Into<[Field; N]> for U60Repr<N, NumSegments> {\n    fn into(x: U60Repr<N, NumSegments>) -> [Field; N] {\n        let mut result: [Field; N] = [0; N];\n        let two_pow_60: Field = 0x1000000000000000;\n        for i in 0..N {\n            result[i] = x.limbs[2 * i] as Field + (x.limbs[2 * i + 1] as Field * two_pow_60);\n        }\n        result\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> std::cmp::Eq for U60Repr<N, NumSegments> {\n    fn eq(self, other: Self) -> bool {\n        self.limbs == other.limbs\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> U60Repr<N, NumSegments> {\n\n    unconstrained fn new<let NumFieldSegments: u32>(x: [Field; N * NumFieldSegments]) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n        for i in 0..(N * NumFieldSegments) {\n            let (lo, hi) = split_bits::split_60_bits(x[i]);\n            result.limbs[2 * i] = lo;\n            result.limbs[2 * i + 1] = hi;\n        }\n        result\n    }\n\n    unconstrained fn one() -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n        result.limbs[0] = 1;\n        result\n    }\n\n    unconstrained fn into_field_array(x: U60Repr<N, NumSegments>) -> [Field; N * NumSegments / 2] {\n        let mut result: [Field; N * NumSegments / 2] = [0; N * NumSegments / 2];\n        let two_pow_60: Field = 0x1000000000000000;\n        for i in 0..(N * NumSegments / 2) {\n            result[i]= x.limbs[2 * i] as Field + (x.limbs[2 * i + 1] as Field * two_pow_60);\n        }\n        result\n    }\n\n    unconstrained fn gte(self, b: Self) -> bool {\n        let mut result = false;\n        let mut early_exit = false;\n        for i in 0..(N * NumSegments) {\n            if (b.limbs[(N * NumSegments) - 1 - i] < self.limbs[((N * NumSegments) - 1 - i)]) {\n                result = true;\n                early_exit = true;\n                break;\n            } else if (b.limbs[(N * NumSegments) - 1 - i] != self.limbs[((N * NumSegments) - 1 - i)]) {\n                result = false;\n                early_exit = true;\n                break;\n            }\n        }\n        if (early_exit == false) {\n            result = (self.limbs[0] == b.limbs[0]);\n        }\n        result\n    }\n\n    fn get_bit(self, bit: u32) -> bool {\n        let segment_index = bit / 60;\n        let uint_index = bit % 60;\n\n        let limb: u64 = self.limbs[segment_index];\n        let value = (limb >> uint_index as u8) & 1;\n        value == 1\n    }\n\n    // note: shr cannot satisfy `Shr` Trait due to `shift` parameter being u64 and not u8 (shift value might be greater than 255)\n    fn shr(self, shift: u32) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n\n        let num_shifted_limbs = shift / 60;\n        let limb_shift = shift % 60;\n        let remainder_shift = 60 - limb_shift;\n        let mask: u64 = (((1 as u64) << limb_shift as u8) - 1) << remainder_shift as u8;\n        result.limbs[0] = (self.limbs[0 + num_shifted_limbs] >> limb_shift as u8);\n\n        for i in 1..((N * NumSegments) - num_shifted_limbs) {\n            let value = self.limbs[i + num_shifted_limbs];\n            result.limbs[i] = (value >> limb_shift as u8);\n            let remainder: u64 = (value << remainder_shift as u8) & mask;\n            result.limbs[i - 1] = result.limbs[i - 1] + remainder;\n        }\n        result\n    }\n\n    // note: shr cannot satisfy `Shr` Trait due to `shift` parameter being u64 and not u8 (shift value might be greater than 255)\n    fn shr1(&mut self) {\n        let value = self.limbs[NumSegments * N - 1];\n        self.limbs[NumSegments * N - 1] = value >> 1;\n\n        let mut remainder = (value & 1) << 59;\n\n        for i in 0..N * NumSegments {\n            let value = self.limbs[N * NumSegments - 1 - i];\n            self.limbs[N * NumSegments - 1 - i] = (value >> 1) + remainder;\n            remainder = (value << 59) & 0x800000000000000;\n        }\n    }\n\n    // note: shr cannot satisfy `Shr` Trait due to `shift` parameter being u64 and not u8 (shift value might be greater than 255)\n    fn shl(self, shift: u32) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; NumSegments * N] };\n\n        let num_shifted_limbs = shift / 60;\n        let limb_shift = (shift % 60) as u8;\n        let remainder_shift: u8 = 60 - limb_shift as u8;\n\n        // 83\n        // limb shift = 1\n        // inside shift = 19 bits to the left\n        // meaning we have 19 carry bits and 41 remainder bits\n        let mask: u64 = (1 as u64 << 60) - 1;\n        //   let mask: u64 = (((1 as u64) << limb_shift as u8) - 1) << remainder_shift as u8;\n        let value = self.limbs[0];\n\n        let mut remainder = (value >> remainder_shift);\n        result.limbs[num_shifted_limbs] = (value << (limb_shift as u8)) & mask;\n\n        // shift 84. num shifted = 1\n\n        for i in 1..((N * NumSegments) - num_shifted_limbs) {\n            let value = self.limbs[i];\n            let upshift = ((value << (limb_shift as u8)) + remainder) & mask;\n            result.limbs[i + num_shifted_limbs] = upshift;\n            remainder = (value >> remainder_shift);\n            // let remainder: u64 = (self.limbs.get(i + num_shifted_limbs as u64) << remainder_shift as u8) & mask;\n            // result.limbs.set(i - 1, result.limbs.get(i - 1) + remainder);\n        }\n        result\n    }\n\n    fn increment(&mut self) {\n        let mut carry: u64 = 0;\n\n        let mut add: u64 = self.limbs[0] + 1;\n        carry = add >> 60;\n        add = add - (carry << 60);\n        self.limbs[0] = add;\n\n        for i in 1..NumSegments * N {\n            let mut add: u64 = self.limbs[i] + carry;\n            carry = add >> 60;\n            add = add - (carry << 60);\n            self.limbs[i] = add;\n        }\n    }\n\n    unconstrained  fn get_msb(val: Self) -> u32 {\n        let mut count = 0;\n        for i in 0..N * NumSegments {\n            let v = val.limbs[((N * NumSegments) - 1 - i)];\n            if (v > 0) {\n                count = 60 * ((N * NumSegments) - 1 - i) + get_msb64(v);\n                break;\n            }\n        }\n        count\n    }\n}\n"},"389":{"path":"/Users/envoy1084/nargo/github.com/noir-lang/noir-bignumv0.3.5/src/runtime_bignum.nr","source":"use dep::std;\nuse crate::utils::u60_representation::U60Repr;\nuse crate::utils::split_bits;\nuse crate::BigNum;\n/**\n * @brief runtime_bignum::BigNumTrait defines methods available to BigNum *if* the modulus is not known at compile time.\n *        e.g. RSA where the modulus is a witness value as it changes for every RSA signature\n *        tee `lib.nr` for a trait definition where the modulus is known at compile time\n **/\ntrait BigNumTrait {\n    fn new() -> Self;\n    fn one() -> Self;\n    fn from(limbs: [Field]) -> Self;\n    fn from_be_bytes<let NBytes: u32>(x: [u8; NBytes]) -> Self;\n    fn to_le_bytes<let NBytes: u32>(val: Self) -> [u8; NBytes];\n    fn get(self) -> [Field];\n    fn get_limb(self, idx: u64) -> Field;\n    fn set_limb(&mut self, idx: u32, value: Field);\n    fn conditional_select(lhs: Self, rhs: Self, predicate: bool) -> Self;\n    fn validate_in_range(self);\n    fn validate_quotient_in_range(self);\n    fn __is_zero(self) -> bool;\n    fn __eq(self, rhs: Self) -> bool;\n}\n\n/**\n * @brief BigNumInstanceTrait defines methods available to a runtime BigNumInstance.\n *        BigNumInstance wraps the modulus parameter (as well as a Barret reduction parameter),\n *        which is required for the majority of BigNum operations\n **/\ntrait BigNumInstanceTrait<BN> where BN: BigNumTrait {\n    fn modulus(self) -> BN;\n    fn __derive_from_seed<let SeedBytes: u32>(self, seed: [u8; SeedBytes]) -> BN;\n    fn eq(self, lhs: BN, rhs: BN) -> bool;\n    fn __neg(self, val: BN) -> BN;\n    fn __add(self, lhs: BN, rhs: BN) -> BN;\n    fn __sub(self, lhs: BN, rhs: BN) -> BN;\n    fn __mul(self, lhs: BN, rhs: BN) -> BN;\n    fn __div(self, lhs: BN, rhs: BN) -> BN;\n    fn __batch_invert<let M: u32>(self, x: [BN; M]) -> [BN; M];\n    fn __udiv_mod(self, numerator: BN, divisor: BN) -> (BN, BN);\n    fn __invmod(self, val: BN) -> BN;\n    fn __pow(self, val: BN, exponent: BN) -> BN;\n    fn __compute_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BN; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BN; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BN; ADD_N],\n        linear_flags: [bool; ADD_N]\n    ) -> (BN, BN);\n\n    fn evaluate_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BN; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BN; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BN; ADD_N],\n        linear_flags: [bool; ADD_N]\n    );\n\n    fn validate_in_field(self, val: BN);\n    fn validate_gt(self, lhs: BN, rhs: BN);\n    fn assert_is_not_equal(self, lhs: BN, rhs: BN);\n    fn neg(self, val: BN) -> BN;\n    fn add(self, lhs: BN, rhs: BN) -> BN;\n    fn sub(self, lhs: BN, rhs: BN) -> BN;\n    fn mul(self, lhs: BN, rhs: BN) -> BN;\n    fn div(self, lhs: BN, rhs: BN) -> BN;\n    fn udiv_mod(self, numerator: BN, divisor: BN) -> (BN, BN);\n    fn udiv(self, numerator: BN, divisor: BN) -> BN;\n    fn umod(self, numerator: BN, divisor: BN) -> BN;\n\n}\n\n/**\n * @brief BigNumParamsTrait defines a \"field\" with which to parametrise BigNum.\n * @description The \"field\" does not need to be prime, any value *should* work (TODO: test!)\n**/\ntrait BigNumParamsTrait<let N: u32> {\n    /**\n     * @brief modulus_bits = log2(modulus) rounded up\n     **/\n    fn modulus_bits() -> u32;\n\n    fn has_multiplicative_inverse() -> bool { true }\n}\n\nstruct  BigNumInstance<let N: u32, Params> {\n    \n    /**\n     * @brief modulus: all BigNum operations are evaluated modulo this value\n     **/\n    modulus: [Field; N],\n\n    /**\n     * @brief modulus but represented in a U60Repr form\n     **/\n    modulus_u60: U60Repr<N, 2>,\n    modulus_u60_x4: U60Repr<N, 4>,\n\n    // /**\n    //  * @brief double_modulus: used when performing negations and subtractions\n    //  **/\n    double_modulus: [Field; N],\n    // /**\n    //  * @brief redc_param used for __barrett_reduction. See https://en.wikipedia.org/wiki/Barrett_reduction\n    //  **/\n    redc_param: [Field; N],\n}\n\nimpl<let N: u32, Params> BigNum<N, Params> {\n    // some strange circular dependency problem means we need to define `new` as a member of BigNumTrait as well as a definition outside of the trait\n    // (delete this method to see. BigNumInstance methods that use BigNum::new() error out, and I can't find a way of declaring BigNum to satisfy BigNumTrait as part of the BigNumInstance definition because BigNumInstance has no contextual knowledge of the BigNum type...)\n    fn new() -> Self {\n        BigNum { limbs: [0; N] }\n    }\n    fn one() -> BigNum<N, Params> {\n        let mut result: Self = BigNum { limbs: [0; N] };\n        result.limbs[0] = 1;\n        result\n    }\n}\n\nimpl<let N: u32, Params> BigNumTrait for BigNum<N, Params> where Params: BigNumParamsTrait<N> {\n\n    fn new() -> Self {\n        BigNum::new()\n    }\n    fn one() -> Self {\n        BigNum::one()\n    }\n\n    fn from(limbs: [Field]) -> Self {\n        BigNum { limbs: limbs.as_array() }\n    }\n\n    /**\n     * @brief construct a BigNum instance out of an array of bytes in BIG ENDIAN format\n     * @description: each 120-bit limb represents 15 bytes, we require that the size of the byte array\n     *               is precisely large enough to cover Params::modulus_bits()\n     * @param x: input byte array\n     **/\n    fn from_be_bytes<let NBytes: u32>(x: [u8; NBytes]) -> BigNum<N, Params> {\n        let num_bits = NBytes * 8;\n        let modulus_bits = Params::modulus_bits();\n        assert(num_bits >= modulus_bits);\n        assert(num_bits - modulus_bits < 8);\n        let mut result = BigNum::new();\n\n        let excess_bytes = N * 15 - NBytes;\n        let final_limb_bytes = 15 - excess_bytes;\n        let mut limb: Field = 0;\n        let mut k = 0;\n        for _j in 0..final_limb_bytes {\n            limb *= 256;\n            limb += x[k] as Field;\n            k += 1;\n        }\n        result.limbs[N - 1] = limb;\n\n        for i in 1..N {\n            let mut limb: Field = 0;\n            for _j in 0..15 {\n                limb *= 256;\n                limb += x[k] as Field;\n                k += 1;\n            }\n            result.limbs[N - i - 1] = limb;\n        }\n\n        // max_bits_in_most_significant_byte should be known at comptime. if not...messy!\n        let mut max_bits_in_most_significant_byte = 8 - (num_bits - modulus_bits);\n\n        let most_significant_byte: Field = x[0] as Field;\n\n        most_significant_byte.assert_max_bit_size(max_bits_in_most_significant_byte as u32);\n        result\n    }\n\n    fn to_le_bytes<let NBytes: u32>(val: BigNum<N, Params>) -> [u8; NBytes] {\n        let nbytes = (Params::modulus_bits() / 8) + (Params::modulus_bits() % 8 != 0) as u32;\n        assert(nbytes <= NBytes);\n\n        let mut result: [u8; NBytes] = [0; NBytes];\n        for i in 0..N - 1 {\n            let limb_bytes: [u8; 15] = val.limbs[i].to_le_bytes();\n            for j in 0..15 {\n                result[i * 15 + j] = limb_bytes[j];\n            }\n        }\n        let last_limb_bytes: [u8; 15] = val.limbs[N - 1].to_le_bytes();\n        let num_last_bytes = (NBytes - (N - 1) * 15);\n        for i in 0..num_last_bytes {\n            result[(N-1) * 15 + i] = last_limb_bytes[i];\n        }\n        result\n    }\n\n    fn get(self) -> [Field] {\n        self.limbs\n    }\n    fn get_limb(self, idx: u64) -> Field {\n        self.limbs[idx]\n    }\n    fn set_limb(&mut self, idx: u32, value: Field) {\n        self.limbs[idx] = value;\n    }\n\n    /**\n     * @brief conditional_select given the value of `predicate` return either `self` (if 0) or `other` (if 1)\n     * @description should be cheaper than using an IF statement (TODO: check!)\n     **/\n    fn conditional_select(lhs: Self, rhs: Self, predicate: bool) -> Self {\n        let mut result: Self = lhs;\n        for i in 0..N {\n            result.limbs[i] = (lhs.limbs[i] - rhs.limbs[i]) * predicate as Field + rhs.limbs[i];\n        }\n        result\n    }\n\n    /**\n     * @brief Validate a BigNum instance is correctly range constrained to contain no more than Params::modulus_bits()\n     **/\n    fn validate_in_range(self) {\n        for i in 0..(N - 1) {\n            self.limbs[i].assert_max_bit_size(120);\n        }\n        let final_limb_bits = Params::modulus_bits() - ((N - 1) * 120);\n        self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32);\n    }\n\n    /**\n     * @brief validate quotient produced from `evaluate_quadratic_expression` is well-formed\n     * @description because the inputs into evaluate_quadratic_expression may cause the quotient to extend beyond `Params::modulus_bits`.\n     *              We allow the quotient to extend 6 bits beyond Params::modulus_bits()\n     *              Why is this?\n     *              several factors:    1. quotient * modulus , limbs cannot overflow field boundary (254 bits)\n     *                                  2. in `evaluate_quadratic_expression`, we require that for `expression - quotient * modulus`,\n     *                                     limbs cannot exceed 246 bits (246 magic number due to a higher number adding extra range check gates)\n     *              because of factor 2 and the fact that modulus limbs are 120 bits, quotient limbs cannot be >126 bits\n     *\n     *              Note: doesn't this mean that final_limb_bits should be constrained to be 126 bits, not modulus_bits() - ((N - 1) * 120) + 6?\n     *              TODO: think about this more! we want the range constraint we apply to be as small as allowable as this is more efficient\n     **/\n    fn validate_quotient_in_range(self) {\n        for i in 0..(N) {\n            self.limbs[i].assert_max_bit_size(120);\n        }\n        // Note: replace magic number 6 with definition\n        let final_limb_bits = Params::modulus_bits() - ((N - 1) * 120) + 6;\n        self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32);\n    }\n\n    fn __is_zero(self) -> bool {\n        self.__is_zero_impl()\n    }\n\n    fn __eq(self, rhs: Self) -> bool {\n        self.__eq_impl(rhs)\n    }\n}\n\nimpl<let N: u32, Params> BigNum<N, Params> where Params: BigNumParamsTrait<N> {\n\n    fn from_array(limbs: [Field; N]) -> BigNum<N, Params> {\n        BigNum { limbs }\n    }\n\n    unconstrained fn __is_zero_impl(self) -> bool {\n        let mut result: bool = true;\n        for i in 0..N {\n            result = result & (self.limbs[i] == 0);\n        }\n        result\n    }\n\n    unconstrained fn __eq_impl(lhs: Self, rhs: Self) -> bool {\n        lhs.limbs == rhs.limbs\n    }\n}\n\nimpl<let N: u32, Params> BigNumInstanceTrait<BigNum<N, Params>> for BigNumInstance<N, Params> where Params: BigNumParamsTrait<N> {\n\n    fn modulus(self) -> BigNum<N, Params> {\n        BigNum { limbs: self.modulus }\n    }\n    fn __derive_from_seed<let SeedBytes: u32>(self, seed: [u8; SeedBytes]) -> BigNum<N, Params> {\n        self.__derive_from_seed_impl(seed)\n    }\n    // ####################################################################################################################\n    // ####################################################################################################################\n    // ### U N C O N S T R A I N E D    F U N C T I O N S\n    // ### NOTE: these functions call unconstrained internal implementations because trait impl modifiers are not supported \n    // ####################################################################################################################\n    // ####################################################################################################################\n\n    fn __neg(self, val: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__neg_impl(val)\n    }\n\n    fn __add(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__add_impl(lhs, rhs)\n    }\n\n    fn __sub(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__sub_impl(lhs, rhs)\n    }\n\n    fn __mul(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__mul_impl(lhs, rhs)\n    }\n\n    fn __div(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__div_impl(lhs, rhs)\n    }\n\n    fn __batch_invert<let M: u32>(self, x: [BigNum<N, Params>; M]) -> [BigNum<N, Params>; M] {\n        self.batch_invert_impl(x)\n    }\n\n    fn __invmod(self, val: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__invmod_impl(val)\n    }\n\n    fn __pow(self, val: BigNum<N, Params>, exponent: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__pow_impl(val, exponent)\n    }\n\n    fn __compute_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BigNum<N, Params>; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BigNum<N, Params>; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BigNum<N, Params>; ADD_N],\n        linear_flags: [bool; ADD_N]\n    ) -> (BigNum<N, Params>, BigNum<N, Params>) {\n        self.__compute_quadratic_expression_impl(\n            lhs_terms,\n            lhs_flags,\n            rhs_terms,\n            rhs_flags,\n            linear_terms,\n            linear_flags\n        )\n    }\n\n    // ####################################################################################################################\n    // ####################################################################################################################\n    // ### C O N S T R A I N E D    F U N C T I O N S\n    // ####################################################################################################################\n    // ####################################################################################################################\n\n    /**\n     * @brief Constrain a degree-2 BigNum expression to be equal to 0 modulo self.modulus\n     * @description The expression is of the form (when evaluated as an integer relation):\n     *\n     * \\sum_{i=0}^{NUM_PRODUCTS - 1} ((\\sum_{j=0}^{LHS_N-1}lhs[i][j]) * (\\sum_{j=0}^{RHS_N-1}rhs[i][j])) + \\sum_{i=0}^{ADD_N - 1}linear_terms[i] - quotient * modulus = 0\n     *\n     * The intent is to capture an arbitrary degree-2 expression within the limitations of Noir (no efficient dynamically-sized vectors)\n     *\n     * Note: this method requires the remainder term of the expression to be ZERO\n     * When performing BigNum arithmetic, we want to represent desired BigNum operations in a way that minimizes the number of modular reductions that are required.\n     * This can be achieved by minimizing the number of degree-2 relations required.\n     *\n     * The expensive parts of this algorithm are the following:\n     *      1. evaluating the limb products required to compute `lhs * rhs`\n     *      2. applying range constraints to validate the result is 0\n     *\n     * Range constraints are needed for the following reason:\n     * When evaluating the above expression over N-limb BigNum objects, the result will consist of 2N - 1 limbs.\n     * Each limb will be in the range [0, ..., 2^{240 + twiddle_factor} - 1] (twiddle_factor needs to be less than 6).\n     * Because of the subtractions, the limbs may underflow and represent NEGATIVE values.\n     * To account for this, we allow the Prover to borrow values from more significant limbs and add them into less significant limbs\n     * (explicitly, we can borrow 2^{126} from limb `i + 1` to add `2^{246}` into `i`).\n     * To ensure this has been done correctly, we validate that the borrow-adjusted limbs are all-zero for the first 120 bits.\n     * We do *this* by multiplying the borrow-adjusted limbs by 1 / 2^{120} modulo CircutModulus, and we validate the result is in the range [0, ..., 2^{126} - 1].\n     * TODO: explain why this check works. It's statistically sound but not perfectly sound. Chance of the check failing is ~1 in 2^{120}\n     * I believe this is the most efficient way of performing the zero-check for this relation as it only requires `2N - 2` 126-bit range checks.\n     * TODO: explain why we apply a 126-bit range check, this feels like a magic number\n     * (it is. we could go higher, up to the number of bits in the CircuitModulus - 121, but 126 *should be* sufficient and is much cheaper)\n     * TODO: apply checks in this method to validate twiddle_factor does not exceed 6\n     * \n     * @param lhs_terms a 2D array of BigNum\n     * @param lhs_flags a 2D array of sign flags\n     * @param rhs_terms a 2D array of BigNum\n     * @param rhs_flags a 2D array of sign flags\n     * @param linear_terms an array of BigNum\n     * @param linear_flags an array of sign flags\n     **/\n    fn evaluate_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BigNum<N, Params>; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BigNum<N, Params>; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BigNum<N, Params>; ADD_N],\n        linear_flags: [bool; ADD_N]\n    ) {\n        // use an unconstrained function to compute the value of the quotient\n        let (quotient, _, borrow_flags): (BigNum<N, Params>, BigNum<N, Params>, [Field; 2 * N]) = unsafe {\n            self.__compute_quadratic_expression_with_borrow_flags(\n                lhs_terms,\n                lhs_flags,\n                rhs_terms,\n                rhs_flags,\n                linear_terms,\n                linear_flags\n            )\n        };\n        // constrain the quotient to be in the range [0, ..., 2^{m} - 1], where `m` is log2(modulus) rounded up.\n        // Additionally, validate quotient limbs are also in the range [0, ..., 2^{120} - 1]\n        quotient.validate_quotient_in_range();\n        // TODO, validate we do not overflow N2 when multiplying and N when adding\n        // (should be a compile-time check...unconstrained function?)\n\n        // Compute the linear sums that represent lhs_1, rhs_1, lhs_2, rhs_2, add\n        let mut t0: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n        let mut t1: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n        let mut t4: [Field; N] = [0; N];\n\n        // TODO: this is super nasty as it requires a multiplication\n        let double_modulus: [Field; N] = self.double_modulus;\n        for k in 0..NUM_PRODUCTS {\n            for i in 0..N {\n                for j in 0..LHS_N {\n                    // note: if is_negative is not known at comptime this is very expensive\n                    if (lhs_flags[k][j]) {\n                        t0[k][i] -= lhs_terms[k][j].limbs[i];\n                        t0[k][i] += double_modulus[i];\n                    } else {\n                        t0[k][i] += lhs_terms[k][j].limbs[i];\n                    }\n                }\n                for j in 0..RHS_N {\n                    if (rhs_flags[k][j]) {\n                        t1[k][i] -= rhs_terms[k][j].limbs[i];\n                        t1[k][i] += double_modulus[i];\n                    } else {\n                        t1[k][i] += rhs_terms[k][j].limbs[i];\n                    }\n                }\n            }\n        }\n        for i in 0..N {\n            for j in 0..ADD_N {\n                if (linear_flags[j]) {\n                    t4[i] -= linear_terms[j].limbs[i];\n                    t4[i] += double_modulus[i];\n                } else {\n                    t4[i] += linear_terms[j].limbs[i];\n                }\n            }\n        }\n\n        // We want to evaluate that t0 * t1 + t2 * t3 + t4 - Quotient * Modulus = 0, evaluated over the integers\n        // For this we need to be able to borrow values from more-significant limbs into less-significant limbs,\n        // so that we can ensure that no limbs will underflow for an honest Prover\n        let mut product_limbs: [Field; 2 * N] = [0; 2 * N];\n\n        // Compute the product t0 * t1 + t2 * t3 + t4 - Quotient * Modulus\n        // TODO: this is super nasty as it requires a multiplication\n        for i in 0..N {\n            for j in 0..N {\n                for k in 0..NUM_PRODUCTS {\n                    if k == 0 {\n                        let new_term = t0[k][i] * t1[k][j] - quotient.limbs[i] * self.modulus[j];\n                        std::as_witness(new_term); // width-4 optimization (n.b. might not be optimal if t2, t3 input arrays are nonzero)\n                        product_limbs[i + j] += new_term;\n                    } else {\n                        product_limbs[i + j] += t0[k][i] * t1[k][j];\n                    }\n                }\n                if (NUM_PRODUCTS == 0) {\n                    product_limbs[i + j] -= quotient.limbs[i] * self.modulus[j];\n                }\n            }\n            product_limbs[i] += t4[i];\n        }\n\n        // each limb product represents the sum of 120-bit products.\n        // by setting the borrow value to 2^246 we are restricting this method's completeness to expressions\n        // where no more than 64 limb products are summed together.\n        // TODO: check in unconstrained function that this condition is satisfied\n        // TODO: define trade-offs regarding the value of borrow_shift\n        // (the larger the value, the greater the range check that is required on product_limbs)\n        // (126-bit range check is a sweet spot for the barretenberg backend as it decomposes into 9 14-bit range checks)\n        // (the barretenberg backend can evaluate these in 5.25 gates. 127 bits costs 6.5 gates)\n        let borrow_shift: Field = 0x40000000000000000000000000000000000000000000000000000000000000; // 2^{246}\n        let borrow_carry: Field = 0x40000000000000000000000000000000; // 2^{246 - 120} = 2^{126}\n\n        // N.B. borrow_flags is `Field` type because making it `bool` would apply boolean constraints to all `N2` array entries.\n        //      We only use `N2 - 2` borrow flags so applying 1-bit range checks on the array elements we use is more efficient.\n        // TODO: Once it is possible to perform arithmetic on generics we can use `borrow_flags: [bool;N+N-2]` to avoid this issue\n        borrow_flags[0].assert_max_bit_size(1);\n        product_limbs[0] += borrow_flags[0] * borrow_shift;\n        for i in 1..(N + N - 2) {\n            borrow_flags[i].assert_max_bit_size(1);\n            product_limbs[i] += \n                (borrow_flags[i] * borrow_shift - borrow_flags[i - 1] * borrow_carry);\n        }\n        product_limbs[N + N - 2] -= borrow_flags[N + N - 3] * borrow_carry;\n\n        // Final step: Validate `product_limbs` represents the integer value `0`\n        // Each element `i` in `product_limbs` overlaps in bitrange with element `i+1`, EXCEPT for the low 120 bits\n        // i.e. we need to do the following for each limb `i`:\n        //      1. validate the limb's low-120 bits equals zero\n        //      2. compute the limb \"carry\" by right-shifting by 2^{120}\n        //      3. add the carry into limb `i+1`\n        // We can efficiently do all of the above by multiplying the limb by 2^{-120} and constraining the result to be <2^{126}\n        // (if the low 120 bits are nonzero the result will underflow and product a large value that cannot be range constrained)\n        // (the probability of an underflow value satisfying a 126-bit range constraint is approx. 2^{k - 126},\n        //  where k is the number of bits in the prime field)\n        // We then add the result into the next limb and repeat.\n        let hi_shift: Field = 0x1000000000000000000000000000000;\n        let hi_downshift: Field = 1 / hi_shift;\n        for i in 0..N + N - 2 {\n            product_limbs[i] *= hi_downshift;\n            std::as_witness(product_limbs[i]);\n            product_limbs[i].assert_max_bit_size(126); // N.B. is this sufficient? going beyond 126 costs us 1 gate per limb\n            product_limbs[i + 1] += product_limbs[i];\n        }\n        // the most significant limb has no limb to \"carry\" values into - the entire limb must equal zero\n        assert(product_limbs[N + N - 2] == 0);\n    }\n\n    fn validate_in_field(self, val: BigNum<N, Params>) {\n        // N.B. need to combine with validate_in_range if `self` limbs have not been range constrained\n        let mut p_minus_self: [Field; N] = [0; N];\n        let modulus: [Field; N] = self.modulus;\n        for i in 0..N {\n            p_minus_self[i] = modulus[i] - val.limbs[i];\n        }\n        let borrow_flags = unsafe {\n            self.__validate_in_field_compute_borrow_flags(val)\n        };\n        let two_pow_120: Field = 0x1000000000000000000000000000000;\n        p_minus_self[0] += borrow_flags[0] as Field * two_pow_120;\n        for i in 1..N - 1 {\n            p_minus_self[i] += (borrow_flags[i] as Field * two_pow_120 - borrow_flags[i-1] as Field);\n        }\n        p_minus_self[N - 1] -= borrow_flags[N - 2] as Field;\n        let mut compare = val;\n        compare.limbs = p_minus_self;\n        compare.validate_in_range();\n    }\n\n    /**\n     * @brief Validate self != other\n     * @details If A == B, then A == B mod N.\n     *          We can efficiently evaluate A == B mod N where N = circuit modulus\n     *          This method is *sound*, but not *complete* (i.e. A != B but A == B mod N)\n     *          However the probability of an honest Prover being unable to satisfy this check is tiny!\n     *          (todo: compute how tiny)\n     **/\n    fn assert_is_not_equal(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) {\n        let mut l: Field = 0;\n        let mut r: Field = 0;\n        let mut modulus_mod_n: Field = 0;\n        let mut two_pow_120: Field = 0x1000000000000000000000000000000;\n        let modulus = self.modulus;\n        for i in 0..N {\n            l *= two_pow_120;\n            r *= two_pow_120;\n            modulus_mod_n *= two_pow_120;\n            l += lhs.limbs[N - i - 1];\n            r += rhs.limbs[N - i - 1] ;\n            modulus_mod_n += modulus[N - i - 1];\n        }\n\n        // lhs can be either X mod N or P + X mod N\n        // rhs can be either Y mod N or P + Y mod N\n        // If lhs - rhs = 0 mod P then lhs - rhs = 0, P or -P mod N\n        let mut diff = l - r;\n        let mut target = diff * (diff + modulus_mod_n) * (diff - modulus_mod_n);\n        assert(target != 0, \"asssert_is_not_equal fail\");\n    }\n\n    fn eq(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> bool {\n        let diff = self.sub(lhs, rhs);\n        // if self == other, possible values of `diff` will be `p` or `0`\n        // (the subtract operator constrains diff to be < ceil(log(p)))\n        // TODO: can do this more efficiently via witngen in unconstrained functions?\n        let mut is_equal_modulus: bool = true;\n        let mut is_equal_zero: bool = true;\n        for i in 0..N {\n            is_equal_modulus = is_equal_modulus & (diff.limbs[i] == self.modulus[i]);\n            is_equal_zero = is_equal_zero & (diff.limbs[i] == 0);\n        }\n        is_equal_modulus | is_equal_zero\n    }\n\n    fn neg(self, val: BigNum<N, Params>) -> BigNum<N, Params> {\n        // so we do... p - x - r = 0 and there might be borrow flags\n        let (result, borrow_flags) = unsafe {\n            self.__neg_with_flags(val)\n        };\n        result.validate_in_range();\n        let modulus = self.modulus;\n        let borrow_shift = 0x1000000000000000000000000000000;\n        let result_limb = modulus[0] - val.limbs[0] - result.limbs[0] + (borrow_flags[0] as Field * borrow_shift);\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let result_limb = modulus[i] - val.limbs[i] - result.limbs[i] - borrow_flags[i - 1] as Field\n                + (borrow_flags[i] as Field * borrow_shift);\n            assert(result_limb == 0);\n        }\n        let result_limb = modulus[N - 1] - val.limbs[N - 1] - result.limbs[N - 1] - borrow_flags[N - 2] as Field;\n        assert(result_limb == 0);\n        result\n    }\n\n    fn add(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        // so we do... p - x - r = 0 and there might be borrow flags\n        let (result, carry_flags, borrow_flags, overflow_modulus) = unsafe {\n            self.__add_with_flags(lhs, rhs)\n        };\n        result.validate_in_range();\n        let modulus = self.modulus;\n        let borrow_shift = 0x1000000000000000000000000000000;\n        let carry_shift = 0x1000000000000000000000000000000;\n\n        let mut subtrahend: [Field; N] = [0; N];\n        if (overflow_modulus) {\n            subtrahend = modulus;\n        }\n        let result_limb = lhs.limbs[0] + rhs.limbs[0] - subtrahend[0] - result.limbs[0]\n            + (borrow_flags[0] as Field * borrow_shift)\n            - (carry_flags[0] as Field * carry_shift);\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let result_limb = lhs.limbs[i] + rhs.limbs[i]\n                - subtrahend[i]\n                - result.limbs[i]\n                - borrow_flags[i - 1] as Field\n                + carry_flags[i - 1] as Field\n                + ((borrow_flags[i] as Field - carry_flags[i] as Field) * borrow_shift);\n            assert(result_limb == 0);\n        }\n        let result_limb = lhs.limbs[N - 1] + rhs.limbs[N - 1]\n            - subtrahend[N - 1]\n            - result.limbs[N - 1]\n            - borrow_flags[N - 2] as Field\n            + carry_flags[N - 2] as Field;\n        assert(result_limb == 0);\n        result\n    }\n\n    // validate that lhs - rhs does not underflow i.e. lhs > rhs\n    fn validate_gt(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) {\n        // so we do... p - x - r = 0 and there might be borrow flags\n\n        // a - b = r\n        // p + a - b - r = 0\n        let (result, carry_flags, borrow_flags) = unsafe {\n            self.__validate_gt_remainder(lhs, rhs)\n        };\n\n        result.validate_in_range();\n\n        let borrow_shift = 0x1000000000000000000000000000000;\n        let carry_shift = 0x1000000000000000000000000000000;\n\n        let mut addend: [Field; N] = [0; N];\n        let result_limb = lhs.limbs[0] - rhs.limbs[0] + addend[0] - result.limbs[0] - 1\n            + (borrow_flags[0] as Field * borrow_shift)\n            - (carry_flags[0] as Field * carry_shift);\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let result_limb = lhs.limbs[i] - rhs.limbs[i] + addend[i] - result.limbs[i] - borrow_flags[i - 1] as Field\n                + carry_flags[i - 1] as Field\n                + ((borrow_flags[i] as Field - carry_flags[i] as Field) * borrow_shift);\n            assert(result_limb == 0);\n        }\n        let result_limb = lhs.limbs[N - 1] - rhs.limbs[N - 1] + addend[N - 1]\n            - result.limbs[N - 1]\n            - borrow_flags[N - 2] as Field\n            + carry_flags[N - 2] as Field;\n        assert(result_limb == 0);\n    }\n\n    fn sub(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        // so we do... p - x - r = 0 and there might be borrow flags\n\n        // a - b = r\n        // p + a - b - r = 0\n        let (result, carry_flags, borrow_flags, underflow) = unsafe {\n            self.__sub_with_flags(lhs, rhs)\n        };\n        result.validate_in_range();\n        let modulus = self.modulus;\n        let borrow_shift = 0x1000000000000000000000000000000;\n        let carry_shift = 0x1000000000000000000000000000000;\n\n        let mut addend: [Field; N] = [0; N];\n        if (underflow) {\n            addend = modulus;\n        }\n        let result_limb = lhs.limbs[0] - rhs.limbs[0] + addend[0] - result.limbs[0]\n            + (borrow_flags[0] as Field * borrow_shift)\n            - (carry_flags[0] as Field * carry_shift);\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let result_limb = lhs.limbs[i] - rhs.limbs[i] + addend[i] - result.limbs[i] - borrow_flags[i - 1] as Field\n                + carry_flags[i - 1] as Field\n                + ((borrow_flags[i] as Field - carry_flags[i] as Field) * borrow_shift);\n            assert(result_limb == 0);\n        }\n        let result_limb = lhs.limbs[N - 1] - rhs.limbs[N - 1] + addend[N - 1]\n            - result.limbs[N - 1]\n            - borrow_flags[N - 2] as Field\n            + carry_flags[N - 2] as Field;\n        assert(result_limb == 0);\n        result\n    }\n    // Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n    //       via evaluate_quadratic_expression\n    // e.g. performing a sum of multiple multiplications and additions via `evaluate_quadratic_expression`\n    //      will create much fewer constraints than calling `mul` and `add` directly\n    fn mul(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        let result = self.__mul(lhs, rhs);\n        self.evaluate_quadratic_expression([[lhs]], [[false]], [[rhs]], [[false]], [result], [true]);\n        result\n    }\n    // Note: this method is expensive! Witness computation is extremely expensive as it requires modular exponentiation\n    fn div(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        assert(\n            Params::has_multiplicative_inverse(), \"BigNum has no multiplicative inverse. Use udiv for unsigned integer division\"\n        );\n        let result = self.__div(lhs, rhs);\n        self.evaluate_quadratic_expression([[result]], [[false]], [[rhs]], [[false]], [lhs], [true]);\n        result\n    }\n\n    /**\n     * @brief __udiv_mod performs *unconstrained* integer division between numerator, divisor \n     *\n     * i.e. 1. floor(numerator / divisor) = quotient\n     *      2. numerator % divisor = remainder\n     *      3. divisor * quotient + remainder = numerator\n     **/\n    fn __udiv_mod(\n        self,\n        numerator: BigNum<N, Params>,\n        divisor: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, BigNum<N, Params>) {\n        self.__udiv_mod_impl(numerator, divisor)\n    }\n    /**\n     * @brief udiv_mod performs integer division between numerator, divisor \n     *\n     * i.e. 1. floor(numerator / divisor) = quotient\n     *      2. numerator % divisor = remainder\n     *      3. divisor * quotient + remainder = numerator\n     **/\n    fn udiv_mod(\n        self,\n        numerator: BigNum<N, Params>,\n        divisor: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, BigNum<N, Params>) {\n        let (quotient, remainder) = BigNumInstance::__udiv_mod_impl(self, numerator, divisor);\n\n        // self / divisor = quotient rounded\n        // quotient * divisor + remainder - self = 0\n        self.evaluate_quadratic_expression(\n            [[quotient]],\n            [[false]],\n            [[divisor]],\n            [[false]],\n            [numerator, remainder],\n            [true, false]\n        );\n        // we need (remainder < divisor)\n        // implies (divisor - remainder > 0)\n        self.validate_gt(divisor, remainder);\n        (quotient, remainder)\n    }\n\n    /**\n     * @brief udiv_mod performs integer division between numerator, divisor \n     *\n     * i.e. return param is floor(numerator / divisor)\n     **/\n    fn udiv(self, numerator: BigNum<N, Params>, divisor: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.udiv_mod(numerator, divisor).0\n    }\n\n    /**\n     * @brief udiv_mod performs integer modular reduction\n     *\n     * i.e. 1. numerator % divisor = return value\n     **/\n    fn umod(self, numerator: BigNum<N, Params>, divisor: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.udiv_mod(numerator, divisor).1\n    }\n}\n\nimpl<let N: u32, Params> BigNumInstance<N, Params> where Params: BigNumParamsTrait<N> {\n\n    // ####################################################################################################################\n    // ####################################################################################################################\n    // ### C  O  N  S  T  R  U  C  T  O  R  S\n    // ####################################################################################################################\n    // ####################################################################################################################\n\n    fn new(modulus: [Field; N], redc_param: [Field; N]) -> Self {\n        Self {\n            redc_param,\n            modulus,\n            modulus_u60: U60Repr::from(modulus),\n            modulus_u60_x4: U60Repr::from(modulus),\n            double_modulus: get_double_modulus(modulus)\n        }\n    }\n\n    unconstrained fn __derive_from_seed_impl<let SeedBytes: u32>(self, seed: [u8; SeedBytes]) -> BigNum<N, Params> {\n        let mut rolling_seed = seed;\n\n        let mut to_reduce: [Field; 2 * N] = [0; 2 * N];\n\n        let mut double_modulus_bits = Params::modulus_bits() * 2;\n        let mut double_modulus_bytes = (double_modulus_bits) / 8 + (double_modulus_bits % 8 != 0) as u32;\n\n        let mut last_limb_bytes = double_modulus_bytes % 15;\n        if (last_limb_bytes == 0) {\n            last_limb_bytes = 15;\n        }\n        let mut last_limb_bits = double_modulus_bits % 8;\n        if (last_limb_bits == 0) {\n            last_limb_bits = 8;\n        }\n\n        for i in 0..(N - 1) {\n            let hash: [u8; 32] = std::hash::sha256(rolling_seed);\n            let mut lo: Field = 0;\n            let mut hi: Field = 0;\n            for j in 0..15 {\n                hi *= 256;\n                lo *= 256;\n\n                if (i < 2 * N - 2) {\n                    lo += hash[j + 15] as Field;\n                    hi += hash[j] as Field;\n                }\n            }\n            to_reduce[2 * i] = lo;\n            to_reduce[2 * i + 1] = hi;\n            rolling_seed[0] += 1;\n        }\n\n        {\n            let hash: [u8; 32] = std::hash::sha256(rolling_seed);\n            let mut hi: Field = 0;\n            for j in 0..(last_limb_bytes - 1) {\n                hi *= 256;\n                hi += hash[j] as Field;\n            }\n            hi *= 256;\n            let last_byte = hash[last_limb_bytes - 1];\n            let mask = (1 as u64 << (last_limb_bits) as u8) - 1;\n            let last_bits = last_byte as u64 & mask;\n            hi += last_bits as Field;\n            to_reduce[2 * N - 2] = hi;\n        }\n\n        let (_, remainder) = __barrett_reduction(\n            to_reduce,\n            self.redc_param,\n            Params::modulus_bits(),\n            self.modulus,\n            self.modulus_u60_x4\n        );\n        let mut result = BigNum::new();\n        result.limbs = remainder;\n        result\n    }\n\n    // ####################################################################################################################\n    // ####################################################################################################################\n    // ### U N C O N S T R A I N E D    F U N C T I O N S\n    // ####################################################################################################################\n    // ####################################################################################################################\n\n    unconstrained fn __validate_in_field_compute_borrow_flags(self: Self, val: BigNum<N, Params>) -> [bool; N] {\n        let mut flags: [bool; N] = [false; N];\n        let modulus: [Field; N] = self.modulus;\n        flags[0] = modulus[0].lt(val.limbs[0]);\n        for i in 1..N - 1 {\n            flags[i] = modulus[i].lt(val.limbs[i] + flags[i - 1] as Field);\n        }\n        flags\n    }\n\n    unconstrained fn __pow_impl(self, val: BigNum<N, Params>, exponent: BigNum<N, Params>) -> BigNum<N, Params> {\n        let x: U60Repr<N, 2> = U60Repr::from(exponent.limbs);\n\n        let num_bits = Params::modulus_bits() + 1;\n\n        let mut accumulator: BigNum<N, Params> = BigNum::one();\n\n        for i in 0..num_bits {\n            accumulator = self.__mul(accumulator, accumulator);\n            if x.get_bit(num_bits - i - 1) {\n                accumulator = self.__mul(accumulator, val);\n            }\n        }\n        accumulator\n    }\n\n    unconstrained fn __mul_with_quotient(\n        self,\n        lhs: BigNum<N, Params>,\n        rhs: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, BigNum<N, Params>) {\n        let mut mul: [Field; 2 * N] = [0; 2 * N];\n        for i in 0..N {\n            for j in 0..N {\n                mul[i + j] += lhs.limbs[i] * rhs.limbs[j];\n            }\n        }\n        let (q, r) = __barrett_reduction(\n            split_bits::__normalize_limbs(mul, 2 * N),\n            self.redc_param,\n            Params::modulus_bits(),\n            self.modulus,\n            self.modulus_u60_x4\n        );\n\n        let mut quotient = BigNum::from_array(q);\n        let mut remainder = BigNum::from_array(r);\n        (quotient, remainder)\n    }\n\n    unconstrained fn __mul_impl(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        let (_, b) = self.__mul_with_quotient(lhs, rhs);\n        b\n    }\n\n    unconstrained fn __add_impl(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        let x_u60 : U60Repr<N, 2> = U60Repr::from(lhs.limbs);\n        let y_u60 : U60Repr<N, 2> = U60Repr::from(rhs.limbs);\n\n        let mut z_u60 = x_u60 + y_u60;\n\n        if z_u60.gte(self.modulus_u60) {\n            z_u60 = z_u60 - self.modulus_u60;\n        }\n        let mut result = BigNum::from_array(U60Repr::into(z_u60));\n        result\n    }\n\n    /**\n     * @brief given an input `x`, compute `2p - x` (unconstrained)\n     *\n     * @description we subtract the input from double the modulus, because all constrained BigNum operations\n     *              only guarantee that the output is in the range [0, ceil(log2(p))].\n     *              I.E. the input may be larger than the modulus `p`.\n     *              In order to ensure this operation does not underflow, we compute `2p - x` instead of `p - x`.\n     *              N.B. constrained BigNum operations do not fully constrain outputs to be in the range [0, p-1]\n     *              because such a check is expensive and usually unneccesary.\n     */\n    unconstrained fn __neg_impl(self, val: BigNum<N, Params>) -> BigNum<N, Params> {\n        let f: [Field; N] = val.limbs;\n        let x_u60 : U60Repr<N, 2> = U60Repr::from(f);\n        let mut result = BigNum::from_array(U60Repr::into(self.modulus_u60 - x_u60));\n        result\n    }\n\n    unconstrained fn __add_with_flags(\n        self,\n        lhs: BigNum<N, Params>,\n        rhs: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, [bool; N], [bool; N], bool) {\n        let a_u60 : U60Repr<N, 2> = U60Repr::from(lhs.limbs);\n        let b_u60 : U60Repr<N, 2> = U60Repr::from(rhs.limbs);\n        let add_u60 = a_u60 + b_u60;\n\n        let overflow = add_u60.gte(self.modulus_u60);\n\n        let mut subtrahend_u60 : U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n        let mut result_u60 : U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n\n        if overflow {\n            subtrahend_u60 = self.modulus_u60;\n        }\n\n        let mut carry: u64 = 0;\n        let mut carry_in: u64 = 0;\n        let mut borrow: u64 = 0;\n        let mut borrow_in: u64 = 0;\n        let mut borrow_flags: [bool; N] = [false; N];\n        let mut carry_flags: [bool; N] = [false; N];\n        for i in 0..2 * N {\n            let mut add_term: u64 = a_u60.limbs[i] + b_u60.limbs[i] + carry_in;\n            carry = (add_term >= 0x1000000000000000) as u64;\n            add_term -= (carry as u64 * 0x1000000000000000);\n            result_u60.limbs[i] = add_term;\n            carry_in = carry as u64;\n            borrow = ((subtrahend_u60.limbs[i] + borrow_in) > result_u60.limbs[i]) as u64;\n            let sub = (borrow << 60) + result_u60.limbs[i] - subtrahend_u60.limbs[i] - borrow_in;\n            result_u60.limbs[i] = sub;\n            borrow_in = borrow;\n\n            if ((i & 1) == 1) {\n                let idx = (i - 1) / 2;\n                if (carry & borrow == 1) {\n                    carry = 0;\n                    borrow = 0;\n                }\n                carry_flags[idx] = carry as bool;\n                borrow_flags[idx] = borrow as bool;\n            }\n        }\n        let mut result = BigNum::from_array(U60Repr::into(result_u60));\n\n        (result, carry_flags, borrow_flags, overflow)\n    }\n\n    unconstrained fn __validate_gt_remainder(\n        _: Self,\n        lhs: BigNum<N, Params>,\n        rhs: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, [bool; N], [bool; N]) {\n        let a_u60 : U60Repr<N, 2> = U60Repr::from(lhs.limbs);\n        let mut b_u60 : U60Repr<N, 2> = U60Repr::from(rhs.limbs);\n\n        let underflow = b_u60.gte(a_u60);\n        b_u60 += U60Repr::one();\n        assert(underflow == false, \"BigNum::validate_gt check fails\");\n        let mut addend_u60 : U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n        let mut result_u60 : U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n\n        let mut carry: u64 = 0;\n        let mut carry_in: u64 = 0;\n        let mut borrow: u64 = 0;\n        let mut borrow_in: u64 = 0;\n        let mut borrow_flags: [bool; N] = [false; N];\n        let mut carry_flags: [bool; N] = [false; N];\n        for i in 0..2 * N {\n            let mut add_term: u64 = a_u60.limbs[i] + addend_u60.limbs[i] + carry_in;\n            carry = (add_term >= 0x1000000000000000) as u64;\n            add_term -= (carry as u64 * 0x1000000000000000);\n            result_u60.limbs[i] = add_term;\n            carry_in = carry as u64;\n            borrow = ((b_u60.limbs[i] + borrow_in) > result_u60.limbs[i]) as u64;\n            let sub = (borrow << 60) + result_u60.limbs[i] - b_u60.limbs[i] - borrow_in;\n            result_u60.limbs[i] = sub;\n            borrow_in = borrow;\n\n            if ((i & 1) == 1) {\n                if (carry & borrow == 1) {\n                    carry = 0;\n                    borrow = 0;\n                }\n                carry_flags[i/2] = carry as bool;\n                borrow_flags[i/2] = borrow as bool;\n            }\n        }\n\n        let mut result = BigNum::from_array(U60Repr::into(result_u60));\n        (result, carry_flags, borrow_flags)\n    }\n\n    unconstrained fn __sub_with_flags(\n        self,\n        lhs: BigNum<N, Params>,\n        rhs: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, [bool; N], [bool; N], bool) {\n        let a_u60 : U60Repr<N, 2> = U60Repr::from(lhs.limbs);\n        let b_u60 : U60Repr<N, 2> = U60Repr::from(rhs.limbs);\n\n        let underflow = b_u60.gte(a_u60 + U60Repr::one());\n\n        let mut addend_u60 : U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n        let mut result_u60 : U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n\n        if underflow {\n            addend_u60 = self.modulus_u60;\n        }\n\n        let mut carry: u64 = 0;\n        let mut carry_in: u64 = 0;\n        let mut borrow: u64 = 0;\n        let mut borrow_in: u64 = 0;\n        let mut borrow_flags: [bool; N] = [false; N];\n        let mut carry_flags: [bool; N] = [false; N];\n        for i in 0..2 * N {\n            let mut add_term: u64 = a_u60.limbs[i] + addend_u60.limbs[i] + carry_in;\n            carry = (add_term >= 0x1000000000000000) as u64;\n            add_term -= (carry as u64 * 0x1000000000000000);\n            result_u60.limbs[i] = add_term;\n            carry_in = carry as u64;\n            borrow = ((b_u60.limbs[i] + borrow_in) > result_u60.limbs[i]) as u64;\n            let sub = (borrow << 60) + result_u60.limbs[i] - b_u60.limbs[i] - borrow_in;\n            result_u60.limbs[i] = sub;\n            borrow_in = borrow;\n\n            if ((i & 1) == 1) {\n                if (carry & borrow == 1) {\n                    carry = 0;\n                    borrow = 0;\n                }\n                carry_flags[i/2] = carry as bool;\n                borrow_flags[i/2] = borrow as bool;\n            }\n        }\n        let mut result = BigNum::from_array(U60Repr::into(result_u60));\n        (result, carry_flags, borrow_flags, underflow)\n    }\n\n    unconstrained fn __neg_with_flags(self, val: BigNum<N, Params>) -> (BigNum<N, Params>, [bool; N]) {\n        let f: [Field; N] = val.limbs;\n        let x_u60 : U60Repr<N, 2> = U60Repr::from(f);\n        let mut result_u60 : U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n\n        let mut borrow: u64 = 0;\n        let mut borrow_in: u64 = 0;\n\n        let mut borrow_flags: [bool; N] = [false; N];\n        for i in 0..2 * N {\n            borrow = ((x_u60.limbs[i] + borrow_in) > self.modulus_u60.limbs[i]) as u64;\n            let sub = (borrow << 60) + self.modulus_u60.limbs[i] - x_u60.limbs[i] - borrow_in;\n            result_u60.limbs[i] = sub;\n            borrow_in = borrow;\n            if ((i & 1) == 1) {\n                borrow_flags[i / 2] = borrow as bool;\n            }\n        }\n        let mut result = BigNum::from_array(U60Repr::into(result_u60));\n        (result, borrow_flags)\n    }\n\n    /**\n     * @brief given inputs `x, y` compute 2p + x - y (unconstrained)\n     * @description see `__neg` for why we use 2p instead of p\n     **/\n    unconstrained fn __sub_impl(self, lhs: BigNum<N, Params>, rhs: BigNum<N, Params>) -> BigNum<N, Params> {\n        self.__add(lhs, self.__neg(rhs))\n    }\n\n    unconstrained fn __invmod_impl(self, val: BigNum<N, Params>) -> BigNum<N, Params> {\n        let one: BigNum<N, Params> = BigNum::one();\n        let one_u60: U60Repr<N, 2> = U60Repr::from(one.limbs);\n        let exponent = self.modulus_u60.sub(one_u60.add(one_u60));\n        let mut result = BigNum::from_array(U60Repr::into(exponent));\n        self.__pow(val, result)\n    }\n\n    unconstrained fn batch_invert_impl<let M: u32>(self, x: [BigNum<N, Params>; M]) -> [BigNum<N, Params>; M] {\n        // TODO: ugly! Will fail if input slice is empty\n        let mut accumulator: BigNum<N, Params> = BigNum::one();\n        let mut result: [BigNum<N, Params>; M] = [BigNum::new(); M];\n        let mut temporaries: [BigNum<N, Params>] = &[];\n        for i in 0..x.len() {\n            temporaries = temporaries.push_back(accumulator);\n            if (x[i].__is_zero() == false) {\n                accumulator = self.__mul(accumulator, x[i]);\n            }\n        }\n\n        accumulator = self.__invmod(accumulator);\n        let mut T0: BigNum<N, Params> = BigNum::new();\n        T0.limbs = [0; N];\n        for i in 0..x.len() {\n            let idx = x.len() - 1 - i;\n            if (x[idx].__is_zero() == false) {\n                T0 = self.__mul(accumulator, temporaries[idx]);\n                accumulator = self.__mul(accumulator, x[idx]);\n                result[idx] = T0;\n            }\n        }\n        result\n    }\n\n    unconstrained fn batch_invert_slice_impl(self, x: [BigNum<N, Params>]) -> [BigNum<N, Params>] {\n        // TODO: ugly! Will fail if input slice is empty\n        let mut accumulator: BigNum<N, Params> = BigNum::one();\n        let mut result: [BigNum<N, Params>] = [BigNum::new()];\n        let mut temporaries: [BigNum<N, Params>] = &[];\n        for i in 0..x.len() {\n            temporaries = temporaries.push_back(accumulator);\n            if (x[i].__is_zero() == false) {\n                accumulator = self.__mul(accumulator, x[i]);\n            }\n            result = result.push_back(BigNum::new());\n        }\n\n        accumulator = self.__invmod(accumulator);\n        let mut T0: BigNum<N, Params> = BigNum::new();\n        T0.limbs = [0; N];\n        for i in 0..x.len() {\n            let idx = x.len() - 1 - i;\n            if (x[idx].__is_zero() == false) {\n                T0 = self.__mul(accumulator, temporaries[idx]);\n                accumulator = self.__mul(accumulator, x[idx]);\n                result[idx] = T0;\n            }\n        }\n        result\n    }\n\n    unconstrained fn __div_impl(self, numerator: BigNum<N, Params>, divisor: BigNum<N, Params>) -> BigNum<N, Params> {\n        let t0 = self.__invmod(divisor);\n        self.__mul(numerator, t0)\n    }\n\n    /**\n     * @brief Computes the result of a linear combination of (possibly negative) BigNum values (unconstrained)\n     **/\n    // NOTE: modulus2 is structured such that all limbs will be greater than 0, even when subtracting.\n    // To do this, when computing `p - x`, we ensure that each limb in `p` is greater than each limb in `x`.\n    // We know that, for a valid bignum element, the limbs in `x` will be <2^{120}\n    // Therefore each of the limbs in `p` (except the most significant) will borrow 2^{120} from the more significant limb.\n    // Finally, to ensure we do not underflow in the most significant limb, we use `2p` instead of `p`\n    unconstrained fn __add_linear_expression<let M: u32>(\n        self,\n        x: [BigNum<N, Params>; M],\n        flags: [bool; M]\n    ) -> ([Field; N]) {\n        // TODO, validate we do not overflow N2 when multiplying and N when adding\n        let mut sum: [Field; N] = [0; N];\n        // TODO: ugly! Will fail if input array is empty\n        let modulus2: [Field;N] = self.double_modulus;\n        for i in 0..M {\n            if (flags[i]) {\n                for j in 0..N {\n                    sum[j] = sum[j] + modulus2[j] - x[i].limbs[j];\n                    assert(x[i].limbs[j].lt(modulus2[j]));\n                }\n            } else {\n                for j in 0..N {\n                    sum[j] = sum[j] + x[i].limbs[j];\n                }\n            }\n        }\n        // problem if we normalize when used in computing quotient\n        sum\n    }\n\n    /**\n     * @brief computes the limb products of a quadratic expression\n     * @details see __compute_quadratic_expression_with_borrow_flags for full description\n     **/\n    unconstrained fn __compute_quadratic_expression_product<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BigNum<N, Params>; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BigNum<N, Params>; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BigNum<N, Params>; ADD_N],\n        linear_flags: [bool; ADD_N]\n    ) -> [Field; 2 * N] {\n        // TODO, validate we do not overflow N2 when multiplying and N when adding\n        let mut lhs: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n        let mut rhs: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n        let mut add: [Field; N] = [0; N];\n\n        for i in 0..NUM_PRODUCTS {\n            lhs[i] = self.__add_linear_expression(lhs_terms[i], lhs_flags[i]);\n            rhs[i] = self.__add_linear_expression(rhs_terms[i], rhs_flags[i]);\n        }\n\n        let add: [Field; N] = self.__add_linear_expression(linear_terms, linear_flags);\n\n        let mut mulout: [Field; 2 * N] = [0; 2 * N];\n\n        for i in 0..N {\n            for j in 0..N {\n                for k in 0..NUM_PRODUCTS {\n                    mulout[i + j] += (lhs[k][i] * rhs[k][j]);\n                }\n            }\n            mulout[i] += add[i];\n        }\n        mulout\n    }\n\n    /**\n     * @brief computes the quotient/remainder of a quadratic expression\n     * @details see __compute_quadratic_expression_with_borrow_flags for full description\n     **/\n    unconstrained fn __compute_quadratic_expression_impl<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BigNum<N, Params>; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BigNum<N, Params>; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BigNum<N, Params>; ADD_N],\n        linear_flags: [bool; ADD_N]\n    ) -> (BigNum<N, Params>, BigNum<N, Params>) {\n        // TODO, validate we do not overflow N2 when multiplying and N when adding\n        let mulout = self.__compute_quadratic_expression_product(\n            lhs_terms,\n            lhs_flags,\n            rhs_terms,\n            rhs_flags,\n            linear_terms,\n            linear_flags\n        );\n        let mut relation_result: [Field; 2 * N] = split_bits::__normalize_limbs(mulout, 2 * N);\n\n        // TODO: ugly! Will fail if input slice is empty\n        let k  = Params::modulus_bits();\n\n        let (quotient, remainder) = __barrett_reduction(\n            relation_result,\n            self.redc_param,\n            k,\n            self.modulus,\n            self.modulus_u60_x4\n        );\n\n        let mut q = BigNum::from_array(quotient);\n        let mut r = BigNum::from_array(remainder);\n        (q, r)\n    }\n\n    /**\n     * @brief Given a degree-2 BigNum expression that is equal to 0 mod p, compute the quotient and borrow flags \n     * @description The expression is of the form:\n     *\n     * \\sum_{i=0}^{NUM_PRODUCTS - 1} ((\\sum_{j=0}^{LHS_N-1}lhs[i][j]) * (\\sum_{j=0}^{RHS_N-1}rhs[i][j])) + \\sum_{i=0}^{ADD_N - 1}linear_terms[i] = quotient * modulus\n     *\n     * The intent is to capture an arbitrary degree-2 expression within the limitations of Noir (no efficient dynamically-sized vectors)\n     *\n     * When performing BigNum arithmetic, we want to represent desired BigNum operations in a way that minimizes the number of modular reductions that are required.\n     * This can be achieved by minimizing the number of degree-2 relations required.\n     *\n     * The borrow flags describe whether individual Field limbs will underflow when evaluating the above relation.\n     * For example, when computing the product a * b - q * p = 0, it is possible that:\n     *      1. a[0]*b[0] - p[0]*q[0] = -2^{120}\n     *      2. a[0]*b[1] + a[1]*b[0] - p[0]*q[1] - p[1]*q[0] = 1\n     * In the above example, the value represented by these two limbs is zero despite each limb being nonzero.\n     * In this case, to correctly constrain the result, we must add (at least) 2^{120} from the first limb and subtract 1 from the second.\n     *\n     * @param lhs_terms a 2D array of BigNum\n     * @param lhs_flags a 2D array of sign flags\n     * @param rhs_terms a 2D array of BigNum\n     * @param rhs_flags a 2D array of sign flags\n     * @param linear_terms an array of BigNum\n     * @param linear_flags an array of sign flags\n     **/\n    unconstrained fn __compute_quadratic_expression_with_borrow_flags<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        self,\n        lhs_terms: [[BigNum<N, Params>; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[BigNum<N, Params>; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [BigNum<N, Params>; ADD_N],\n        linear_flags: [bool; ADD_N]\n    ) -> (BigNum<N, Params>, BigNum<N, Params>, [Field; 2 * N]) {\n        // TODO, validate we do not overflow N2 when multiplying and N when adding\n\n        let mut mulout_p = self.__compute_quadratic_expression_product(\n            lhs_terms,\n            lhs_flags,\n            rhs_terms,\n            rhs_flags,\n            linear_terms,\n            linear_flags\n        );\n        let mut mulout_n: [Field; 2 * N] = [0; 2 * N];\n        let mut relation_result: [Field; 2 * N] = split_bits::__normalize_limbs(mulout_p, 2 * N);\n\n        let modulus: [Field; N] = self.modulus;\n        let (quotient, remainder) = __barrett_reduction(\n            relation_result,\n            self.redc_param,\n            Params::modulus_bits(),\n            modulus,\n            self.modulus_u60_x4\n        );\n        assert(remainder == [0; N]);\n\n        for i in 0..N {\n            for j in 0..N {\n                mulout_n[i + j] += quotient[i] * modulus[j];\n            }\n        }\n\n        // compute borrow flags from mulout_p and mulout_n\n        let mut borrow_flags: [Field; 2 * N] = [0; 2 * N];\n        let borrow_shift: Field = 0x40000000000000000000000000000000000000000000000000000000000000; // 2^{246}\n        let borrow_carry: Field = 0x40000000000000000000000000000000; // 2^{246 - 120} = 2^{126}\n        let two_pow_120: Field = 0x1000000000000000000000000000000;\n        let downshift: Field = 1 / two_pow_120;\n\n        // determine whether we need to borrow from more significant limbs.\n        // initial limb is \"simple\" comparison operation\n        // TODO: check how expensive `lt` operator is w.r.t. witness generation\n        borrow_flags[0] = mulout_p[0].lt(mulout_n[0]) as Field;\n        // we have 2N - 2 borrow flags. The number of limbs from our product computation is 2N - 1\n        // and there is nothing to borrow against for the final limb.\n        let mut hi_bits = (mulout_p[0] - mulout_n[0] + (borrow_flags[0] * borrow_shift)) * downshift;\n        for i in 1..(N + N - 2) {\n            // compute the contribution from limb `i-1` that gets added into limb `i`, and add into limb `i`\n            // let hi_bits = (mulout_p.get(i - 1) - mulout_n.get(i - 1) + (borrow_flags.get(i - 1) * borrow_shift))\n            //     * downshift;\n            mulout_p[i] += hi_bits;\n\n            // determine whether negative limb values are greater than positive limb values\n            let underflow: Field = mulout_p[i].lt(mulout_n[i] + (borrow_flags[i - 1] * borrow_carry)) as Field;\n            borrow_flags[i] = underflow;\n\n            hi_bits = (mulout_p[i] - mulout_n[i] + (borrow_flags[i] * borrow_shift)\n                - (borrow_flags[i - 1] * borrow_carry)) * downshift;\n        }\n\n        let mut q = BigNum::from_array(quotient);\n        let mut r = BigNum::from_array(remainder);\n        (q, r, borrow_flags)\n    }\n\n    unconstrained fn __udiv_mod_impl(\n        _: Self,\n        numerator: BigNum<N, Params>,\n        divisor: BigNum<N, Params>\n    ) -> (BigNum<N, Params>, BigNum<N, Params>) {\n        let mut quotient_u60: U60Repr<N, 2> = U60Repr::from([0; N]);\n        let mut remainder_u60: U60Repr<N, 2> = U60Repr::from(numerator.limbs);\n\n        let mut divisor_u60: U60Repr<N, 2> = U60Repr::from(divisor.limbs);\n        let b = divisor_u60;\n\n        let mut bit_difference = remainder_u60.get_msb() - divisor_u60.get_msb();\n\n        let mut accumulator_u60: U60Repr<N, 2> = U60Repr::one();\n        divisor_u60 = divisor_u60.shl(bit_difference);\n        accumulator_u60 = accumulator_u60.shl(bit_difference);\n\n        if (divisor_u60.gte(remainder_u60 + U60Repr::one())) {\n            divisor_u60.shr1();\n            accumulator_u60.shr1();\n        }\n        for _ in 0..(N * 120) {\n            if (remainder_u60.gte(b) == false) {\n                break;\n            }\n\n            // we've shunted 'divisor' up to have the same bit length as our remainder.\n            // If remainder >= divisor, then a is at least '1 << bit_difference' multiples of b\n            if (remainder_u60.gte(divisor_u60)) {\n                remainder_u60 -= divisor_u60;\n                // we can use OR here instead of +, as\n                // accumulator is always a nice power of two\n                quotient_u60 = quotient_u60 + accumulator_u60;\n            }\n            divisor_u60.shr1(); // >>= 1;\n            accumulator_u60.shr1(); //  >>= 1;\n        }\n\n        (\n            BigNum::from_array(U60Repr::into(quotient_u60)), BigNum::from_array(U60Repr::into(remainder_u60))\n        )\n    }\n}\n\nfn get_double_modulus<let N: u32>(modulus: [Field; N]) -> [Field; N] {\n    let TWO_POW_120: Field = 0x1000000000000000000000000000000;\n    let m: U60Repr<N, 2> = U60Repr::from(modulus);\n    let mut result: [Field; N] = U60Repr::into(m + m);\n\n    result[0] += TWO_POW_120;\n    for i in 1..N - 1 {\n        result[i] += (TWO_POW_120 - 1);\n    }\n    result[N - 1] -= 1;\n    result\n}\n\nunconstrained fn __barrett_reduction<let N: u32>(\n    x: [Field; 2 * N],\n    redc_param: [Field; N],\n    k: u32,\n    modulus: [Field; N],\n    modulus_u60: U60Repr<N, 4>\n) -> ([Field; N], [Field; N]) {\n    let mut mulout: [Field; 3 * N]  = [0; 3 * N];\n    for i in 0..(N + N) {\n        for j in 0..N {\n            mulout[i + j] += x[i] * redc_param[j];\n        }\n    }\n    mulout = split_bits::__normalize_limbs(mulout, 3 * N - 1);\n    let mulout_u60: U60Repr<N, 6> = U60Repr::new(mulout);\n    let mut quotient_u60 = mulout_u60.shr((k + k));\n\n    // N.B. we assume that the shifted quotient cannot exceed 2 times original bit size.\n    //      (partial_quotient should be just slightly larger than the modulus, we could probably represent with a size N+1 array)\n    let partial_quotient_full: [Field; 3 * N] = quotient_u60.into_field_array();\n    let mut partial_quotient: [Field; 2 * N] = [0; 2 * N];\n    for i in 0..2 * N {\n        partial_quotient[i] = partial_quotient_full[i];\n    }\n    // quotient_mul_modulus can never exceed input value `x` so can fit into size-2 array\n    let mut quotient_mul_modulus: [Field; 2 * N]  = [0; 2 * N];\n    let mut quotient_mul_modulus_normalized: [Field; 2 * N]  = [0; 2 * N];\n    for j in 0..N {\n        for i in 0..(N + N - j) {\n            quotient_mul_modulus[i + j] += partial_quotient[i] * modulus[j];\n        }\n    }\n\n    for i in 0..(N + N) {\n        let (lo, hi) = split_bits::split_120_bits(quotient_mul_modulus[i]);\n        quotient_mul_modulus_normalized[i] = lo;\n        // TODO: what is faster, leaving this if statement in or out?\n        // (array is size-1 too large so we can tolerate adding 0 into max element)\n        if (i + 1 < N + N) {\n            quotient_mul_modulus[i + 1] += hi;\n        }\n    }\n    let quotient_mul_modulus_u60: U60Repr<N, 4> = U60Repr::new(quotient_mul_modulus_normalized);\n\n    let x_u60 : U60Repr<N, 4> = U60Repr::new(x);\n    let mut remainder_u60 = x_u60 - quotient_mul_modulus_u60;\n\n    if (remainder_u60.gte(modulus_u60)) {\n        remainder_u60 = remainder_u60 - modulus_u60;\n        quotient_u60.increment();\n    } else {}\n\n    let q: [Field; N] = U60Repr::into(quotient_u60);\n    let r: [Field; N] = U60Repr::into(remainder_u60);\n\n    (q, r)\n}\n"},"391":{"path":"/Users/envoy1084/Projects/Core/ab2/Aztec-Passport/packages/l2-contracts/crates/passport/src/main.nr","source":"pub mod service;\n\nuse dep::aztec::macros::aztec;\n\npub global SCALE: u64 = 1000000;\n\n#[aztec]\npub contract AztecPassport {\n    use aztec::{\n        prelude::{AztecAddress, PublicMutable, Map, SharedMutable},\n        macros::{storage::storage, functions::{initializer, public, private, view}},\n        keys::getters::get_public_keys\n    };\n\n    use dep::value_note::{balance_utils::get_balance};\n\n    use dep::easy_private_state::EasyPrivateUint;\n    use crate::service::Service;\n\n    pub global SCALE: u64 = 1000000;\n\n    #[storage]\n    struct Storage<Context> {\n        // Admin of Contract\n        admin: PublicMutable<AztecAddress, Context>,\n        // Track Count of Total Services\n        total_services: SharedMutable<u64, 1, Context>,\n        // Service ID => Service\n        services: Map<u64, PublicMutable<Service, Context>, Context>,\n        // Service Address -> ID\n        service_indexes: Map<AztecAddress, SharedMutable<u64, 1, Context>, Context>,\n        //  Address => Service ID => verified(boolean)\n        scores: Map<AztecAddress, Map<u64, EasyPrivateUint<Context>, Context>, Context>,\n    }\n\n    #[public]\n    #[initializer]\n    fn constructor(_admin: AztecAddress) {\n        assert(!_admin.is_zero(), \"Aztec Passport: Invalid Address\");\n        storage.admin.write(_admin);\n    }\n\n    #[public]\n    fn set_admin(new_admin: AztecAddress) {\n        assert(storage.admin.read().eq(context.msg_sender()), \"Aztec Passport: Unauthorized Admin Change\");\n        storage.admin.write(new_admin);\n    }\n\n    #[public]\n    #[view]\n    fn get_admin_public() -> Field {\n        storage.admin.read().to_field()\n    }\n\n    #[public]\n    fn add_service(address: AztecAddress, weight: u64, base_score: u64, max_score: u64) {\n        assert(storage.admin.read().eq(context.msg_sender()), \"Aztec Passport: Only Admin\");\n        let service_id = storage.total_services.get_current_value_in_public();\n        storage.services.at(service_id).write(Service { address, weight, base_score, max_score });\n        storage.service_indexes.at(address).schedule_value_change(service_id);\n        storage.total_services.schedule_value_change(service_id + 1);\n    }\n\n    #[public]\n    #[view]\n    fn get_service(service_id: u64) -> Service {\n        storage.services.at(service_id).read()\n    }\n\n    #[public]\n    #[view]\n    fn get_total_services() -> u64 {\n        storage.total_services.get_current_value_in_public()\n    }\n\n    #[private]\n    #[view]\n    fn get_total_services_private() -> u64 {\n        storage.total_services.get_current_value_in_private()\n    }\n\n    #[public]\n    #[view]\n    fn get_service_index(address: AztecAddress) -> u64 {\n        storage.service_indexes.at(address).get_current_value_in_public()\n    }\n\n    #[private]\n    #[view]\n    fn get_service_index_private(address: AztecAddress) -> u64 {\n        storage.service_indexes.at(address).get_current_value_in_private()\n    }\n\n    unconstrained fn is_verified(address: AztecAddress, service_id: u64) -> bool {\n        let res = storage.scores.at(address).at(service_id).set;\n        let balance = get_balance(res);\n        balance as u32 >= 1\n    }\n\n    #[private]\n    fn verify_service(address: AztecAddress, service_id: u64, service_address: AztecAddress) {\n        assert(service_address.eq(context.msg_sender()), \"Aztec Passport: Only Service\");\n        let res = storage.service_indexes.at(service_address).get_current_value_in_private();\n        assert(res == service_id, \"Aztec Passport: Invalid Service\");\n        storage.scores.at(address).at(service_id).add(1, address, address);\n    }\n\n    unconstrained fn get_total_score(address: AztecAddress) -> u64 {\n        let mut total_weight: u64 = 0;\n        let mut total_base_contribution: u64 = 0;\n        let mut total_max_contribution: u64 = 0;\n        let mut verified_count: u64 = 0;\n\n        let total_services = storage.total_services.get_current_value_in_unconstrained();\n\n        for i in 0..total_services {\n            let service = storage.services.at(i).read();\n            total_weight += service.weight;\n            let res = storage.scores.at(address).at(i).set;\n            let balance = get_balance(res);\n            let verified = balance as u32 >= 1;\n            if (verified) {\n                total_base_contribution += (service.base_score * service.weight) / SCALE;\n                total_max_contribution += (service.max_score * service.weight) / SCALE;\n                verified_count += 1;\n            }\n        }\n\n        if (verified_count == 0) {\n            0\n        }\n\n        let diminishing_factor = verified_count * verified_count / (total_services * total_services);\n        let adjusted_max_score = total_max_contribution * diminishing_factor;\n        let bonus_multiplier = (verified_count * SCALE) / total_services;\n        let final_score = (total_base_contribution + adjusted_max_score) * bonus_multiplier / SCALE;\n\n        final_score\n    }\n}\n"},"393":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/address-note/src/address_note.nr","source":"use dep::aztec::{\n    protocol_types::{address::AztecAddress, constants::GENERATOR_INDEX__NOTE_NULLIFIER, hash::poseidon2_hash_with_separator},\n    note::{note_header::NoteHeader, note_interface::NullifiableNote, utils::compute_note_hash_for_nullify},\n    oracle::random::random, keys::getters::get_nsk_app, context::PrivateContext, macros::notes::note\n};\n\n// docs:start:address_note_def\n// docs:start:address_note_struct\n// Stores an address\n#[note]\npub struct AddressNote {\n    address: AztecAddress,\n    // The nullifying public key hash is used with the nsk_app to ensure that the note can be privately spent.\n    npk_m_hash: Field,\n    randomness: Field,\n}\n// docs:end:address_note_struct\n\nimpl NullifiableNote for AddressNote {\n\n    fn compute_nullifier(self, context: &mut PrivateContext, note_hash_for_nullify: Field) -> Field {\n        let secret = context.request_nsk_app(self.npk_m_hash);\n        poseidon2_hash_with_separator(\n            [\n            note_hash_for_nullify,\n            secret\n        ],\n            GENERATOR_INDEX__NOTE_NULLIFIER as Field\n        )\n    }\n\n    unconstrained fn compute_nullifier_without_context(self) -> Field {\n        let note_hash_for_nullify = compute_note_hash_for_nullify(self);\n        let secret = get_nsk_app(self.npk_m_hash);\n        poseidon2_hash_with_separator(\n            [\n            note_hash_for_nullify,\n            secret\n        ],\n            GENERATOR_INDEX__NOTE_NULLIFIER as Field\n        )\n    }\n}\n\nimpl AddressNote {\n    pub fn new(address: AztecAddress, npk_m_hash: Field) -> Self {\n        // We use the randomness to preserve the privacy of the note recipient by preventing brute-forcing, so a\n        // malicious sender could use non-random values to make the note less private. But they already know the full\n        // note pre-image anyway, and so the recipient already trusts them to not disclose this information. We can\n        // therefore assume that the sender will cooperate in the random value generation.\n        let randomness = unsafe {\n            random()\n        };\n        AddressNote { address, npk_m_hash, randomness, header: NoteHeader::empty() }\n    }\n    // docs:end:address_note_def\n}\n"},"400":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/value-note/src/value_note.nr","source":"use dep::aztec::{\n    protocol_types::{traits::Serialize, constants::GENERATOR_INDEX__NOTE_NULLIFIER, hash::poseidon2_hash_with_separator},\n    macros::notes::note,\n    note::{note_header::NoteHeader, note_interface::NullifiableNote, utils::compute_note_hash_for_nullify},\n    oracle::random::random, keys::getters::get_nsk_app, context::PrivateContext\n};\n\nglobal VALUE_NOTE_LEN: u32 = 3; // 3 plus a header.\n\n// docs:start:value-note-def\n// ValueNote is used as fn parameter in the Claim contract, so it has to implement the Serialize trait.\n// It is important that the order of these annotations is preserved so that derive(Serialize) runs AFTER the note macro, which injects the note header.\n#[note]\n#[derive(Serialize)]\npub struct ValueNote {\n    value: Field,\n   // The nullifying public key hash is used with the nsk_app to ensure that the note can be privately spent.\n    npk_m_hash: Field,\n    randomness: Field,\n}\n// docs:end:value-note-def\n\nimpl NullifiableNote for ValueNote {\n    // docs:start:nullifier\n\n    fn compute_nullifier(self, context: &mut PrivateContext, note_hash_for_nullify: Field) -> Field {\n        let secret = context.request_nsk_app(self.npk_m_hash);\n        poseidon2_hash_with_separator(\n            [\n            note_hash_for_nullify,\n            secret\n        ],\n            GENERATOR_INDEX__NOTE_NULLIFIER as Field\n        )\n    }\n\n    // docs:end:nullifier\n\n    unconstrained fn compute_nullifier_without_context(self) -> Field {\n        let note_hash_for_nullify = compute_note_hash_for_nullify(self);\n        let secret = get_nsk_app(self.npk_m_hash);\n        poseidon2_hash_with_separator(\n            [\n            note_hash_for_nullify,\n            secret\n        ],\n            GENERATOR_INDEX__NOTE_NULLIFIER as Field\n        )\n    }\n}\n\nimpl ValueNote {\n    pub fn new(value: Field, npk_m_hash: Field) -> Self {\n        // We use the randomness to preserve the privacy of the note recipient by preventing brute-forcing, so a\n        // malicious sender could use non-random values to make the note less private. But they already know the full\n        // note pre-image anyway, and so the recipient already trusts them to not disclose this information. We can\n        // therefore assume that the sender will cooperate in the random value generation.\n        let randomness = unsafe {\n            random()\n        };\n        let header = NoteHeader::empty();\n        ValueNote { value, npk_m_hash, randomness, header }\n    }\n}\n\nimpl Eq for ValueNote {\n    fn eq(self, other: Self) -> bool {\n        (self.value == other.value)\n            & (self.npk_m_hash == other.npk_m_hash)\n            & (self.randomness == other.randomness)\n    }\n}\n"},"58":{"path":"std/option.nr","source":"use crate::hash::{Hash, Hasher};\nuse crate::cmp::{Ordering, Ord, Eq};\nuse crate::default::Default;\n\npub struct Option<T> {\n    _is_some: bool,\n    _value: T,\n}\n\nimpl<T> Option<T> {\n    /// Constructs a None value\n    pub fn none() -> Self {\n        Self { _is_some: false, _value: crate::mem::zeroed() }\n    }\n\n    /// Constructs a Some wrapper around the given value\n    pub fn some(_value: T) -> Self {\n        Self { _is_some: true, _value }\n    }\n\n    /// True if this Option is None\n    pub fn is_none(self) -> bool {\n        !self._is_some\n    }\n\n    /// True if this Option is Some\n    pub fn is_some(self) -> bool {\n        self._is_some\n    }\n\n    /// Asserts `self.is_some()` and returns the wrapped value.\n    pub fn unwrap(self) -> T {\n        assert(self._is_some);\n        self._value\n    }\n\n    /// Returns the inner value without asserting `self.is_some()`\n    /// Note that if `self` is `None`, there is no guarantee what value will be returned,\n    /// only that it will be of type `T`.\n    pub fn unwrap_unchecked(self) -> T {\n        self._value\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, returns the given default value.\n    pub fn unwrap_or(self, default: T) -> T {\n        if self._is_some { self._value } else { default }\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, calls the given function to return\n    /// a default value.\n    pub fn unwrap_or_else<Env>(self, default: fn[Env]() -> T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default()\n        }\n    }\n\n    /// Asserts `self.is_some()` with a provided custom message and returns the contained `Some` value\n    fn expect<let N: u32, MessageTypes>(self, message: fmtstr<N, MessageTypes>) -> T {\n        assert(self.is_some(), message);\n        self._value\n    }\n\n    /// If self is `Some(x)`, this returns `Some(f(x))`. Otherwise, this returns `None`.\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> Option<U> {\n        if self._is_some {\n            Option::some(f(self._value))\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns the given default value.\n    pub fn map_or<U, Env>(self, default: U, f: fn[Env](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns `default()`.\n    pub fn map_or_else<U, Env1, Env2>(self, default: fn[Env1]() -> U, f: fn[Env2](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default()\n        }\n    }\n\n    /// Returns None if self is None. Otherwise, this returns `other`.\n    pub fn and(self, other: Self) -> Self {\n        if self.is_none() {\n            Option::none()\n        } else {\n            other\n        }\n    }\n\n    /// If self is None, this returns None. Otherwise, this calls the given function\n    /// with the Some value contained within self, and returns the result of that call.\n    ///\n    /// In some languages this function is called `flat_map` or `bind`.\n    pub fn and_then<U, Env>(self, f: fn[Env](T) -> Option<U>) -> Option<U> {\n        if self._is_some {\n            f(self._value)\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `other`.\n    pub fn or(self, other: Self) -> Self {\n        if self._is_some { self } else { other }\n    }\n\n    /// If self is Some, return self. Otherwise, return `default()`.\n    pub fn or_else<Env>(self, default: fn[Env]() -> Self) -> Self {\n        if self._is_some { self } else { default() }\n    }\n\n    // If only one of the two Options is Some, return that option.\n    // Otherwise, if both options are Some or both are None, None is returned.\n    pub fn xor(self, other: Self) -> Self {\n        if self._is_some {\n            if other._is_some { Option::none() } else { self }\n        } else if other._is_some {\n            other\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Returns `Some(x)` if self is `Some(x)` and `predicate(x)` is true.\n    /// Otherwise, this returns `None`\n    pub fn filter<Env>(self, predicate: fn[Env](T) -> bool) -> Self {\n        if self._is_some {\n            if predicate(self._value) {\n                self\n            } else {\n                Option::none()\n            }\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Flattens an Option<Option<T>> into a Option<T>.\n    /// This returns None if the outer Option is None. Otherwise, this returns the inner Option.\n    pub fn flatten(option: Option<Option<T>>) -> Option<T> {\n        if option._is_some {\n            option._value\n        } else {\n            Option::none()\n        }\n    }\n}\n\nimpl<T> Default for Option<T> {\n    fn default() -> Self {\n        Option::none()\n    }\n}\n\nimpl<T> Eq for Option<T> where T: Eq {\n    fn eq(self, other: Self) -> bool {\n        if self._is_some == other._is_some {\n            if self._is_some {\n                self._value == other._value\n            } else {\n                true\n            }\n        } else {\n            false\n        }\n    }\n}\n\nimpl<T> Hash for Option<T> where T: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        self._is_some.hash(state);\n        if self._is_some {\n            self._value.hash(state);\n        }\n    }\n}\n\n// For this impl we're declaring Option::none < Option::some\nimpl<T> Ord for Option<T> where T: Ord {\n    fn cmp(self, other: Self) -> Ordering {\n        if self._is_some {\n            if other._is_some {\n                self._value.cmp(other._value)\n            } else {\n                Ordering::greater()\n            }\n        } else if other._is_some {\n            Ordering::less()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n"},"59":{"path":"std/panic.nr","source":"pub fn panic<T, U, let N: u32>(message: fmtstr<N, T>) -> U {\n    assert(false, message);\n    crate::mem::zeroed()\n}\n"},"6":{"path":"std/cmp.nr","source":"use crate::meta::derive_via;\n\n#[derive_via(derive_eq)]\n// docs:start:eq-trait\npub trait Eq {\n    fn eq(self, other: Self) -> bool;\n}\n// docs:end:eq-trait\n\n// docs:start:derive_eq\ncomptime fn derive_eq(s: StructDefinition) -> Quoted {\n    let signature = quote { fn eq(_self: Self, _other: Self) -> bool };\n    let for_each_field = |name| quote { (_self.$name == _other.$name) };\n    let body = |fields| {\n        if s.fields().len() == 0 {\n            quote { true }\n        } else {\n            fields\n        }\n    };\n    crate::meta::make_trait_impl(s, quote { Eq }, signature, for_each_field, quote { & }, body)\n}\n// docs:end:derive_eq\n\nimpl Eq for Field {\n    fn eq(self, other: Field) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for u64 {\n    fn eq(self, other: u64) -> bool {\n        self == other\n    }\n}\nimpl Eq for u32 {\n    fn eq(self, other: u32) -> bool {\n        self == other\n    }\n}\nimpl Eq for u16 {\n    fn eq(self, other: u16) -> bool {\n        self == other\n    }\n}\nimpl Eq for u8 {\n    fn eq(self, other: u8) -> bool {\n        self == other\n    }\n}\nimpl Eq for u1 {\n    fn eq(self, other: u1) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for i8 {\n    fn eq(self, other: i8) -> bool {\n        self == other\n    }\n}\nimpl Eq for i16 {\n    fn eq(self, other: i16) -> bool {\n        self == other\n    }\n}\nimpl Eq for i32 {\n    fn eq(self, other: i32) -> bool {\n        self == other\n    }\n}\nimpl Eq for i64 {\n    fn eq(self, other: i64) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for () {\n    fn eq(_self: Self, _other: ()) -> bool {\n        true\n    }\n}\nimpl Eq for bool {\n    fn eq(self, other: bool) -> bool {\n        self == other\n    }\n}\n\nimpl<T, let N: u32> Eq for [T; N] where T: Eq {\n    fn eq(self, other: [T; N]) -> bool {\n        let mut result = true;\n        for i in 0..self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<T> Eq for [T] where T: Eq {\n    fn eq(self, other: [T]) -> bool {\n        let mut result = self.len() == other.len();\n        for i in 0..self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<let N: u32> Eq for str<N> {\n    fn eq(self, other: str<N>) -> bool {\n        let self_bytes = self.as_bytes();\n        let other_bytes = other.as_bytes();\n        self_bytes == other_bytes\n    }\n}\n\nimpl<A, B> Eq for (A, B) where A: Eq, B: Eq {\n    fn eq(self, other: (A, B)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1)\n    }\n}\n\nimpl<A, B, C> Eq for (A, B, C) where A: Eq, B: Eq, C: Eq {\n    fn eq(self, other: (A, B, C)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2)\n    }\n}\n\nimpl<A, B, C, D> Eq for (A, B, C, D) where A: Eq, B: Eq, C: Eq, D: Eq {\n    fn eq(self, other: (A, B, C, D)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2) & self.3.eq(other.3)\n    }\n}\n\nimpl<A, B, C, D, E> Eq for (A, B, C, D, E) where A: Eq, B: Eq, C: Eq, D: Eq, E: Eq {\n    fn eq(self, other: (A, B, C, D, E)) -> bool {\n        self.0.eq(other.0)\n            & self.1.eq(other.1)\n            & self.2.eq(other.2)\n            & self.3.eq(other.3)\n            & self.4.eq(other.4)\n    }\n}\n\nimpl Eq for Ordering {\n    fn eq(self, other: Ordering) -> bool {\n        self.result == other.result\n    }\n}\n\n// Noir doesn't have enums yet so we emulate (Lt | Eq | Gt) with a struct\n// that has 3 public functions for constructing the struct.\npub struct Ordering {\n    result: Field,\n}\n\nimpl Ordering {\n    // Implementation note: 0, 1, and 2 for Lt, Eq, and Gt are built\n    // into the compiler, do not change these without also updating\n    // the compiler itself!\n    pub fn less() -> Ordering {\n        Ordering { result: 0 }\n    }\n\n    pub fn equal() -> Ordering {\n        Ordering { result: 1 }\n    }\n\n    pub fn greater() -> Ordering {\n        Ordering { result: 2 }\n    }\n}\n\n#[derive_via(derive_ord)]\n// docs:start:ord-trait\npub trait Ord {\n    fn cmp(self, other: Self) -> Ordering;\n}\n// docs:end:ord-trait\n\n// docs:start:derive_ord\ncomptime fn derive_ord(s: StructDefinition) -> Quoted {\n    let signature = quote { fn cmp(_self: Self, _other: Self) -> std::cmp::Ordering };\n    let for_each_field = |name| quote {\n        if result == std::cmp::Ordering::equal() {\n            result = _self.$name.cmp(_other.$name);\n        }\n    };\n    let body = |fields| quote {\n        let mut result = std::cmp::Ordering::equal();\n        $fields\n        result\n    };\n    crate::meta::make_trait_impl(s, quote { Ord }, signature, for_each_field, quote {}, body)\n}\n// docs:end:derive_ord\n\n// Note: Field deliberately does not implement Ord\n\nimpl Ord for u64 {\n    fn cmp(self, other: u64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u32 {\n    fn cmp(self, other: u32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u16 {\n    fn cmp(self, other: u16) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u8 {\n    fn cmp(self, other: u8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i8 {\n    fn cmp(self, other: i8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i16 {\n    fn cmp(self, other: i16) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i32 {\n    fn cmp(self, other: i32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i64 {\n    fn cmp(self, other: i64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for () {\n    fn cmp(_self: Self, _other: ()) -> Ordering {\n        Ordering::equal()\n    }\n}\n\nimpl Ord for bool {\n    fn cmp(self, other: bool) -> Ordering {\n        if self {\n            if other {\n                Ordering::equal()\n            } else {\n                Ordering::greater()\n            }\n        } else if other {\n            Ordering::less()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl<T, let N: u32> Ord for [T; N] where T: Ord {\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T; N]) -> Ordering {\n        let mut result = Ordering::equal();\n        for i in 0..self.len() {\n            if result == Ordering::equal() {\n                let result_i = self[i].cmp(other[i]);\n\n                if result_i == Ordering::less() {\n                    result = result_i;\n                } else if result_i == Ordering::greater() {\n                    result = result_i;\n                }\n            }\n        }\n        result\n    }\n}\n\nimpl<T> Ord for [T] where T: Ord {\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T]) -> Ordering {\n        let mut result = self.len().cmp(other.len());\n        for i in 0..self.len() {\n            if result == Ordering::equal() {\n                let result_i = self[i].cmp(other[i]);\n\n                if result_i == Ordering::less() {\n                    result = result_i;\n                } else if result_i == Ordering::greater() {\n                    result = result_i;\n                }\n            }\n        }\n        result\n    }\n}\n\nimpl<A, B> Ord for (A, B) where A: Ord, B: Ord {\n    fn cmp(self, other: (A, B)) -> Ordering {\n        let result = self.0.cmp(other.0);\n\n        if result != Ordering::equal() {\n            result\n        } else {\n            self.1.cmp(other.1)\n        }\n    }\n}\n\nimpl<A, B, C> Ord for (A, B, C) where A: Ord, B: Ord, C: Ord {\n    fn cmp(self, other: (A, B, C)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D> Ord for (A, B, C, D) where A: Ord, B: Ord, C: Ord, D: Ord {\n    fn cmp(self, other: (A, B, C, D)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D, E> Ord for (A, B, C, D, E) where A: Ord, B: Ord, C: Ord, D: Ord, E: Ord {\n    fn cmp(self, other: (A, B, C, D, E)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        if result == Ordering::equal() {\n            result = self.4.cmp(other.4);\n        }\n\n        result\n    }\n}\n\n// Compares and returns the maximum of two values.\n//\n// Returns the second argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::max(1, 2), 2);\n// assert_eq(cmp::max(2, 2), 2);\n// ```\npub fn max<T>(v1: T, v2: T) -> T where T: Ord {\n    if v1 > v2 { v1 } else { v2 }\n}\n\n// Compares and returns the minimum of two values.\n//\n// Returns the first argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::min(1, 2), 1);\n// assert_eq(cmp::min(2, 2), 2);\n// ```\npub fn min<T>(v1: T, v2: T) -> T where T: Ord {\n    if v1 > v2 { v2 } else { v1 }\n}\n\nmod cmp_tests {\n    use crate::cmp::{min, max};\n\n    #[test]\n    fn sanity_check_min() {\n        assert_eq(min(0 as u64, 1 as u64), 0);\n        assert_eq(min(0 as u64, 0 as u64), 0);\n        assert_eq(min(1 as u64, 1 as u64), 1);\n        assert_eq(min(255 as u8, 0 as u8), 0);\n    }\n\n    #[test]\n    fn sanity_check_max() {\n        assert_eq(max(0 as u64, 1 as u64), 1);\n        assert_eq(max(0 as u64, 0 as u64), 0);\n        assert_eq(max(1 as u64, 1 as u64), 1);\n        assert_eq(max(255 as u8, 0 as u8), 255);\n    }\n}\n"},"68":{"path":"std/uint128.nr","source":"use crate::ops::{Add, Sub, Mul, Div, Rem, Not, BitOr, BitAnd, BitXor, Shl, Shr};\nuse crate::cmp::{Eq, Ord, Ordering};\n\nglobal pow64 : Field = 18446744073709551616; //2^64;\nglobal pow63 : Field = 9223372036854775808; // 2^63;\npub struct U128 {\n    lo: Field,\n    hi: Field,\n}\n\nimpl U128 {\n\n    pub fn from_u64s_le(lo: u64, hi: u64) -> U128 {\n        // in order to handle multiplication, we need to represent the product of two u64 without overflow\n        assert(crate::field::modulus_num_bits() as u32 > 128);\n        U128 { lo: lo as Field, hi: hi as Field }\n    }\n\n    pub fn from_u64s_be(hi: u64, lo: u64) -> U128 {\n        U128::from_u64s_le(lo, hi)\n    }\n\n    pub fn zero() -> U128 {\n        U128 { lo: 0, hi: 0 }\n    }\n\n    pub fn one() -> U128 {\n        U128 { lo: 1, hi: 0 }\n    }\n    pub fn from_le_bytes(bytes: [u8; 16]) -> U128 {\n        let mut lo = 0;\n        let mut base = 1;\n        for i in 0..8 {\n            lo += (bytes[i] as Field)*base;\n            base *= 256;\n        }\n        let mut hi = 0;\n        base = 1;\n        for i in 8..16 {\n            hi += (bytes[i] as Field)*base;\n            base *= 256;\n        }\n        U128 { lo, hi }\n    }\n\n    pub fn to_be_bytes(self: Self) -> [u8; 16] {\n        let lo: [u8; 8] = self.lo.to_be_bytes();\n        let hi: [u8; 8] = self.hi.to_be_bytes();\n        let mut bytes = [0; 16];\n        for i in 0..8 {\n            bytes[i] = hi[i];\n            bytes[i+8] = lo[i];\n        }\n        bytes\n    }\n\n    pub fn to_le_bytes(self: Self) -> [u8; 16] {\n        let lo: [u8; 8] = self.lo.to_le_bytes();\n        let hi: [u8; 8] = self.hi.to_le_bytes();\n        let mut bytes = [0; 16];\n        for i in 0..8 {\n            bytes[i] = lo[i];\n            bytes[i+8] = hi[i];\n        }\n        bytes\n    }\n\n    pub fn from_hex<let N: u32>(hex: str<N>) -> U128 {\n        let N = N as u32;\n        let bytes = hex.as_bytes();\n        // string must starts with \"0x\"\n        assert((bytes[0] == 48) & (bytes[1] == 120), \"Invalid hexadecimal string\");\n        assert(N < 35, \"Input does not fit into a U128\");\n\n        let mut lo = 0;\n        let mut hi = 0;\n        let mut base = 1;\n        if N <= 18 {\n            for i in 0..N - 2 {\n                lo += U128::decode_ascii(bytes[N-i-1])*base;\n                base = base*16;\n            }\n        } else {\n            for i in 0..16 {\n                lo += U128::decode_ascii(bytes[N-i-1])*base;\n                base = base*16;\n            }\n            base = 1;\n            for i in 17..N - 1 {\n                hi += U128::decode_ascii(bytes[N-i])*base;\n                base = base*16;\n            }\n        }\n        U128 { lo: lo as Field, hi: hi as Field }\n    }\n\n    unconstrained fn uconstrained_check_is_upper_ascii(ascii: u8) -> bool {\n        ((ascii >= 65) & (ascii <= 90)) // Between 'A' and 'Z'\n    }\n\n    pub(crate) fn decode_ascii(ascii: u8) -> Field {\n        (if ascii < 58 {\n            ascii - 48\n        } else {\n            let ascii = ascii + 32 * (unsafe {\n                        U128::uconstrained_check_is_upper_ascii(ascii) as u8\n                    });\n            assert(ascii >= 97); // enforce >= 'a'\n            assert(ascii <= 102); // enforce <= 'f'\n            ascii - 87\n        }) as Field\n    }\n\n    // TODO: Replace with a faster version. \n    // A circuit that uses this function can be slow to compute\n    // (we're doing up to 127 calls to compute the quotient)\n    unconstrained fn unconstrained_div(self: Self, b: U128) -> (U128, U128) {\n        if b == U128::zero() {\n            // Return 0,0 to avoid eternal loop\n            (U128::zero(), U128::zero())\n        } else if self < b {\n            (U128::zero(), self)\n        } else if self == b {\n            (U128::one(), U128::zero())\n        } else {\n            let (q,r) = if b.hi as u64 >= pow63 as u64 {\n                // The result of multiplication by 2 would overflow\n                (U128::zero(), self)\n            } else {\n                self.unconstrained_div(b * U128::from_u64s_le(2, 0))\n            };\n            let q_mul_2 = q * U128::from_u64s_le(2, 0);\n            if r < b {\n                (q_mul_2, r)\n            } else {\n                (q_mul_2 + U128::one(), r - b)\n            }\n        }\n    }\n\n    pub fn from_integer<T>(i: T) -> U128 {\n        let f = crate::as_field(i);\n        // Reject values which would overflow a u128\n        f.assert_max_bit_size(128);\n        let lo = f as u64 as Field;\n        let hi = (f - lo) / pow64;\n        U128 { lo, hi }\n    }\n\n    pub fn to_integer<T>(self) -> T {\n        crate::from_field(self.lo + self.hi * pow64)\n    }\n\n    fn wrapping_mul(self: Self, b: U128) -> U128 {\n        let low = self.lo * b.lo;\n        let lo = low as u64 as Field;\n        let carry = (low - lo) / pow64;\n        let high = self.lo * b.hi + self.hi * b.lo + carry;\n        let hi = high as u64 as Field;\n        U128 { lo, hi }\n    }\n}\n\nimpl Add for U128 {\n    fn add(self: Self, b: U128) -> U128 {\n        let low = self.lo + b.lo;\n        let lo = low as u64 as Field;\n        let carry = (low - lo) / pow64;\n        let high = self.hi + b.hi + carry;\n        let hi = high as u64 as Field;\n        assert(hi == high, \"attempt to add with overflow\");\n        U128 { lo, hi }\n    }\n}\n\nimpl Sub for U128 {\n    fn sub(self: Self, b: U128) -> U128 {\n        let low = pow64 + self.lo - b.lo;\n        let lo = low as u64 as Field;\n        let borrow = (low == lo) as Field;\n        let high = self.hi - b.hi - borrow;\n        let hi = high as u64 as Field;\n        assert(hi == high, \"attempt to subtract with underflow\");\n        U128 { lo, hi }\n    }\n}\n\nimpl Mul for U128 {\n    fn mul(self: Self, b: U128) -> U128 {\n        assert(self.hi * b.hi == 0, \"attempt to multiply with overflow\");\n        let low = self.lo * b.lo;\n        let lo = low as u64 as Field;\n        let carry = (low - lo) / pow64;\n        let high = if crate::field::modulus_num_bits() as u32 > 196 {\n            (self.lo + self.hi) * (b.lo + b.hi) - low + carry\n        } else {\n            self.lo * b.hi + self.hi * b.lo + carry\n        };\n        let hi = high as u64 as Field;\n        assert(hi == high, \"attempt to multiply with overflow\");\n        U128 { lo, hi }\n    }\n}\n\nimpl Div for U128 {\n    fn div(self: Self, b: U128) -> U128 {\n        unsafe {\n            let (q,r) = self.unconstrained_div(b);\n            let a = b * q + r;\n            assert_eq(self, a);\n            assert(r < b);\n            q\n        }\n    }\n}\n\nimpl Rem for U128 {\n    fn rem(self: Self, b: U128) -> U128 {\n        unsafe {\n            let (q,r) = self.unconstrained_div(b);\n            let a = b * q + r;\n            assert_eq(self, a);\n            assert(r < b);\n\n            r\n        }\n    }\n}\n\nimpl Eq for U128 {\n    fn eq(self: Self, b: U128) -> bool {\n        (self.lo == b.lo) & (self.hi == b.hi)\n    }\n}\n\nimpl Ord for U128 {\n    fn cmp(self, other: Self) -> Ordering {\n        let hi_ordering = (self.hi as u64).cmp((other.hi as u64));\n        let lo_ordering = (self.lo as u64).cmp((other.lo as u64));\n\n        if hi_ordering == Ordering::equal() {\n            lo_ordering\n        } else {\n            hi_ordering\n        }\n    }\n}\n\nimpl Not for U128 {\n    fn not(self) -> U128 {\n        U128 { lo: (!(self.lo as u64)) as Field, hi: (!(self.hi as u64)) as Field }\n    }\n}\n\nimpl BitOr for U128 {\n    fn bitor(self, other: U128) -> U128 {\n        U128 {\n            lo: ((self.lo as u64) | (other.lo as u64)) as Field,\n            hi: ((self.hi as u64) | (other.hi as u64)) as Field\n        }\n    }\n}\n\nimpl BitAnd for U128 {\n    fn bitand(self, other: U128) -> U128 {\n        U128 {\n            lo: ((self.lo as u64) & (other.lo as u64)) as Field,\n            hi: ((self.hi as u64) & (other.hi as u64)) as Field\n        }\n    }\n}\n\nimpl BitXor for U128 {\n    fn bitxor(self, other: U128) -> U128 {\n        U128 {\n            lo: ((self.lo as u64) ^ (other.lo as u64)) as Field,\n            hi: ((self.hi as u64) ^ (other.hi as u64)) as Field\n        }\n    }\n}\n\nimpl Shl for U128 {\n    fn shl(self, other: u8) -> U128 {\n        assert(other < 128, \"attempt to shift left with overflow\");\n        let exp_bits: [u1; 7] = (other as Field).to_be_bits();\n\n        let mut r: Field = 2;\n        let mut y: Field = 1;\n        for i in 1..8 {\n            let bit = exp_bits[7 - i] as Field;\n            y = bit * (r * y) + (1 - bit) * y;\n            r *= r;\n        }\n        self.wrapping_mul(U128::from_integer(y))\n    }\n}\n\nimpl Shr for U128 {\n    fn shr(self, other: u8) -> U128 {\n        assert(other < 128, \"attempt to shift right with overflow\");\n        let exp_bits: [u1; 7] = (other as Field).to_be_bits();\n\n        let mut r: Field = 2;\n        let mut y: Field = 1;\n        for i in 1..8 {\n            let bit = exp_bits[7 - i] as Field;\n            y = bit * (r * y) + (1 - bit) * y;\n            r *= r;\n        }\n        self / U128::from_integer(y)\n    }\n}\n\nmod tests {\n    use crate::uint128::{U128, pow64, pow63};\n\n    #[test]\n    fn test_not(lo: u64, hi: u64) {\n        let num = U128::from_u64s_le(lo, hi);\n        let not_num = num.not();\n\n        assert_eq(not_num.hi, (hi.not() as Field));\n        assert_eq(not_num.lo, (lo.not() as Field));\n\n        let not_not_num = not_num.not();\n        assert_eq(num, not_not_num);\n    }\n    #[test]\n    fn test_construction() {\n        // Check little-endian u64 is inversed with big-endian u64 construction\n        let a = U128::from_u64s_le(2, 1);\n        let b = U128::from_u64s_be(1, 2);\n        assert_eq(a, b);\n        // Check byte construction is equivalent\n        let c = U128::from_le_bytes([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]);\n        let d = U128::from_u64s_le(0x0706050403020100, 0x0f0e0d0c0b0a0908);\n        assert_eq(c, d);\n    }\n    #[test]\n    fn test_byte_decomposition() {\n        let a = U128::from_u64s_le(0x0706050403020100, 0x0f0e0d0c0b0a0908);\n        // Get big-endian and little-endian byte decompostions\n        let le_bytes_a= a.to_le_bytes();\n        let be_bytes_a= a.to_be_bytes();\n\n        // Check equivalence\n        for i in 0..16 {\n            assert_eq(le_bytes_a[i], be_bytes_a[15 - i]);\n        }\n        // Reconstruct U128 from byte decomposition\n        let b= U128::from_le_bytes(le_bytes_a);\n        // Check that it's the same element\n        assert_eq(a, b);\n    }\n    #[test]\n    fn test_hex_constuction() {\n        let a = U128::from_u64s_le(0x1, 0x2);\n        let b = U128::from_hex(\"0x20000000000000001\");\n        assert_eq(a, b);\n\n        let c= U128::from_hex(\"0xffffffffffffffffffffffffffffffff\");\n        let d= U128::from_u64s_le(0xffffffffffffffff, 0xffffffffffffffff);\n        assert_eq(c, d);\n\n        let e= U128::from_hex(\"0x00000000000000000000000000000000\");\n        let f= U128::from_u64s_le(0, 0);\n        assert_eq(e, f);\n    }\n\n    // Ascii decode tests\n\n    #[test]\n    fn test_ascii_decode_correct_range() {\n        // '0'..'9' range\n        for i in 0..10 {\n            let decoded= U128::decode_ascii(48 + i);\n            assert_eq(decoded, i as Field);\n        }\n        // 'A'..'F' range\n        for i in 0..6 {\n            let decoded = U128::decode_ascii(65 + i);\n            assert_eq(decoded, (i + 10) as Field);\n        }\n        // 'a'..'f' range\n        for i in 0..6 {\n            let decoded = U128::decode_ascii(97 + i);\n            assert_eq(decoded, (i + 10) as Field);\n        }\n    }\n\n    #[test(should_fail)]\n    fn test_ascii_decode_range_less_than_48_fails_0() {\n        crate::println(U128::decode_ascii(0));\n    }\n    #[test(should_fail)]\n    fn test_ascii_decode_range_less_than_48_fails_1() {\n        crate::println(U128::decode_ascii(47));\n    }\n\n    #[test(should_fail)]\n    fn test_ascii_decode_range_58_64_fails_0() {\n        let _ = U128::decode_ascii(58);\n    }\n    #[test(should_fail)]\n    fn test_ascii_decode_range_58_64_fails_1() {\n        let _ = U128::decode_ascii(64);\n    }\n    #[test(should_fail)]\n    fn test_ascii_decode_range_71_96_fails_0() {\n        let _ = U128::decode_ascii(71);\n    }\n    #[test(should_fail)]\n    fn test_ascii_decode_range_71_96_fails_1() {\n        let _ = U128::decode_ascii(96);\n    }\n    #[test(should_fail)]\n    fn test_ascii_decode_range_greater_than_102_fails() {\n        let _ = U128::decode_ascii(103);\n    }\n\n    #[test(should_fail)]\n    fn test_ascii_decode_regression() {\n        // This code will actually fail because of ascii_decode,\n        // but in the past it was possible to create a value > (1<<128)\n        let a = U128::from_hex(\"0x~fffffffffffffffffffffffffffffff\");\n        let b:Field= a.to_integer();\n        let c: [u8; 17]= b.to_le_bytes();\n        assert(c[16] != 0);\n    }\n\n    #[test]\n    fn test_unconstrained_div() {\n        // Test the potential overflow case\n        let a= U128::from_u64s_le(0x0, 0xffffffffffffffff);\n        let b= U128::from_u64s_le(0x0, 0xfffffffffffffffe);\n        let c= U128::one();\n        let d= U128::from_u64s_le(0x0, 0x1);\n        unsafe {\n            let (q,r) = a.unconstrained_div(b);\n            assert_eq(q, c);\n            assert_eq(r, d);\n        }\n\n        let a = U128::from_u64s_le(2, 0);\n        let b = U128::one();\n        // Check the case where a is a multiple of b\n        unsafe {\n            let (c, d) = a.unconstrained_div(b);\n            assert_eq((c, d), (a, U128::zero()));\n        }\n\n        // Check where b is a multiple of a\n        unsafe {\n            let (c,d) = b.unconstrained_div(a);\n            assert_eq((c, d), (U128::zero(), b));\n        }\n\n        // Dividing by zero returns 0,0\n        let a = U128::from_u64s_le(0x1, 0x0);\n        let b = U128::zero();\n        unsafe {\n            let (c, d)= a.unconstrained_div(b);\n            assert_eq((c, d), (U128::zero(), U128::zero()));\n        }\n        // Dividing 1<<127 by 1<<127 (special case)\n        let a = U128::from_u64s_le(0x0, pow63 as u64);\n        let b = U128::from_u64s_le(0x0, pow63 as u64);\n        unsafe {\n            let (c, d) = a.unconstrained_div(b);\n            assert_eq((c, d), (U128::one(), U128::zero()));\n        }\n    }\n\n    #[test]\n    fn integer_conversions() {\n        // Maximum\n        let start:Field = 0xffffffffffffffffffffffffffffffff;\n        let a = U128::from_integer(start);\n        let end = a.to_integer();\n        assert_eq(start, end);\n\n        // Minimum\n        let start:Field = 0x0;\n        let a = U128::from_integer(start);\n        let end = a.to_integer();\n        assert_eq(start, end);\n\n        // Low limb\n        let start:Field = 0xffffffffffffffff;\n        let a = U128::from_integer(start);\n        let end = a.to_integer();\n        assert_eq(start, end);\n\n        // High limb\n        let start:Field = 0xffffffffffffffff0000000000000000;\n        let a = U128::from_integer(start);\n        let end = a.to_integer();\n        assert_eq(start, end);\n    }\n\n    #[test]\n    fn integer_conversions_fuzz(lo: u64, hi: u64) {\n        let start: Field = (lo as Field) + pow64 * (hi as Field);\n        let a = U128::from_integer(start);\n        let end = a.to_integer();\n        assert_eq(start, end);\n    }\n\n    #[test]\n    fn test_wrapping_mul() {\n        // 1*0==0\n        assert_eq(U128::zero(), U128::zero().wrapping_mul(U128::one()));\n\n        // 0*1==0\n        assert_eq(U128::zero(), U128::one().wrapping_mul(U128::zero()));\n\n        // 1*1==1\n        assert_eq(U128::one(), U128::one().wrapping_mul(U128::one()));\n\n        // 0 * ( 1 << 64 ) ==  0\n        assert_eq(U128::zero(), U128::zero().wrapping_mul(U128::from_u64s_le(0, 1)));\n\n        // ( 1 << 64 ) * 0 == 0\n        assert_eq(U128::zero(), U128::from_u64s_le(0, 1).wrapping_mul(U128::zero()));\n\n        // 1 * ( 1 << 64 ) == 1 << 64\n        assert_eq(U128::from_u64s_le(0, 1), U128::from_u64s_le(0, 1).wrapping_mul(U128::one()));\n\n        // ( 1 << 64 ) * 1 == 1 << 64\n        assert_eq(U128::from_u64s_le(0, 1), U128::one().wrapping_mul(U128::from_u64s_le(0, 1)));\n\n        // ( 1 << 64 ) * ( 1 << 64 ) == 1 << 64\n        assert_eq(U128::zero(), U128::from_u64s_le(0, 1).wrapping_mul(U128::from_u64s_le(0, 1)));\n        // -1 * -1 == 1\n        assert_eq(\n            U128::one(), U128::from_u64s_le(0xffffffffffffffff, 0xffffffffffffffff).wrapping_mul(U128::from_u64s_le(0xffffffffffffffff, 0xffffffffffffffff))\n        );\n    }\n}\n"},"7":{"path":"std/collections/bounded_vec.nr","source":"use crate::{cmp::Eq, convert::From};\n\n/// A `BoundedVec<T, MaxLen>` is a growable storage similar to a `Vec<T>` except that it\n/// is bounded with a maximum possible length. Unlike `Vec`, `BoundedVec` is not implemented\n/// via slices and thus is not subject to the same restrictions slices are (notably, nested\n/// slices - and thus nested vectors as well - are disallowed).\n/// \n/// Since a BoundedVec is backed by a normal array under the hood, growing the BoundedVec by\n/// pushing an additional element is also more efficient - the length only needs to be increased\n/// by one.\n/// \n/// For these reasons `BoundedVec<T, N>` should generally be preferred over `Vec<T>` when there\n/// is a reasonable maximum bound that can be placed on the vector.\n/// \n/// Example:\n/// \n/// ```noir\n/// let mut vector: BoundedVec<Field, 10> = BoundedVec::new();\n/// for i in 0..5 {\n///     vector.push(i);\n/// }\n/// assert(vector.len() == 5);\n/// assert(vector.max_len() == 10);\n/// ```\npub struct BoundedVec<T, let MaxLen: u32> {\n    storage: [T; MaxLen],\n    len: u32,\n}\n\nimpl<T, let MaxLen: u32> BoundedVec<T, MaxLen> {\n    /// Creates a new, empty vector of length zero.\n    ///\n    /// Since this container is backed by an array internally, it still needs an initial value\n    /// to give each element. To resolve this, each element is zeroed internally. This value\n    /// is guaranteed to be inaccessible unless `get_unchecked` is used.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let empty_vector: BoundedVec<Field, 10> = BoundedVec::new();\n    /// assert(empty_vector.len() == 0);\n    /// ```\n    ///\n    /// Note that whenever calling `new` the maximum length of the vector should always be specified\n    /// via a type signature:\n    ///\n    /// ```noir\n    /// fn good() -> BoundedVec<Field, 10> {\n    ///     // Ok! MaxLen is specified with a type annotation\n    ///     let v1: BoundedVec<Field, 3> = BoundedVec::new();\n    ///     let v2 = BoundedVec::new();\n    ///\n    ///     // Ok! MaxLen is known from the type of `good`'s return value\n    ///     v2\n    /// }\n    ///\n    /// fn bad() {\n    ///     // Error: Type annotation needed\n    ///     // The compiler can't infer `MaxLen` from the following code:\n    ///     let mut v3 = BoundedVec::new();\n    ///     v3.push(5);\n    /// }\n    /// ```\n    ///\n    /// This defaulting of `MaxLen` (and numeric generics in general) to zero may change in future noir versions\n    /// but for now make sure to use type annotations when using bounded vectors. Otherwise, you will receive a \n    /// constraint failure at runtime when the vec is pushed to.\n    pub fn new() -> Self {\n        let zeroed = crate::mem::zeroed();\n        BoundedVec { storage: [zeroed; MaxLen], len: 0 }\n    }\n\n    /// Retrieves an element from the vector at the given index, starting from zero.\n    /// \n    /// If the given index is equal to or greater than the length of the vector, this\n    /// will issue a constraint failure.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// fn foo<let N: u32>(v: BoundedVec<u32, N>) {\n    ///     let first = v.get(0);\n    ///     let last = v.get(v.len() - 1);\n    ///     assert(first != last);\n    /// }\n    /// ```\n    pub fn get(self, index: u32) -> T {\n        assert(index < self.len, \"Attempted to read past end of BoundedVec\");\n        self.get_unchecked(index)\n    }\n\n    /// Retrieves an element from the vector at the given index, starting from zero, without\n    /// performing a bounds check.\n    /// \n    /// Since this function does not perform a bounds check on length before accessing the element,\n    /// it is unsafe! Use at your own risk!\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// fn sum_of_first_three<let N: u32>(v: BoundedVec<u32, N>) -> u32 {\n    ///     // Always ensure the length is larger than the largest\n    ///     // index passed to get_unchecked\n    ///     assert(v.len() > 2);\n    ///     let first = v.get_unchecked(0);\n    ///     let second = v.get_unchecked(1);\n    ///     let third = v.get_unchecked(2);\n    ///     first + second + third\n    /// }\n    /// ```\n    pub fn get_unchecked(self, index: u32) -> T {\n        self.storage[index]\n    }\n\n    /// Writes an element to the vector at the given index, starting from zero.\n    /// \n    /// If the given index is equal to or greater than the length of the vector, this will issue a constraint failure.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// fn foo<let N: u32>(v: BoundedVec<u32, N>) {\n    ///     let first = v.get(0);\n    ///     assert(first != 42);\n    ///     v.set(0, 42);\n    ///     let new_first = v.get(0);\n    ///     assert(new_first == 42);\n    /// }\n    /// ```\n    pub fn set(&mut self, index: u32, value: T) {\n        assert(index < self.len, \"Attempted to write past end of BoundedVec\");\n        self.set_unchecked(index, value)\n    }\n\n    /// Writes an element to the vector at the given index, starting from zero, without performing a bounds check.\n    /// \n    /// Since this function does not perform a bounds check on length before accessing the element, it is unsafe! Use at your own risk!\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// fn set_unchecked_example() {\n    ///     let mut vec: BoundedVec<u32, 5> = BoundedVec::new();\n    ///     vec.extend_from_array([1, 2]);\n    /// \n    ///     // Here we're safely writing within the valid range of `vec`\n    ///     // `vec` now has the value [42, 2]\n    ///     vec.set_unchecked(0, 42);\n    /// \n    ///     // We can then safely read this value back out of `vec`.\n    ///     // Notice that we use the checked version of `get` which would prevent reading unsafe values.\n    ///     assert_eq(vec.get(0), 42);\n    /// \n    ///     // We've now written past the end of `vec`.\n    ///     // As this index is still within the maximum potential length of `v`,\n    ///     // it won't cause a constraint failure. \n    ///     vec.set_unchecked(2, 42);\n    ///     println(vec);\n    /// \n    ///     // This will write past the end of the maximum potential length of `vec`,\n    ///     // it will then trigger a constraint failure.\n    ///     vec.set_unchecked(5, 42);\n    ///     println(vec);\n    /// }\n    /// ```\n    pub fn set_unchecked(&mut self, index: u32, value: T) {\n        self.storage[index] = value;\n    }\n\n    /// Pushes an element to the end of the vector. This increases the length\n    /// of the vector by one.\n    /// \n    /// Panics if the new length of the vector will be greater than the max length.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut v: BoundedVec<Field, 2> = BoundedVec::new();\n    /// \n    /// v.push(1);\n    /// v.push(2);\n    /// \n    /// // Panics with failed assertion \"push out of bounds\"\n    /// v.push(3);\n    /// ```\n    pub fn push(&mut self, elem: T) {\n        assert(self.len < MaxLen, \"push out of bounds\");\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    /// Returns the current length of this vector\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut v: BoundedVec<Field, 4> = BoundedVec::new();\n    /// assert(v.len() == 0);\n    /// \n    /// v.push(100);\n    /// assert(v.len() == 1);\n    /// \n    /// v.push(200);\n    /// v.push(300);\n    /// v.push(400);\n    /// assert(v.len() == 4);\n    /// \n    /// let _ = v.pop();\n    /// let _ = v.pop();\n    /// assert(v.len() == 2);\n    /// ```\n    pub fn len(self) -> u32 {\n        self.len\n    }\n\n    /// Returns the maximum length of this vector. This is always\n    /// equal to the `MaxLen` parameter this vector was initialized with.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut v: BoundedVec<Field, 5> = BoundedVec::new();\n    /// \n    /// assert(v.max_len() == 5);\n    /// v.push(10);\n    /// assert(v.max_len() == 5);\n    /// ```\n    pub fn max_len(_self: BoundedVec<T, MaxLen>) -> u32 {\n        MaxLen\n    }\n\n    /// Returns the internal array within this vector.\n    /// \n    /// Since arrays in Noir are immutable, mutating the returned storage array will not mutate\n    /// the storage held internally by this vector.\n    /// \n    /// Note that uninitialized elements may be zeroed out!\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut v: BoundedVec<Field, 5> = BoundedVec::new();\n    /// \n    /// assert(v.storage() == [0, 0, 0, 0, 0]);\n    /// \n    /// v.push(57);\n    /// assert(v.storage() == [57, 0, 0, 0, 0]);\n    /// ```\n    pub fn storage(self) -> [T; MaxLen] {\n        self.storage\n    }\n\n    /// Pushes each element from the given array to this vector.\n    /// \n    /// Panics if pushing each element would cause the length of this vector\n    /// to exceed the maximum length.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut vec: BoundedVec<Field, 3> = BoundedVec::new();\n    /// vec.extend_from_array([2, 4]);\n    /// \n    /// assert(vec.len == 2);\n    /// assert(vec.get(0) == 2);\n    /// assert(vec.get(1) == 4);\n    /// ```\n    pub fn extend_from_array<let Len: u32>(&mut self, array: [T; Len]) {\n        let new_len = self.len + array.len();\n        assert(new_len <= MaxLen, \"extend_from_array out of bounds\");\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = new_len;\n    }\n\n    /// Pushes each element from the given slice to this vector.\n    /// \n    /// Panics if pushing each element would cause the length of this vector\n    /// to exceed the maximum length.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut vec: BoundedVec<Field, 3> = BoundedVec::new();\n    /// vec.extend_from_slice(&[2, 4]);\n    /// \n    /// assert(vec.len == 2);\n    /// assert(vec.get(0) == 2);\n    /// assert(vec.get(1) == 4);\n    /// ```\n    pub fn extend_from_slice(&mut self, slice: [T]) {\n        let new_len = self.len + slice.len();\n        assert(new_len <= MaxLen, \"extend_from_slice out of bounds\");\n        for i in 0..slice.len() {\n            self.storage[self.len + i] = slice[i];\n        }\n        self.len = new_len;\n    }\n\n    /// Pushes each element from the other vector to this vector. The length of\n    /// the other vector is left unchanged.\n    /// \n    /// Panics if pushing each element would cause the length of this vector\n    /// to exceed the maximum length.\n    /// \n    /// ```noir\n    /// let mut v1: BoundedVec<Field, 5> = BoundedVec::new();\n    /// let mut v2: BoundedVec<Field, 7> = BoundedVec::new();\n    /// \n    /// v2.extend_from_array([1, 2, 3]);\n    /// v1.extend_from_bounded_vec(v2);\n    /// \n    /// assert(v1.storage() == [1, 2, 3, 0, 0]);\n    /// assert(v2.storage() == [1, 2, 3, 0, 0, 0, 0]);\n    /// ```\n    pub fn extend_from_bounded_vec<let Len: u32>(&mut self, vec: BoundedVec<T, Len>) {\n        let append_len = vec.len();\n        let new_len = self.len + append_len;\n        assert(new_len <= MaxLen, \"extend_from_bounded_vec out of bounds\");\n\n        let mut exceeded_len = false;\n        for i in 0..Len {\n            exceeded_len |= i == append_len;\n            if !exceeded_len {\n                self.storage[self.len + i] = vec.get_unchecked(i);\n            }\n        }\n        self.len = new_len;\n    }\n\n    /// Creates a new vector, populating it with values derived from an array input. \n    /// The maximum length of the vector is determined based on the type signature.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from_array([1, 2, 3])\n    /// ```\n    pub fn from_array<let Len: u32>(array: [T; Len]) -> Self {\n        assert(Len <= MaxLen, \"from array out of bounds\");\n        let mut vec: BoundedVec<T, MaxLen> = BoundedVec::new();\n        vec.extend_from_array(array);\n        vec\n    }\n\n    /// Pops the element at the end of the vector. This will decrease the length\n    /// of the vector by one.\n    /// \n    /// Panics if the vector is empty.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut v: BoundedVec<Field, 2> = BoundedVec::new();\n    /// v.push(1);\n    /// v.push(2);\n    /// \n    /// let two = v.pop();\n    /// let one = v.pop();\n    /// \n    /// assert(two == 2);\n    /// assert(one == 1);\n    ///\n    /// // error: cannot pop from an empty vector\n    /// let _ = v.pop();\n    /// ```\n    pub fn pop(&mut self) -> T {\n        assert(self.len > 0);\n        self.len -= 1;\n\n        let elem = self.storage[self.len];\n        self.storage[self.len] = crate::mem::zeroed();\n        elem\n    }\n\n    /// Returns true if the given predicate returns true for any element\n    /// in this vector.\n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let mut v: BoundedVec<u32, 3> = BoundedVec::new();\n    /// v.extend_from_array([2, 4, 6]);\n    /// \n    /// let all_even = !v.any(|elem: u32| elem % 2 != 0);\n    /// assert(all_even);\n    /// ```\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if !exceeded_len {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n\n    /// Creates a new vector of equal size by calling a closure on each element in this vector.  \n    /// \n    /// Example:\n    /// \n    /// ```noir\n    /// let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n    /// let result = vec.map(|value| value * 2);\n    /// \n    /// let expected = BoundedVec::from_array([2, 4, 6, 8]);\n    /// assert_eq(result, expected);\n    /// ```\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> BoundedVec<U, MaxLen> {\n        let mut ret = BoundedVec::new();\n        ret.len = self.len();\n        for i in 0..MaxLen {\n            if i < self.len() {\n                ret.storage[i] = f(self.get_unchecked(i));\n            }\n        }\n        ret\n    }\n}\n\nimpl<T, let MaxLen: u32> Eq for BoundedVec<T, MaxLen> where T: Eq {\n    fn eq(self, other: BoundedVec<T, MaxLen>) -> bool {\n        // TODO: https://github.com/noir-lang/noir/issues/4837\n        //\n        // We make the assumption that the user has used the proper interface for working with `BoundedVec`s\n        // rather than directly manipulating the internal fields as this can result in an inconsistent internal state.\n\n        (self.len == other.len) & (self.storage == other.storage)\n    }\n}\n\nimpl<T, let MaxLen: u32, let Len: u32> From<[T; Len]> for BoundedVec<T, MaxLen> {\n    fn from(array: [T; Len]) -> BoundedVec<T, MaxLen> {\n        BoundedVec::from_array(array)\n    }\n}\n\nmod bounded_vec_tests {\n\n    mod get {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test(should_fail_with = \"Attempted to read past end of BoundedVec\")]\n        fn panics_when_reading_elements_past_end_of_vec() {\n            let vec: BoundedVec<Field, 5> = BoundedVec::new();\n\n            crate::println(vec.get(0));\n        }\n    }\n\n    mod set {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn set_updates_values_properly() {\n            let mut vec = BoundedVec::from_array([0, 0, 0, 0, 0]);\n\n            vec.set(0, 42);\n            assert_eq(vec.storage, [42, 0, 0, 0, 0]);\n\n            vec.set(1, 43);\n            assert_eq(vec.storage, [42, 43, 0, 0, 0]);\n\n            vec.set(2, 44);\n            assert_eq(vec.storage, [42, 43, 44, 0, 0]);\n\n            vec.set(1, 10);\n            assert_eq(vec.storage, [42, 10, 44, 0, 0]);\n\n            vec.set(0, 0);\n            assert_eq(vec.storage, [0, 10, 44, 0, 0]);\n        }\n\n        #[test(should_fail_with = \"Attempted to write past end of BoundedVec\")]\n        fn panics_when_writing_elements_past_end_of_vec() {\n            let mut vec: BoundedVec<Field, 5> = BoundedVec::new();\n            vec.set(0, 42);\n\n            // Need to use println to avoid DIE removing the write operation.\n            crate::println(vec.get(0));\n        }\n    }\n\n    mod map {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn applies_function_correctly() {\n            // docs:start:bounded-vec-map-example\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = vec.map(|value| value * 2);\n            // docs:end:bounded-vec-map-example\n            let expected = BoundedVec::from_array([2, 4, 6, 8]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn applies_function_that_changes_return_type() {\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = vec.map(|value| (value * 2)  as Field);\n            let expected: BoundedVec<Field, 4> = BoundedVec::from_array([2, 4, 6, 8]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn does_not_apply_function_past_len() {\n            let vec: BoundedVec<u32, 3> = BoundedVec::from_array([0, 1]);\n            let result = vec.map(|value| if value == 0 { 5 } else { value });\n            let expected = BoundedVec::from_array([5, 1]);\n\n            assert_eq(result, expected);\n            assert_eq(result.storage()[2], 0);\n        }\n    }\n\n    mod from_array {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn empty() {\n            let empty_array: [Field; 0] = [];\n            let bounded_vec = BoundedVec::from_array([]);\n\n            assert_eq(bounded_vec.max_len(), 0);\n            assert_eq(bounded_vec.len(), 0);\n            assert_eq(bounded_vec.storage(), empty_array);\n        }\n\n        #[test]\n        fn equal_len() {\n            let array = [1, 2, 3];\n            let bounded_vec = BoundedVec::from_array(array);\n\n            assert_eq(bounded_vec.max_len(), 3);\n            assert_eq(bounded_vec.len(), 3);\n            assert_eq(bounded_vec.storage(), array);\n        }\n\n        #[test]\n        fn max_len_greater_then_array_len() {\n            let array = [1, 2, 3];\n            let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from_array(array);\n\n            assert_eq(bounded_vec.max_len(), 10);\n            assert_eq(bounded_vec.len(), 3);\n            assert_eq(bounded_vec.storage()[0], 1);\n            assert_eq(bounded_vec.storage()[1], 2);\n            assert_eq(bounded_vec.storage()[2], 3);\n        }\n\n        #[test(should_fail_with=\"from array out of bounds\")]\n        fn max_len_lower_then_array_len() {\n            let _: BoundedVec<Field, 2> = BoundedVec::from_array([0; 3]);\n        }\n    }\n\n    mod trait_from {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn simple() {\n            let array = [1, 2];\n            let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from(array);\n\n            assert_eq(bounded_vec.max_len(), 10);\n            assert_eq(bounded_vec.len(), 2);\n            assert_eq(bounded_vec.storage()[0], 1);\n            assert_eq(bounded_vec.storage()[1], 2);\n        }\n    }\n\n    mod trait_eq {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn empty_equality() {\n            let mut bounded_vec1: BoundedVec<Field, 3> = BoundedVec::new();\n            let mut bounded_vec2: BoundedVec<Field, 3> = BoundedVec::new();\n\n            assert_eq(bounded_vec1, bounded_vec2);\n        }\n\n        #[test]\n        fn inequality() {\n            let mut bounded_vec1: BoundedVec<Field, 3> = BoundedVec::new();\n            let mut bounded_vec2: BoundedVec<Field, 3> = BoundedVec::new();\n            bounded_vec1.push(1);\n            bounded_vec2.push(2);\n\n            assert(bounded_vec1 != bounded_vec2);\n        }\n    }\n}\n"},"70":{"path":"/Users/envoy1084/Projects/Core/ab2/Aztec-Passport/packages/l2-contracts/crates/modules/x_module/src/x.nr","source":"use dep::string_search::{SubString, SubString128, StringBody16384, SubString64};\nuse dep::string_search::StringBody;\n\npub trait BoundedVecExtentions {\n    fn is_eq<let M: u32>(self, array: [u8;M]) -> bool;\n}\n\nimpl BoundedVecExtentions for BoundedVec<u8,64> {\n    fn is_eq<let M: u32>(self, array: [u8; M]) -> bool {\n        if (self.len != M) {\n            false\n        }\n        for i in 0..M {\n            if {\n                self.get_unchecked(i) != array[i]\n            } {\n                false\n            }\n        }\n        true\n    }\n}\n\npub fn find_x_username(\n    data: [u8; 16384],\n    data_length: u32,\n    padded_username: [u8; 64],\n    username_length: u32\n) -> (bool, u32) {\n    let needle_text_init = \"If you requested a password reset for \".as_bytes();\n\n    let needle_start: SubString64 = SubString::new(needle_text_init, needle_text_init.len());\n    let needle_end: SubString128 = SubString::new(padded_username, username_length);\n    // use concat_into because SubString128 > SubString32\n    let needle = needle_start.concat_into(needle_end);\n\n    let haystack: StringBody16384 = StringBody::new(data, data_length);\n    let (result, match_position): (bool, u32) = haystack.substring_match(needle);\n\n    (result, match_position)\n}\n\nuse dep::zkemail::{\n    KEY_LIMBS_2048, dkim::RSAPubkey, headers::body_hash::get_body_hash, Sequence,\n    headers::email_address::get_email_address\n};\nuse dep::std::hash::sha256_var;\n\npub global MAX_EMAIL_HEADER_LENGTH: u32 = 576;\npub global MAX_EMAIL_BODY_LENGTH: u32 = 16384;\npub global FROM_EMAIL_LENGTH: u32 = 10;\npub global MAX_USERNAME_LENGTH: u32 = 64;\npub global FROM_EMAIL: [u8; FROM_EMAIL_LENGTH] = \"info@x.com\".as_bytes(); // example of string search\n\npub global SEARCH_STRING_LENGTH: u32 = 38;\npub global SEARCH_STRING_START: [u8; 38] = \"If you requested a password reset for \".as_bytes();\n\npub fn verify_x(\n    header: BoundedVec<u8, MAX_EMAIL_HEADER_LENGTH>,\n    body: BoundedVec<u8, MAX_EMAIL_BODY_LENGTH>,\n    pubkey: RSAPubkey<KEY_LIMBS_2048>,\n    signature: [Field; KEY_LIMBS_2048],\n    body_hash_index: u32,\n    dkim_header_sequence: Sequence,\n    from_header_sequence: Sequence,\n    from_address_sequence: Sequence,\n    username: BoundedVec<u8, MAX_USERNAME_LENGTH>\n) -> BoundedVec<u8, MAX_USERNAME_LENGTH> {\n    assert(header.len() <= MAX_EMAIL_HEADER_LENGTH);\n    assert(body.len() <= MAX_EMAIL_BODY_LENGTH);\n\n    pubkey.verify_dkim_signature(header, signature);\n\n    // let signed_body_hash = get_body_hash(header, dkim_header_sequence, body_hash_index);\n    // let computed_body_hash: [u8; 32] = sha256_var(body.storage, body.len() as u64);\n    // assert(\n    //     signed_body_hash == computed_body_hash, \"Social Verify Error: SHA256 hash computed over body does not match body hash found in DKIM-signed header\"\n    // );\n\n    let from = comptime {\n        \"from\".as_bytes()\n    };\n\n    let from_address: BoundedVec<u8, 320> = get_email_address(header, from_header_sequence, from_address_sequence, from);\n\n    assert(from_address.is_eq(FROM_EMAIL));\n\n    let (found,_): (bool,u32) = find_x_username(body.storage, body.len, username.storage, username.len());\n\n    assert(found, \"Social Verify Error: Cannot Find Username in Email Body\");\n\n    username\n}\n"},"71":{"path":"/Users/envoy1084/Projects/Core/ab2/Aztec-Passport/packages/l2-contracts/crates/modules/x_module/src/main.nr","source":"use dep::aztec::macros::aztec;\npub mod x;\n#[aztec]\ncontract XModule {\n    use aztec::{\n        prelude::{AztecAddress, PublicMutable, SharedMutable},\n        macros::{storage::storage, functions::{initializer, public, private, view}}\n    };\n\n    use dep::passport::AztecPassport;\n\n    #[storage]\n    struct Storage<Context> {\n        // Admin of Contract\n        admin: PublicMutable<AztecAddress, Context>,\n        // Passport Contract Address\n        passport_address: SharedMutable<AztecAddress, 1, Context>,\n    }\n\n    use crate::x::verify_x;\n    use dep::noir_social_verify::zkemail::{KEY_LIMBS_2048, dkim::RSAPubkey, Sequence};\n\n    pub global MAX_EMAIL_HEADER_LENGTH: u32 = 576;\n    pub global MAX_EMAIL_BODY_LENGTH: u32 = 16384;\n    pub global MAX_USERNAME_LENGTH: u32 = 64;\n\n    #[public]\n    #[initializer]\n    fn constructor(_admin: AztecAddress) {\n        assert(!_admin.is_zero(), \"Aztec Passport: Invalid Address\");\n        storage.admin.write(_admin);\n    }\n\n    #[public]\n    fn set_admin(new_admin: AztecAddress) {\n        assert(storage.admin.read().eq(context.msg_sender()), \"Aztec Passport: Unauthorized Admin Change\");\n        storage.admin.write(new_admin);\n    }\n\n    #[public]\n    #[view]\n    fn get_admin_public() -> Field {\n        storage.admin.read().to_field()\n    }\n\n    #[public]\n    fn is_admin() -> bool {\n        storage.admin.read().eq(context.msg_sender())\n    }\n\n    #[public]\n    fn get_passport_address() -> AztecAddress {\n        storage.passport_address.get_current_value_in_public()\n    }\n\n    #[public]\n    fn set_passport_address(_passport_address: AztecAddress) {\n        storage.passport_address.schedule_value_change(_passport_address);\n    }\n\n    #[private]\n    fn verify(\n        address: AztecAddress,\n        header_array: [u8; MAX_EMAIL_HEADER_LENGTH],\n        header_length: u32,\n        body_array: [u8; MAX_EMAIL_BODY_LENGTH],\n        body_length: u32,\n        pubkey_modulus: [Field; KEY_LIMBS_2048],\n        pubkey_redc: [Field; KEY_LIMBS_2048],\n        signature: [Field; KEY_LIMBS_2048],\n        body_hash_index: u32,\n        dkim_header_sequence_index: u32,\n        dkim_header_sequence_length: u32,\n        from_header_sequence_index: u32,\n        from_header_sequence_length: u32,\n        from_address_sequence_index: u32,\n        from_address_sequence_length: u32,\n        username_array: [u8; MAX_USERNAME_LENGTH],\n        username_length: u32\n    ) {\n        let passport_address = storage.passport_address.get_current_value_in_private();\n\n        let mut expected_username: BoundedVec<u8, MAX_USERNAME_LENGTH> = BoundedVec::from(username_array);\n        let mut header: BoundedVec<u8, MAX_EMAIL_HEADER_LENGTH> = BoundedVec::from(header_array);\n        let mut body: BoundedVec<u8, MAX_EMAIL_BODY_LENGTH> = BoundedVec::from(body_array);\n\n        expected_username.len= username_length;\n        header.len= header_length;\n        body.len= body_length;\n\n        let pubkey = RSAPubkey { modulus: pubkey_modulus, redc: pubkey_redc };\n\n        let from_address_sequence = Sequence { index: from_address_sequence_index, length: from_address_sequence_length };\n\n        let from_header_sequence = Sequence { index: from_header_sequence_index, length: from_header_sequence_length };\n\n        let dkim_header_sequence = Sequence { index: dkim_header_sequence_index, length: dkim_header_sequence_length };\n\n        let extracted_username = verify_x(\n            header,\n            body,\n            pubkey,\n            signature,\n            body_hash_index,\n            dkim_header_sequence,\n            from_header_sequence,\n            from_address_sequence,\n            expected_username\n        );\n\n        assert(expected_username.is_eq(extracted_username.storage));\n\n        let index = AztecPassport::at(passport_address).get_service_index_private(context.this_address()).view(&mut context);\n        let _ = AztecPassport::at(passport_address).verify_service(address, index, context.this_address()).call(&mut context);\n    }\n}\n"},"78":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/note/utils.nr","source":"use crate::{\n    context::PrivateContext,\n    note::{note_header::NoteHeader, note_interface::{NullifiableNote, NoteInterface}}\n};\n\nuse dep::protocol_types::{\n    hash::{\n    compute_unique_note_hash, compute_siloed_note_hash as compute_siloed_note_hash,\n    compute_siloed_nullifier as compute_siloed_nullifier_from_preimage\n},\n    utils::arr_copy_slice\n};\n\npub fn compute_siloed_nullifier<Note, let N: u32>(\n    note_with_header: Note,\n    context: &mut PrivateContext\n) -> Field where Note: NoteInterface<N> + NullifiableNote {\n    let header = note_with_header.get_header();\n    let note_hash_for_nullify = compute_note_hash_for_nullify(note_with_header);\n    let inner_nullifier = note_with_header.compute_nullifier(context, note_hash_for_nullify);\n\n    compute_siloed_nullifier_from_preimage(header.contract_address, inner_nullifier)\n}\n\n// TODO(#7775): make this not impossible to understand\npub fn compute_note_hash_for_read_request<Note, let N: u32>(note: Note) -> Field where Note: NoteInterface<N> + NullifiableNote {\n    let note_hash = note.compute_note_hash();\n    let nonce = note.get_header().nonce;\n    let counter = note.get_header().note_hash_counter;\n\n    if counter != 0 {\n        note_hash\n    } else {\n        compute_unique_note_hash(nonce, note_hash)\n    }\n}\n\n// TODO(#7775): make this not impossible to understand\npub fn compute_note_hash_for_nullify_internal<Note, let N: u32>(\n    note: Note,\n    note_hash_for_read_request: Field\n) -> Field where Note: NoteInterface<N> + NullifiableNote {\n    let header = note.get_header();\n\n    if header.note_hash_counter != 0 {\n        if header.nonce == 0 {\n            // Case 1: Transient note\n            note_hash_for_read_request\n        } else {\n            // Case 2: Non-revertible note, nullified by a revertible nullifier\n            let unique_note_hash = compute_unique_note_hash(header.nonce, note_hash_for_read_request);\n            compute_siloed_note_hash(header.contract_address, unique_note_hash)\n        }\n    } else {\n        // Case 3: Note from a previous transaction\n        // note_hash_for_read_request is already the unique_note_hash in this case\n        compute_siloed_note_hash(header.contract_address, note_hash_for_read_request)\n    }\n}\n\n// TODO(#7775): nuke this commented out code - kept it around as it contains comments which might be helpful when tackling #7775\n// pub fn compute_note_hash_for_nullify<Note, let N: u32, let M: u32>(note: Note) -> Field where Note: NoteInterface<N> {\n//     let header = note.get_header();\n//     // There are 3 cases for reading a note intended for consumption:\n//     // 1. The note was inserted in this transaction, is revertible, or is not nullified by a revertible nullifier in\n//     //    the same transaction: (note_hash_counter != 0) & (nonce == 0)\n//     // 2. The note was inserted in this transaction, is non-revertible, and is nullified by a revertible nullifier in\n//     //    the same transaction: (note_hash_counter != 0) & (nonce != 0)\n//     // 3. The note was inserted in a previous transaction: (note_hash_counter == 0) & (nonce != 0)\n\n//     let note_hash = note.compute_note_hiding_point().x;\n\n//     if header.nonce == 0 {\n//         // Case 1.\n//         // If a note is transient, we just read the note_hash (kernel will hash it with nonce and silo by contract address).\n//         note_hash\n//     } else {\n//         // Case 2: If a note is non-revertible, and is nullified by a revertible nullifier, we cannot squash them in the\n//         // private reset circuit. Because if the tx reverts, we will have to keep the note hash and throw away the\n//         // nullifier.\n//         // And if the tx does not revert, both will be emitted. In which case, the nullifier must be created in the app\n//         // from the siloed note hash.\n//         // The kernel circuit will check that a nullifier with non-zero note_nonce is linked to a note hash, whose\n//         // siloed note hash matches the note hash specified in the nullifier.\n\n//         // Case 3: If a note is not from the current transaction, that means we are reading a settled note (from\n//         // tree) created in a previous TX. So we need the siloed_note_hash which has already been hashed with\n//         // nonce and then contract address. This hash will match the existing leaf in the note hash\n//         // tree, so the kernel can just perform a membership check directly on this hash/leaf.\n//         let unique_note_hash = compute_unique_note_hash(header.nonce, note_hash);\n//         compute_siloed_note_hash(header.contract_address, unique_note_hash)\n//         // IMPORTANT NOTE ON REDUNDANT SILOING BY CONTRACT ADDRESS: The note hash computed above is\n//         // \"siloed\" by contract address. When a note hash is computed solely for the purpose of\n//         // nullification, it is not strictly necessary to silo the note hash before computing\n//         // its nullifier. In other words, it is NOT NECESSARY for protocol security that a nullifier\n//         // be computed from a siloed note hash. After all, persistable note hashes and nullifiers are\n//         // siloed by the kernel circuit. That being said, the siloed note hash computed above CAN be\n//         // used for nullifier computation, and this achieves the (arguably unnecessary) property that\n//         // nullifiers are computed from a note hash's fully-computed note hash tree leaf.\n//     }\n// }\n\npub fn compute_note_hash_for_nullify<Note, let N: u32>(note: Note) -> Field where Note: NoteInterface<N> + NullifiableNote {\n    let note_hash_for_read_request = compute_note_hash_for_read_request(note);\n    compute_note_hash_for_nullify_internal(note, note_hash_for_read_request)\n}\n\nunconstrained pub fn compute_note_hash_and_optionally_a_nullifier<T, let N: u32, let S: u32>(\n    deserialize_content: fn([Field; N]) -> T,\n    note_header: NoteHeader,\n    compute_nullifier: bool,\n    serialized_note: [Field; S]\n) -> [Field; 4] where T: NoteInterface<N> + NullifiableNote {\n    let mut note = deserialize_content(arr_copy_slice(serialized_note, [0; N], 0));\n    note.set_header(note_header);\n\n    let note_hash = note.compute_note_hash();\n    let unique_note_hash = compute_unique_note_hash(note_header.nonce, note_hash);\n    let siloed_note_hash = compute_siloed_note_hash(note_header.contract_address, unique_note_hash);\n\n    let inner_nullifier = if compute_nullifier {\n        note.compute_nullifier_without_context()\n    } else {\n        0\n    };\n    // docs:start:compute_note_hash_and_optionally_a_nullifier_returns\n    [note_hash, unique_note_hash, siloed_note_hash, inner_nullifier]\n    // docs:end:compute_note_hash_and_optionally_a_nullifier_returns\n}\n"},"87":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/context/packed_returns.nr","source":"use crate::{hash::hash_args_array, oracle::returns::unpack_returns};\nuse dep::protocol_types::traits::Deserialize;\n\npub struct PackedReturns {\n  packed_returns: Field,\n}\n\nimpl PackedReturns {\n    pub fn new(packed_returns: Field) -> Self {\n        PackedReturns { packed_returns }\n    }\n\n    pub fn assert_empty(self) {\n        assert_eq(self.packed_returns, 0);\n    }\n\n    pub fn raw(self) -> Field {\n        self.packed_returns\n    }\n\n    pub fn unpack<let N: u32>(self) -> [Field; N] {\n        // We verify that the value returned by `unpack_returns` is the preimage of `packed_returns`, fully constraining\n        // it.\n        let unpacked: [Field; N] = unsafe {\n            unpack_returns(self.packed_returns)\n        };\n        assert_eq(self.packed_returns, hash_args_array(unpacked));\n        unpacked\n    }\n\n    pub fn unpack_into<T, let N: u32>(self) -> T where T: Deserialize<N> {\n        let unpacked: [Field; N] = self.unpack();\n        Deserialize::deserialize(unpacked)\n    }\n}\n"},"91":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/context/call_interfaces.nr","source":"use dep::protocol_types::{\n    abis::{function_selector::FunctionSelector, private_circuit_public_inputs::PrivateCircuitPublicInputs},\n    address::AztecAddress, traits::Deserialize\n};\n\nuse crate::context::{\n    private_context::PrivateContext, public_context::PublicContext, gas::GasOpts,\n    inputs::PrivateContextInputs\n};\n\nuse crate::oracle::arguments::pack_arguments;\nuse crate::hash::hash_args;\n\npub trait CallInterface<let N: u32, T, P, Env> {\n    fn get_original(self) -> fn[Env](T) -> P;\n\n    fn get_args(self) -> [Field] {\n        self.args\n    }\n\n    fn get_selector(self) -> FunctionSelector {\n        self.selector\n    }\n\n    fn get_name(self) -> str<N> {\n        self.name\n    }\n\n    fn get_contract_address(self) -> AztecAddress {\n        self.target_contract\n    }\n\n    fn get_is_static(self) -> bool {\n        self.is_static\n    }\n}\n\nimpl<let N: u32, T, P, Env> CallInterface<N, PrivateContextInputs, PrivateCircuitPublicInputs, Env> for PrivateCallInterface<N, T, Env> {\n    fn get_original(self) -> fn[Env](PrivateContextInputs) -> PrivateCircuitPublicInputs {\n        self.original\n    }\n}\n\npub struct PrivateCallInterface<let N: u32, T, Env> {\n    target_contract: AztecAddress,\n    selector: FunctionSelector,\n    name: str<N>,\n    args_hash: Field,\n    args: [Field],\n    original: fn[Env](PrivateContextInputs) -> PrivateCircuitPublicInputs,\n    is_static: bool\n}\n\nimpl<let N: u32, T, Env> PrivateCallInterface<N, T, Env> {\n    pub fn call<let M: u32>(self, context: &mut PrivateContext) -> T where T: Deserialize<M> {\n        pack_arguments(self.args);\n        let returns = context.call_private_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            self.args_hash,\n            false,\n            false\n        );\n        let unpacked: T = returns.unpack_into();\n        unpacked\n    }\n\n    pub fn view<let M: u32>(self, context: &mut PrivateContext) -> T where T: Deserialize<M> {\n        pack_arguments(self.args);\n        let returns = context.call_private_function_with_packed_args(self.target_contract, self.selector, self.args_hash, true, false);\n        returns.unpack_into()\n    }\n\n    pub fn delegate_call<let M: u32>(self, context: &mut PrivateContext) -> T where T: Deserialize<M> {\n        pack_arguments(self.args);\n        let returns = context.call_private_function_with_packed_args(self.target_contract, self.selector, self.args_hash, false, true);\n        returns.unpack_into()\n    }\n}\n\nimpl<let N: u32, T, P, Env> CallInterface<N, PrivateContextInputs, PrivateCircuitPublicInputs, Env> for PrivateVoidCallInterface<N, Env> {\n    fn get_original(self) -> fn[Env](PrivateContextInputs) -> PrivateCircuitPublicInputs {\n        self.original\n    }\n}\n\npub struct PrivateVoidCallInterface<let N: u32, Env> {\n    target_contract: AztecAddress,\n    selector: FunctionSelector,\n    name: str<N>,\n    args_hash: Field,\n    args: [Field],\n    original: fn[Env](PrivateContextInputs) -> PrivateCircuitPublicInputs,\n    is_static: bool\n}\n\nimpl<let N: u32, Env> PrivateVoidCallInterface<N, Env> {\n    pub fn call(self, context: &mut PrivateContext) {\n        pack_arguments(self.args);\n        context.call_private_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            self.args_hash,\n            false,\n            false\n        ).assert_empty();\n    }\n\n    pub fn view(self, context: &mut PrivateContext) {\n        pack_arguments(self.args);\n        context.call_private_function_with_packed_args(self.target_contract, self.selector, self.args_hash, true, false).assert_empty();\n    }\n\n    pub fn delegate_call(self, context: &mut PrivateContext) {\n        pack_arguments(self.args);\n        context.call_private_function_with_packed_args(self.target_contract, self.selector, self.args_hash, false, true).assert_empty();\n    }\n}\n\nimpl<let N: u32, T, P, Env> CallInterface<N, PrivateContextInputs, PrivateCircuitPublicInputs, Env> for PrivateStaticCallInterface<N, T, Env> {\n    fn get_original(self) -> fn[Env](PrivateContextInputs) -> PrivateCircuitPublicInputs {\n        self.original\n    }\n}\n\npub struct PrivateStaticCallInterface<let N: u32, T, Env> {\n    target_contract: AztecAddress,\n    selector: FunctionSelector,\n    name: str<N>,\n    args_hash: Field,\n    args: [Field],\n    original: fn[Env](PrivateContextInputs) -> PrivateCircuitPublicInputs,\n    is_static: bool\n}\n\nimpl<let N: u32, T, Env> PrivateStaticCallInterface<N, T, Env> {\n    pub fn view<let M: u32>(self, context: &mut PrivateContext) -> T where T: Deserialize<M> {\n        pack_arguments(self.args);\n        let returns = context.call_private_function_with_packed_args(self.target_contract, self.selector, self.args_hash, true, false);\n        returns.unpack_into()\n    }\n}\n\nimpl<let N: u32, T, P, Env> CallInterface<N, PrivateContextInputs, PrivateCircuitPublicInputs, Env> for PrivateStaticVoidCallInterface<N, Env> {\n    fn get_original(self) -> fn[Env](PrivateContextInputs) -> PrivateCircuitPublicInputs {\n        self.original\n    }\n}\n\npub struct PrivateStaticVoidCallInterface<let N: u32, Env> {\n    target_contract: AztecAddress,\n    selector: FunctionSelector,\n    name: str<N>,\n    args_hash: Field,\n    args: [Field],\n    original: fn[Env](PrivateContextInputs) -> PrivateCircuitPublicInputs,\n    is_static: bool\n}\n\nimpl<let N: u32, Env> PrivateStaticVoidCallInterface<N, Env> {\n    pub fn view(self, context: &mut PrivateContext) {\n        pack_arguments(self.args);\n        context.call_private_function_with_packed_args(self.target_contract, self.selector, self.args_hash, true, false).assert_empty();\n    }\n}\n\nimpl<let N: u32, T, P, Env> CallInterface<N, (), T, Env> for PublicCallInterface<N, T, Env> {\n    fn get_original(self) -> fn[Env](()) -> T {\n        self.original\n    }\n}\n\npub struct PublicCallInterface<let N: u32, T, Env> {\n    target_contract: AztecAddress,\n    selector: FunctionSelector,\n    name: str<N>,\n    args: [Field],\n    gas_opts: GasOpts,\n    original: fn[Env](()) -> T,\n    is_static: bool\n}\n\nimpl<let N: u32, T, Env> PublicCallInterface<N, T, Env> {\n    pub fn with_gas(self: &mut Self, gas_opts: GasOpts) -> &mut Self {\n        self.gas_opts = gas_opts;\n        self\n    }\n\n    pub fn call<let M: u32>(self, context: &mut PublicContext) -> T where T: Deserialize<M> {\n        let returns = context.call_public_function(self.target_contract, self.selector, self.args, self.gas_opts);\n        returns.deserialize_into()\n    }\n\n    pub fn view<let M: u32>(self, context: &mut PublicContext) -> T where T: Deserialize<M> {\n        let returns = context.static_call_public_function(self.target_contract, self.selector, self.args, self.gas_opts);\n        returns.deserialize_into()\n    }\n\n    pub fn delegate_call<let M: u32>(self, context: &mut PublicContext) -> T where T: Deserialize<M> {\n        let returns = context.delegate_call_public_function(self.target_contract, self.selector, self.args);\n        returns.deserialize_into()\n    }\n\n    pub fn enqueue(self, context: &mut PrivateContext) {\n        let args_hash = hash_args(self.args);\n        pack_arguments(self.args);\n        context.call_public_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            args_hash,\n            /*static=*/ false,\n            /*delegate=*/ false\n        )\n    }\n\n    pub fn enqueue_view(self, context: &mut PrivateContext) {\n        let args_hash = hash_args(self.args);\n        pack_arguments(self.args);\n        context.call_public_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            args_hash,\n            /*static=*/ true,\n            /*delegate=*/ false\n        )\n    }\n\n    pub fn delegate_enqueue(self, context: &mut PrivateContext) {\n        let args_hash = hash_args(self.args);\n        pack_arguments(self.args);\n        context.call_public_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            args_hash,\n            /*static=*/ false,\n            /*delegate=*/ true\n        )\n    }\n}\n\nimpl<let N: u32, T, P, Env> CallInterface<N, (), (), Env> for PublicVoidCallInterface<N, Env> {\n    fn get_original(self) -> fn[Env](()) -> () {\n        self.original\n    }\n}\n\npub struct PublicVoidCallInterface<let N: u32, Env> {\n    target_contract: AztecAddress,\n    selector: FunctionSelector,\n    name: str<N>,\n    args: [Field],\n    original: fn[Env](()) -> (),\n    is_static: bool,\n    gas_opts: GasOpts\n}\n\nimpl<let N: u32, Env> PublicVoidCallInterface<N, Env> {\n    pub fn with_gas(self: &mut Self, gas_opts: GasOpts) -> &mut Self {\n        self.gas_opts = gas_opts;\n        self\n    }\n\n    pub fn call(self, context: &mut PublicContext) {\n        let returns = context.call_public_function(self.target_contract, self.selector, self.args, self.gas_opts);\n        returns.assert_empty()\n    }\n\n    pub fn view(self, context: &mut PublicContext) {\n        let returns = context.static_call_public_function(self.target_contract, self.selector, self.args, self.gas_opts);\n        returns.assert_empty()\n    }\n\n    pub fn delegate_call(self, context: &mut PublicContext) {\n        let returns = context.delegate_call_public_function(self.target_contract, self.selector, self.args);\n        returns.assert_empty()\n    }\n\n    pub fn enqueue(self, context: &mut PrivateContext) {\n        let args_hash = hash_args(self.args);\n        pack_arguments(self.args);\n        context.call_public_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            args_hash,\n            /*static=*/ false,\n            /*delegate=*/ false\n        )\n    }\n\n    pub fn enqueue_view(self, context: &mut PrivateContext) {\n        let args_hash = hash_args(self.args);\n        pack_arguments(self.args);\n        context.call_public_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            args_hash,\n            /*static=*/ true,\n            /*delegate=*/ false\n        )\n    }\n\n    pub fn delegate_enqueue(self, context: &mut PrivateContext) {\n        let args_hash = hash_args(self.args);\n        pack_arguments(self.args);\n        context.call_public_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            args_hash,\n            /*static=*/ false,\n            /*delegate=*/ true\n        )\n    }\n}\n\nimpl<let N: u32, T, P, Env> CallInterface<N, (), T, Env> for PublicStaticCallInterface<N, T, Env> {\n    fn get_original(self) -> fn[Env](()) -> T {\n        self.original\n    }\n}\n\npub struct PublicStaticCallInterface<let N: u32, T, Env> {\n    target_contract: AztecAddress,\n    selector: FunctionSelector,\n    name: str<N>,\n    args: [Field],\n    original: fn[Env](()) -> T,\n    is_static: bool,\n    gas_opts: GasOpts\n}\n\nimpl<let N: u32, T, Env> PublicStaticCallInterface<N, T, Env> {\n    pub fn with_gas(self: &mut Self, gas_opts: GasOpts) -> &mut Self {\n        self.gas_opts = gas_opts;\n        self\n    }\n\n    pub fn view<let M: u32>(self, context: &mut PublicContext) -> T where T: Deserialize<M> {\n        let returns = context.static_call_public_function(self.target_contract, self.selector, self.args, self.gas_opts);\n        let unpacked: T = returns.deserialize_into();\n        unpacked\n    }\n\n    pub fn enqueue_view(self, context: &mut PrivateContext) {\n        let args_hash = hash_args(self.args);\n        pack_arguments(self.args);\n        context.call_public_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            args_hash,\n            /*static=*/ true,\n            /*delegate=*/ false\n        )\n    }\n}\n\nimpl<let N: u32, T, P, Env> CallInterface<N, (), (), Env> for PublicStaticVoidCallInterface<N, Env> {\n    fn get_original(self) -> fn[Env](()) -> () {\n        self.original\n    }\n}\n\npub struct PublicStaticVoidCallInterface<let N: u32, Env> {\n    target_contract: AztecAddress,\n    selector: FunctionSelector,\n    name: str<N>,\n    args: [Field],\n    original: fn[Env](()) -> (),\n    is_static: bool,\n    gas_opts: GasOpts\n}\n\nimpl<let N: u32, Env> PublicStaticVoidCallInterface<N, Env> {\n    pub fn with_gas(self: &mut Self, gas_opts: GasOpts) -> &mut Self {\n        self.gas_opts = gas_opts;\n        self\n    }\n\n    pub fn view(self, context: &mut PublicContext) {\n        let returns = context.static_call_public_function(self.target_contract, self.selector, self.args, self.gas_opts);\n        returns.assert_empty()\n    }\n\n    pub fn enqueue_view(self, context: &mut PrivateContext) {\n        let args_hash = hash_args(self.args);\n        pack_arguments(self.args);\n        context.call_public_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            args_hash,\n            /*static=*/ true,\n            /*delegate=*/ false\n        )\n    }\n}\n"},"93":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/context/public_context.nr","source":"use crate::hash::{compute_secret_hash, compute_message_hash, compute_message_nullifier};\nuse dep::protocol_types::address::{AztecAddress, EthAddress};\nuse dep::protocol_types::constants::{MAX_FIELD_VALUE, PUBLIC_DISPATCH_SELECTOR};\nuse dep::protocol_types::traits::{Serialize, Deserialize, Empty};\nuse dep::protocol_types::abis::function_selector::FunctionSelector;\nuse crate::context::gas::GasOpts;\n\npub struct PublicContext {\n    args_hash: Option<Field>,\n    compute_args_hash: fn () -> Field,\n}\n\nimpl PublicContext {\n    pub fn new(compute_args_hash: fn() -> Field) -> Self {\n        PublicContext { args_hash: Option::none(), compute_args_hash }\n    }\n\n    pub fn emit_unencrypted_log<T, let N: u32>(_self: &mut Self, log: T) where T: Serialize<N> {\n        emit_unencrypted_log(Serialize::serialize(log).as_slice());\n    }\n\n    pub fn note_hash_exists(_self: Self, note_hash: Field, leaf_index: Field) -> bool {\n        note_hash_exists(note_hash, leaf_index) == 1\n    }\n\n    pub fn l1_to_l2_msg_exists(_self: Self, msg_hash: Field, msg_leaf_index: Field) -> bool {\n        l1_to_l2_msg_exists(msg_hash, msg_leaf_index) == 1\n    }\n\n    fn nullifier_exists(_self: Self, unsiloed_nullifier: Field, address: AztecAddress) -> bool {\n        nullifier_exists(unsiloed_nullifier, address.to_field()) == 1\n    }\n\n    fn consume_l1_to_l2_message(\n        &mut self,\n        content: Field,\n        secret: Field,\n        sender: EthAddress,\n        leaf_index: Field\n    ) {\n        let secret_hash = compute_secret_hash(secret);\n        let message_hash = compute_message_hash(\n            sender,\n            self.chain_id(),\n            /*recipient=*/ self.this_address(),\n            self.version(),\n            content,\n            secret_hash\n        );\n        let nullifier = compute_message_nullifier(message_hash, secret, leaf_index);\n\n        assert(\n            !self.nullifier_exists(nullifier, self.this_address()), \"L1-to-L2 message is already nullified\"\n        );\n        assert(\n            self.l1_to_l2_msg_exists(message_hash, leaf_index), \"Tried to consume nonexistent L1-to-L2 message\"\n        );\n\n        self.push_nullifier(nullifier);\n    }\n\n    fn message_portal(_self: &mut Self, recipient: EthAddress, content: Field) {\n        send_l2_to_l1_msg(recipient, content);\n    }\n\n    fn call_public_function<let RETURNS_COUNT: u32>(\n        _self: &mut Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field],\n        gas_opts: GasOpts\n    ) -> FunctionReturns<RETURNS_COUNT> {\n        let args = &[function_selector.to_field()].append(args);\n        let results = call(\n            gas_for_call(gas_opts),\n            contract_address,\n            args,\n            PUBLIC_DISPATCH_SELECTOR\n        );\n        let data_to_return: [Field; RETURNS_COUNT] = results.0;\n        let success: u8 = results.1;\n        assert(success == 1, \"Nested call failed!\");\n\n        FunctionReturns::new(data_to_return)\n    }\n\n    fn static_call_public_function<let RETURNS_COUNT: u32>(\n        _self: &mut Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field],\n        gas_opts: GasOpts\n    ) -> FunctionReturns<RETURNS_COUNT> {\n        let args = &[function_selector.to_field()].append(args);\n        let (data_to_return, success): ([Field; RETURNS_COUNT], u8) = call_static(\n            gas_for_call(gas_opts),\n            contract_address,\n            args,\n            PUBLIC_DISPATCH_SELECTOR\n        );\n\n        assert(success == 1, \"Nested static call failed!\");\n        FunctionReturns::new(data_to_return)\n    }\n\n    fn delegate_call_public_function<let RETURNS_COUNT: u32>(\n        _self: &mut Self,\n        _contract_address: AztecAddress,\n        _function_selector: FunctionSelector,\n        _args: [Field]\n    ) -> FunctionReturns<RETURNS_COUNT> {\n        panic(f\"'delegate_call_public_function' not implemented!\")\n    }\n\n    fn push_note_hash(_self: &mut Self, note_hash: Field) {\n        emit_note_hash(note_hash);\n    }\n    fn push_nullifier(_self: &mut Self, nullifier: Field) {\n        emit_nullifier(nullifier);\n    }\n\n    fn this_address(_self: Self) -> AztecAddress {\n        address()\n    }\n    pub fn storage_address(_self: Self) -> AztecAddress {\n        storage_address()\n    }\n    fn msg_sender(_self: Self) -> AztecAddress {\n        sender()\n    }\n    fn selector(_self: Self) -> FunctionSelector {\n        // The selector is the first element of the calldata when calling a public function through dispatch.\n        let raw_selector: [Field; 1] = calldata_copy(0, 1);\n        FunctionSelector::from_field(raw_selector[0])\n    }\n    fn get_args_hash(mut self) -> Field {\n        if !self.args_hash.is_some() {\n            self.args_hash = Option::some((self.compute_args_hash)());\n        }\n\n        self.args_hash.unwrap_unchecked()\n    }\n    fn transaction_fee(_self: Self) -> Field {\n        transaction_fee()\n    }\n\n    fn chain_id(_self: Self) -> Field {\n        chain_id()\n    }\n    fn version(_self: Self) -> Field {\n        version()\n    }\n    fn block_number(_self: Self) -> Field {\n        block_number()\n    }\n    fn timestamp(_self: Self) -> u64 {\n        timestamp()\n    }\n    pub fn fee_per_l2_gas(_self: Self) -> Field {\n        fee_per_l2_gas()\n    }\n    pub fn fee_per_da_gas(_self: Self) -> Field {\n        fee_per_da_gas()\n    }\n\n    fn l2_gas_left(_self: Self) -> Field {\n        l2_gas_left()\n    }\n    fn da_gas_left(_self: Self) -> Field {\n        da_gas_left()\n    }\n    fn is_static_call(_self: Self) -> bool {\n        is_static_call() == 1\n    }\n\n    fn raw_storage_read<let N: u32>(_self: Self, storage_slot: Field) -> [Field; N] {\n        let mut out = [0; N];\n        for i in 0..N {\n            out[i] = storage_read(storage_slot + i as Field);\n        }\n        out\n    }\n\n    fn storage_read<T, let N: u32>(self, storage_slot: Field) -> T where T: Deserialize<N> {\n        T::deserialize(self.raw_storage_read(storage_slot))\n    }\n\n    fn raw_storage_write<let N: u32>(_self: Self, storage_slot: Field, values: [Field; N]) {\n        for i in 0..N {\n            storage_write(storage_slot + i as Field, values[i]);\n        }\n    }\n\n    fn storage_write<T, let N: u32>(self, storage_slot: Field, value: T) where T: Serialize<N> {\n        self.raw_storage_write(storage_slot, value.serialize());\n    }\n}\n\n// Helper functions\nfn gas_for_call(user_gas: GasOpts) -> [Field; 2] {\n    // It's ok to use the max possible gas here, because the gas will be\n    // capped by the gas left in the (STATIC)CALL instruction.\n    [\n        user_gas.l2_gas.unwrap_or(MAX_FIELD_VALUE),\n        user_gas.da_gas.unwrap_or(MAX_FIELD_VALUE)\n    ]\n}\n\n// Unconstrained opcode wrappers (do not use directly).\nunconstrained fn address() -> AztecAddress {\n    address_opcode()\n}\nunconstrained fn storage_address() -> AztecAddress {\n    storage_address_opcode()\n}\nunconstrained fn sender() -> AztecAddress {\n    sender_opcode()\n}\nunconstrained fn portal() -> EthAddress {\n    portal_opcode()\n}\n// UNUSED: Remove.\n// unconstrained fn function_selector() -> u32 {\n//     function_selector_opcode()\n// }\nunconstrained fn transaction_fee() -> Field {\n    transaction_fee_opcode()\n}\nunconstrained fn chain_id() -> Field {\n    chain_id_opcode()\n}\nunconstrained fn version() -> Field {\n    version_opcode()\n}\nunconstrained fn block_number() -> Field {\n    block_number_opcode()\n}\nunconstrained fn timestamp() -> u64 {\n    timestamp_opcode()\n}\nunconstrained fn fee_per_l2_gas() -> Field {\n    fee_per_l2_gas_opcode()\n}\nunconstrained fn fee_per_da_gas() -> Field {\n    fee_per_da_gas_opcode()\n}\nunconstrained fn l2_gas_left() -> Field {\n    l2_gas_left_opcode()\n}\nunconstrained fn da_gas_left() -> Field {\n    da_gas_left_opcode()\n}\nunconstrained fn is_static_call() -> Field {\n    is_static_call_opcode()\n}\nunconstrained fn note_hash_exists(note_hash: Field, leaf_index: Field) -> u8 {\n    note_hash_exists_opcode(note_hash, leaf_index)\n}\nunconstrained fn emit_note_hash(note_hash: Field) {\n    emit_note_hash_opcode(note_hash)\n}\nunconstrained fn nullifier_exists(nullifier: Field, address: Field) -> u8 {\n    nullifier_exists_opcode(nullifier, address)\n}\nunconstrained fn emit_nullifier(nullifier: Field) {\n    emit_nullifier_opcode(nullifier)\n}\nunconstrained fn emit_unencrypted_log(message: [Field]) {\n    emit_unencrypted_log_opcode(message)\n}\nunconstrained fn l1_to_l2_msg_exists(msg_hash: Field, msg_leaf_index: Field) -> u8 {\n    l1_to_l2_msg_exists_opcode(msg_hash, msg_leaf_index)\n}\nunconstrained fn send_l2_to_l1_msg(recipient: EthAddress, content: Field) {\n    send_l2_to_l1_msg_opcode(recipient, content)\n}\nunconstrained fn call<let RET_SIZE: u32>(\n    gas: [Field; 2],\n    address: AztecAddress,\n    args: [Field],\n    function_selector: Field\n) -> ([Field; RET_SIZE], u8) {\n    call_opcode(gas, address, args, function_selector)\n}\nunconstrained fn call_static<let RET_SIZE: u32>(\n    gas: [Field; 2],\n    address: AztecAddress,\n    args: [Field],\n    function_selector: Field\n) -> ([Field; RET_SIZE], u8) {\n    call_static_opcode(gas, address, args, function_selector)\n}\n\nunconstrained pub fn calldata_copy<let N: u32>(cdoffset: u32, copy_size: u32) -> [Field; N] {\n    calldata_copy_opcode(cdoffset, copy_size)\n}\n\nunconstrained fn avm_return<let N: u32>(returndata: [Field; N]) {\n    return_opcode(returndata)\n}\n\nunconstrained fn storage_read(storage_slot: Field) -> Field {\n    storage_read_opcode(storage_slot)\n}\n\nunconstrained fn storage_write(storage_slot: Field, value: Field) {\n    storage_write_opcode(storage_slot, value);\n}\n\nimpl Empty for PublicContext {\n    fn empty() -> Self {\n        PublicContext::new(|| 0)\n    }\n}\n\n// AVM oracles (opcodes) follow, do not use directly.\n#[oracle(avmOpcodeAddress)]\nunconstrained fn address_opcode() -> AztecAddress {}\n\n#[oracle(avmOpcodeStorageAddress)]\nunconstrained fn storage_address_opcode() -> AztecAddress {}\n\n#[oracle(avmOpcodeSender)]\nunconstrained fn sender_opcode() -> AztecAddress {}\n\n#[oracle(avmOpcodePortal)]\nunconstrained fn portal_opcode() -> EthAddress {}\n\n// UNUSED: Remove.\n// #[oracle(avmOpcodeFunctionSelector)]\n// unconstrained fn function_selector_opcode() -> u32 {}\n\n#[oracle(avmOpcodeTransactionFee)]\nunconstrained fn transaction_fee_opcode() -> Field {}\n\n#[oracle(avmOpcodeChainId)]\nunconstrained fn chain_id_opcode() -> Field {}\n\n#[oracle(avmOpcodeVersion)]\nunconstrained fn version_opcode() -> Field {}\n\n#[oracle(avmOpcodeBlockNumber)]\nunconstrained fn block_number_opcode() -> Field {}\n\n#[oracle(avmOpcodeTimestamp)]\nunconstrained fn timestamp_opcode() -> u64 {}\n\n#[oracle(avmOpcodeFeePerL2Gas)]\nunconstrained fn fee_per_l2_gas_opcode() -> Field {}\n\n#[oracle(avmOpcodeFeePerDaGas)]\nunconstrained fn fee_per_da_gas_opcode() -> Field {}\n\n#[oracle(avmOpcodeL2GasLeft)]\nunconstrained fn l2_gas_left_opcode() -> Field {}\n\n#[oracle(avmOpcodeDaGasLeft)]\nunconstrained fn da_gas_left_opcode() -> Field {}\n\n#[oracle(avmOpcodeIsStaticCall)]\nunconstrained fn is_static_call_opcode() -> Field {}\n\n#[oracle(avmOpcodeNoteHashExists)]\nunconstrained fn note_hash_exists_opcode(note_hash: Field, leaf_index: Field) -> u8 {}\n\n#[oracle(avmOpcodeEmitNoteHash)]\nunconstrained fn emit_note_hash_opcode(note_hash: Field) {}\n\n#[oracle(avmOpcodeNullifierExists)]\nunconstrained fn nullifier_exists_opcode(nullifier: Field, address: Field) -> u8 {}\n\n#[oracle(avmOpcodeEmitNullifier)]\nunconstrained fn emit_nullifier_opcode(nullifier: Field) {}\n\n#[oracle(avmOpcodeEmitUnencryptedLog)]\nunconstrained fn emit_unencrypted_log_opcode(message: [Field]) {}\n\n#[oracle(avmOpcodeL1ToL2MsgExists)]\nunconstrained fn l1_to_l2_msg_exists_opcode(msg_hash: Field, msg_leaf_index: Field) -> u8 {}\n\n#[oracle(avmOpcodeSendL2ToL1Msg)]\nunconstrained fn send_l2_to_l1_msg_opcode(recipient: EthAddress, content: Field) {}\n\n#[oracle(avmOpcodeCalldataCopy)]\nunconstrained fn calldata_copy_opcode<let N: u32>(cdoffset: u32, copy_size: u32) -> [Field; N] {}\n\n#[oracle(avmOpcodeReturn)]\nunconstrained fn return_opcode<let N: u32>(returndata: [Field; N]) {}\n\n#[oracle(avmOpcodeCall)]\nunconstrained fn call_opcode<let RET_SIZE: u32>(\n    gas: [Field; 2], // gas allocation: [l2_gas, da_gas]\n    address: AztecAddress,\n    args: [Field],\n    // TODO(5110): consider passing in calldata directly\n    function_selector: Field\n) -> ([Field; RET_SIZE], u8) {}\n//    ^ return data      ^ success\n\n#[oracle(avmOpcodeStaticCall)]\nunconstrained fn call_static_opcode<let RET_SIZE: u32>(\n    gas: [Field; 2], // gas allocation: [l2_gas, da_gas]\n    address: AztecAddress,\n    args: [Field],\n    // TODO(5110): consider passing in calldata directly\n    function_selector: Field\n) -> ([Field; RET_SIZE], u8) {}\n//    ^ return data      ^ success\n\n#[oracle(avmOpcodeStorageRead)]\nunconstrained fn storage_read_opcode(storage_slot: Field) -> Field {}\n\n#[oracle(avmOpcodeStorageWrite)]\nunconstrained fn storage_write_opcode(storage_slot: Field, value: Field) {}\n\npub struct FunctionReturns<let N: u32> {\n    values: [Field; N]\n}\n\nimpl<let N: u32> FunctionReturns<N> {\n    pub fn new(values: [Field; N]) -> FunctionReturns<N> {\n        FunctionReturns { values }\n    }\n\n    pub fn raw(self) -> [Field; N] {\n        self.values\n    }\n\n    pub fn deserialize_into<T>(self) -> T where T: Deserialize<N> {\n        Deserialize::deserialize(self.raw())\n    }\n}\n\nimpl FunctionReturns<0> {\n    pub fn assert_empty(self) {\n        assert(self.values.len() == 0);\n    }\n}\n"},"94":{"path":"/Users/envoy1084/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.57.0/noir-projects/aztec-nr/aztec/src/context/private_context.nr","source":"use crate::{\n    context::{inputs::PrivateContextInputs, packed_returns::PackedReturns},\n    messaging::process_l1_to_l2_message, hash::{hash_args_array, ArgsHasher},\n    keys::constants::{NULLIFIER_INDEX, OUTGOING_INDEX, NUM_KEY_TYPES, sk_generators},\n    oracle::{\n    key_validation_request::get_key_validation_request, arguments, returns::pack_returns,\n    call_private_function::call_private_function_internal, header::get_header_at,\n    logs::{emit_encrypted_note_log, emit_encrypted_event_log},\n    enqueue_public_function_call::{\n    enqueue_public_function_call_internal, notify_set_min_revertible_side_effect_counter,\n    set_public_teardown_function_call_internal\n}\n}\n};\nuse dep::protocol_types::{\n    abis::{\n    call_context::CallContext, function_selector::FunctionSelector, max_block_number::MaxBlockNumber,\n    validation_requests::{KeyValidationRequest, KeyValidationRequestAndGenerator},\n    private_call_request::PrivateCallRequest, private_circuit_public_inputs::PrivateCircuitPublicInputs,\n    public_call_request::PublicCallRequest, read_request::ReadRequest, note_hash::NoteHash,\n    nullifier::Nullifier, log_hash::{LogHash, NoteLogHash, EncryptedLogHash}\n},\n    address::{AztecAddress, EthAddress},\n    constants::{\n    MAX_NOTE_HASHES_PER_CALL, MAX_L2_TO_L1_MSGS_PER_CALL, MAX_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_NOTE_HASH_READ_REQUESTS_PER_CALL, MAX_NULLIFIER_READ_REQUESTS_PER_CALL,\n    MAX_KEY_VALIDATION_REQUESTS_PER_CALL, MAX_ENCRYPTED_LOGS_PER_CALL, MAX_UNENCRYPTED_LOGS_PER_CALL,\n    MAX_NOTE_ENCRYPTED_LOGS_PER_CALL, PUBLIC_DISPATCH_SELECTOR\n},\n    header::Header, messaging::l2_to_l1_message::L2ToL1Message, traits::Empty\n};\n\n// When finished, one can call .finish() to convert back to the abi\npub struct PrivateContext {\n    // docs:start:private-context\n    inputs: PrivateContextInputs,\n    side_effect_counter: u32,\n\n    min_revertible_side_effect_counter: u32,\n    is_fee_payer: bool,\n\n    args_hash: Field,\n    return_hash: Field,\n\n    max_block_number: MaxBlockNumber,\n\n    note_hash_read_requests: BoundedVec<ReadRequest, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL>,\n    nullifier_read_requests: BoundedVec<ReadRequest, MAX_NULLIFIER_READ_REQUESTS_PER_CALL>,\n    key_validation_requests_and_generators: BoundedVec<KeyValidationRequestAndGenerator, MAX_KEY_VALIDATION_REQUESTS_PER_CALL>,\n\n    note_hashes: BoundedVec<NoteHash, MAX_NOTE_HASHES_PER_CALL>,\n    nullifiers: BoundedVec<Nullifier, MAX_NULLIFIERS_PER_CALL>,\n\n    private_call_requests : BoundedVec<PrivateCallRequest, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL>,\n    public_call_requests : BoundedVec<PublicCallRequest, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n    public_teardown_call_request: PublicCallRequest,\n    l2_to_l1_msgs : BoundedVec<L2ToL1Message, MAX_L2_TO_L1_MSGS_PER_CALL>,\n    // docs:end:private-context\n\n    // Header of a block whose state is used during private execution (not the block the transaction is included in).\n    historical_header: Header,\n\n    note_encrypted_logs_hashes: BoundedVec<NoteLogHash, MAX_NOTE_ENCRYPTED_LOGS_PER_CALL>,\n    encrypted_logs_hashes: BoundedVec<EncryptedLogHash, MAX_ENCRYPTED_LOGS_PER_CALL>,\n    unencrypted_logs_hashes: BoundedVec<LogHash, MAX_UNENCRYPTED_LOGS_PER_CALL>,\n\n    // Contains the last key validation request for each key type. This is used to cache the last request and avoid\n    // fetching the same request multiple times.\n    // The index of the array corresponds to the key type (0 nullifier, 1 incoming, 2 outgoing, 3 tagging).\n    last_key_validation_requests: [Option<KeyValidationRequest>; NUM_KEY_TYPES],\n}\n\nimpl PrivateContext {\n    pub fn new(inputs: PrivateContextInputs, args_hash: Field) -> PrivateContext {\n        PrivateContext {\n            inputs,\n            side_effect_counter: inputs.start_side_effect_counter + 1,\n            min_revertible_side_effect_counter: 0,\n            is_fee_payer: false,\n            args_hash,\n            return_hash: 0,\n            max_block_number: MaxBlockNumber::empty(),\n            note_hash_read_requests: BoundedVec::new(),\n            nullifier_read_requests: BoundedVec::new(),\n            key_validation_requests_and_generators: BoundedVec::new(),\n            note_hashes: BoundedVec::new(),\n            nullifiers: BoundedVec::new(),\n            historical_header: inputs.historical_header,\n            private_call_requests: BoundedVec::new(),\n            public_call_requests: BoundedVec::new(),\n            public_teardown_call_request: PublicCallRequest::empty(),\n            l2_to_l1_msgs: BoundedVec::new(),\n            note_encrypted_logs_hashes: BoundedVec::new(),\n            encrypted_logs_hashes: BoundedVec::new(),\n            unencrypted_logs_hashes: BoundedVec::new(),\n            last_key_validation_requests: [Option::none(); NUM_KEY_TYPES]\n        }\n    }\n\n    fn msg_sender(self) -> AztecAddress {\n        self.inputs.call_context.msg_sender\n    }\n\n    fn this_address(self) -> AztecAddress {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    fn chain_id(self) -> Field {\n        self.inputs.tx_context.chain_id\n    }\n\n    fn version(self) -> Field {\n        self.inputs.tx_context.version\n    }\n\n    fn selector(self) -> FunctionSelector {\n        self.inputs.call_context.function_selector\n    }\n\n    fn get_args_hash(self) -> Field {\n        self.args_hash\n    }\n\n    fn push_note_hash(&mut self, note_hash: Field) {\n        self.note_hashes.push(NoteHash { value: note_hash, counter: self.next_counter() });\n    }\n\n    fn push_nullifier(&mut self, nullifier: Field) {\n        self.nullifiers.push(Nullifier { value: nullifier, note_hash: 0, counter: self.next_counter() });\n    }\n\n    fn push_nullifier_for_note_hash(&mut self, nullifier: Field, nullified_note_hash: Field) {\n        self.nullifiers.push(Nullifier { value: nullifier, note_hash: nullified_note_hash, counter: self.next_counter() });\n    }\n\n    // Returns the header of a block whose state is used during private execution (not the block the transaction is\n    // included in).\n    fn get_header(self) -> Header {\n        self.historical_header\n    }\n\n    // Returns the header of an arbitrary block whose block number is less than or equal to the block number\n    // of historical header.\n    pub fn get_header_at(self, block_number: u32) -> Header {\n        get_header_at(block_number, self)\n    }\n\n    pub fn set_return_hash(&mut self, returns_hasher: ArgsHasher) {\n        pack_returns(returns_hasher.fields);\n        self.return_hash = returns_hasher.hash();\n    }\n\n    pub fn finish(self) -> PrivateCircuitPublicInputs {\n        PrivateCircuitPublicInputs {\n            call_context: self.inputs.call_context,\n            args_hash: self.args_hash,\n            returns_hash: self.return_hash,\n            min_revertible_side_effect_counter: self.min_revertible_side_effect_counter,\n            is_fee_payer: self.is_fee_payer,\n            max_block_number: self.max_block_number,\n            note_hash_read_requests: self.note_hash_read_requests.storage,\n            nullifier_read_requests: self.nullifier_read_requests.storage,\n            key_validation_requests_and_generators: self.key_validation_requests_and_generators.storage,\n            note_hashes: self.note_hashes.storage,\n            nullifiers: self.nullifiers.storage,\n            private_call_requests: self.private_call_requests.storage,\n            public_call_requests: self.public_call_requests.storage,\n            public_teardown_call_request: self.public_teardown_call_request,\n            l2_to_l1_msgs: self.l2_to_l1_msgs.storage,\n            start_side_effect_counter: self.inputs.start_side_effect_counter,\n            end_side_effect_counter: self.side_effect_counter,\n            note_encrypted_logs_hashes: self.note_encrypted_logs_hashes.storage,\n            encrypted_logs_hashes: self.encrypted_logs_hashes.storage,\n            unencrypted_logs_hashes: self.unencrypted_logs_hashes.storage,\n            historical_header: self.historical_header,\n            tx_context: self.inputs.tx_context\n        }\n    }\n\n    pub fn set_as_fee_payer(&mut self) {\n        dep::protocol_types::debug_log::debug_log_format(\"Setting {0} as fee payer\", [self.this_address().to_field()]);\n        self.is_fee_payer = true;\n    }\n\n    pub fn end_setup(&mut self) {\n        // dep::protocol_types::debug_log::debug_log_format(\n        //     \"Ending setup at counter {0}\",\n        //     [self.side_effect_counter as Field]\n        // );\n        self.min_revertible_side_effect_counter = self.side_effect_counter;\n        notify_set_min_revertible_side_effect_counter(self.min_revertible_side_effect_counter);\n    }\n\n    // docs:start:max-block-number\n    pub fn set_tx_max_block_number(&mut self, max_block_number: u32) {\n        // docs:end:max-block-number\n        self.max_block_number = MaxBlockNumber::min_with_u32(self.max_block_number, max_block_number);\n    }\n\n    pub fn push_note_hash_read_request(&mut self, note_hash: Field) {\n        let side_effect = ReadRequest { value: note_hash, counter: self.next_counter() };\n        self.note_hash_read_requests.push(side_effect);\n    }\n\n    pub fn push_nullifier_read_request(&mut self, nullifier: Field) {\n        let request = ReadRequest { value: nullifier, counter: self.next_counter() };\n        self.nullifier_read_requests.push(request);\n    }\n\n    pub fn request_nsk_app(&mut self, npk_m_hash: Field) -> Field {\n        self.request_sk_app(npk_m_hash, NULLIFIER_INDEX)\n    }\n\n    pub fn request_ovsk_app(&mut self, ovpk_m_hash: Field) -> Field {\n        self.request_sk_app(ovpk_m_hash, OUTGOING_INDEX)\n    }\n\n    fn request_sk_app(&mut self, pk_m_hash: Field, key_index: Field) -> Field {\n        let cached_request = self.last_key_validation_requests[key_index].unwrap_or(KeyValidationRequest::empty());\n\n        if cached_request.pk_m.hash() == pk_m_hash {\n            // We get a match so the cached request is the latest one\n            cached_request.sk_app\n        } else {\n            // We didn't get a match meaning the cached result is stale. We fetch new values from oracle and instruct\n            // protocol circuits to validate them by storing the validation request in context.\n            let request = get_key_validation_request(pk_m_hash, key_index);\n            let request_and_generator = KeyValidationRequestAndGenerator { request, sk_app_generator: sk_generators[key_index] };\n            // We constrain that the pk_m_hash matches the one in the request (otherwise we could get an arbitrary\n            // valid key request and not the one corresponding to pk_m_hash).\n            assert(request.pk_m.hash() == pk_m_hash);\n            self.key_validation_requests_and_generators.push(request_and_generator);\n            self.last_key_validation_requests[key_index] = Option::some(request);\n            request.sk_app\n        }\n    }\n\n    // docs:start:context_message_portal\n    pub fn message_portal(&mut self, recipient: EthAddress, content: Field) {\n        // docs:end:context_message_portal\n        let message = L2ToL1Message { recipient, content, counter: self.next_counter() };\n        self.l2_to_l1_msgs.push(message);\n    }\n\n    // docs:start:context_consume_l1_to_l2_message\n    // docs:start:consume_l1_to_l2_message\n    pub fn consume_l1_to_l2_message(&mut self, content: Field, secret: Field, sender: EthAddress) {\n        // docs:end:context_consume_l1_to_l2_message\n        let nullifier = process_l1_to_l2_message(\n            self.historical_header.state.l1_to_l2_message_tree.root,\n            self.this_address(),\n            sender,\n            self.chain_id(),\n            self.version(),\n            content,\n            secret\n        );\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_nullifier(nullifier)\n    }\n    // docs:end:consume_l1_to_l2_message\n\n    // NB: A randomness value of 0 signals that the kernels should not mask the contract address\n    // used in siloing later on e.g. 'handshaking' contract w/ known address.\n    pub fn emit_raw_event_log_with_masked_address<let M: u32>(\n        &mut self,\n        randomness: Field,\n        log: [u8; M],\n        log_hash: Field\n    ) {\n        let counter = self.next_counter();\n        let contract_address = self.this_address();\n        let len = log.len() as Field + 4;\n        let side_effect = EncryptedLogHash { value: log_hash, counter, length: len, randomness };\n        self.encrypted_logs_hashes.push(side_effect);\n\n        emit_encrypted_event_log(contract_address, randomness, log, counter);\n    }\n\n    pub fn emit_raw_note_log<let M: u32>(&mut self, note_hash_counter: u32, log: [u8; M], log_hash: Field) {\n        let counter = self.next_counter();\n        let len = log.len() as Field + 4;\n        let side_effect = NoteLogHash { value: log_hash, counter, length: len, note_hash_counter };\n        self.note_encrypted_logs_hashes.push(side_effect);\n\n        emit_encrypted_note_log(note_hash_counter, log, counter);\n    }\n\n    pub fn call_private_function<let ARGS_COUNT: u32>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> PackedReturns {\n        let args_hash = hash_args_array(args);\n        arguments::pack_arguments_array(args);\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash, false, false)\n    }\n\n    pub fn static_call_private_function<let ARGS_COUNT: u32>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> PackedReturns {\n        let args_hash = hash_args_array(args);\n        arguments::pack_arguments_array(args);\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash, true, false)\n    }\n\n    pub fn delegate_call_private_function<let ARGS_COUNT: u32>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> PackedReturns {\n        let args_hash = hash_args_array(args);\n        arguments::pack_arguments_array(args);\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash, false, true)\n    }\n\n    pub fn call_private_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> PackedReturns {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0, false, false)\n    }\n\n    pub fn static_call_private_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> PackedReturns {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0, true, false)\n    }\n\n    pub fn delegate_call_private_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> PackedReturns {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0, false, true)\n    }\n\n    pub fn call_private_function_with_packed_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args_hash: Field,\n        is_static_call: bool,\n        is_delegate_call: bool\n    ) -> PackedReturns {\n        let mut is_static_call = is_static_call | self.inputs.call_context.is_static_call;\n        let start_side_effect_counter = self.side_effect_counter;\n        let (end_side_effect_counter, returns_hash) = call_private_function_internal(\n            contract_address,\n            function_selector,\n            args_hash,\n            start_side_effect_counter,\n            is_static_call,\n            is_delegate_call\n        );\n\n        self.side_effect_counter = end_side_effect_counter + 1;\n\n        // TODO (fees) figure out why this crashes the prover and enable it\n        // we need this in order to pay fees inside child call contexts\n        // assert(\n        //     (item.public_inputs.min_revertible_side_effect_counter == 0 as u32)\n        //     | (item.public_inputs.min_revertible_side_effect_counter\n        //         > self.min_revertible_side_effect_counter)\n        // );\n\n        // if item.public_inputs.min_revertible_side_effect_counter\n        //     > self.min_revertible_side_effect_counter {\n        //     self.min_revertible_side_effect_counter = item.public_inputs.min_revertible_side_effect_counter;\n        // }\n\n        let call_context = self.generate_call_context(\n            contract_address,\n            function_selector,\n            is_static_call,\n            is_delegate_call\n        );\n\n        self.private_call_requests.push(\n            PrivateCallRequest {\n            contract_address,\n            call_context,\n            args_hash,\n            returns_hash,\n            start_side_effect_counter,\n            end_side_effect_counter\n        }\n        );\n\n        PackedReturns::new(returns_hash)\n    }\n\n    pub fn call_public_function<let ARGS_COUNT: u32>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args_array(args);\n        arguments::pack_arguments_array(args);\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, false, false)\n    }\n\n    pub fn static_call_public_function<let ARGS_COUNT: u32>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args_array(args);\n        arguments::pack_arguments_array(args);\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, true, false)\n    }\n\n    pub fn delegate_call_public_function<let ARGS_COUNT: u32>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args_array(args);\n        arguments::pack_arguments_array(args);\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, false, true)\n    }\n\n    pub fn call_public_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, false, false)\n    }\n\n    pub fn static_call_public_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, true, false)\n    }\n\n    pub fn delegate_call_public_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, false, true)\n    }\n\n    pub fn call_public_function_with_packed_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args_hash: Field,\n        is_static_call: bool,\n        is_delegate_call: bool\n    ) {\n        let counter = self.next_counter();\n\n        let mut is_static_call = is_static_call | self.inputs.call_context.is_static_call;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/8985): Fix this.\n        // WARNING: This is insecure and should be temporary!\n        // The oracle repacks the arguments and returns a new args_hash.\n        // new_args = [selector, ...old_args], so as to make it suitable to call the public dispatch function.\n        // We don't validate or compute it in the circuit because a) it's harder to do with slices, and\n        // b) this is only temporary.\n        let args_hash = enqueue_public_function_call_internal(\n            contract_address,\n            function_selector,\n            args_hash,\n            counter,\n            is_static_call,\n            is_delegate_call\n        );\n\n        // Public calls are rerouted through the dispatch function.\n        let function_selector = comptime {\n            FunctionSelector::from_field(PUBLIC_DISPATCH_SELECTOR)\n        };\n        let call_context = self.generate_call_context(\n            contract_address,\n            function_selector,\n            is_static_call,\n            is_delegate_call\n        );\n\n        let call_request = PublicCallRequest { contract_address, call_context, args_hash, counter };\n        self.public_call_requests.push(call_request);\n    }\n\n    pub fn set_public_teardown_function<let ARGS_COUNT: u32>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args_array(args);\n        arguments::pack_arguments_array(args);\n        self.set_public_teardown_function_with_packed_args(contract_address, function_selector, args_hash, false, false)\n    }\n\n    pub fn set_public_teardown_function_with_packed_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args_hash: Field,\n        is_static_call: bool,\n        is_delegate_call: bool\n    ) {\n        let counter = self.next_counter();\n\n        let mut is_static_call = is_static_call | self.inputs.call_context.is_static_call;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/8985): Fix this.\n        // WARNING: This is insecure and should be temporary!\n        // The oracle repacks the arguments and returns a new args_hash.\n        // new_args = [selector, ...old_args], so as to make it suitable to call the public dispatch function.\n        // We don't validate or compute it in the circuit because a) it's harder to do with slices, and\n        // b) this is only temporary.\n        let args_hash = set_public_teardown_function_call_internal(\n            contract_address,\n            function_selector,\n            args_hash,\n            counter,\n            is_static_call,\n            is_delegate_call\n        );\n\n        let function_selector = comptime {\n            FunctionSelector::from_field(PUBLIC_DISPATCH_SELECTOR)\n        };\n        let call_context = self.generate_call_context(\n            contract_address,\n            function_selector,\n            is_static_call,\n            is_delegate_call\n        );\n\n        self.public_teardown_call_request = PublicCallRequest {\n            contract_address,\n            call_context,\n            args_hash,\n            counter,\n        };\n    }\n\n    fn generate_call_context(\n        self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        is_static_call: bool,\n        is_delegate_call: bool\n    ) -> CallContext {\n        let msg_sender = if is_delegate_call {\n            self.msg_sender()\n        } else {\n            self.this_address()\n        };\n        let storage_contract_address = if is_delegate_call {\n            self.this_address()\n        } else {\n            contract_address\n        };\n        CallContext { msg_sender, storage_contract_address, function_selector, is_static_call, is_delegate_call }\n    }\n\n    fn next_counter(&mut self) -> u32 {\n        let counter = self.side_effect_counter;\n        self.side_effect_counter += 1;\n        counter\n    }\n}\n\nimpl Empty for PrivateContext {\n    fn empty() -> Self {\n        PrivateContext {\n            inputs: PrivateContextInputs::empty(),\n            side_effect_counter: 0 as u32,\n            min_revertible_side_effect_counter: 0 as u32,\n            is_fee_payer: false,\n            args_hash: 0,\n            return_hash: 0,\n            max_block_number: MaxBlockNumber::empty(),\n            note_hash_read_requests: BoundedVec::new(),\n            nullifier_read_requests: BoundedVec::new(),\n            key_validation_requests_and_generators: BoundedVec::new(),\n            note_hashes: BoundedVec::new(),\n            nullifiers: BoundedVec::new(),\n            private_call_requests: BoundedVec::new(),\n            public_call_requests: BoundedVec::new(),\n            public_teardown_call_request: PublicCallRequest::empty(),\n            l2_to_l1_msgs: BoundedVec::new(),\n            historical_header: Header::empty(),\n            note_encrypted_logs_hashes: BoundedVec::new(),\n            encrypted_logs_hashes: BoundedVec::new(),\n            unencrypted_logs_hashes: BoundedVec::new(),\n            last_key_validation_requests: [Option::none(); NUM_KEY_TYPES]\n        }\n    }\n}\n"}}}